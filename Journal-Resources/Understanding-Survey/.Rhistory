varRatingP <- paste(p, "RRating", sep = "")
varRatingAP <- paste(ap, "RRating", sep = "")
varTAUP <- paste("TAU", p, sep = "_")
varTAUAP <- paste("TAU", ap, sep = "_")
resP <- lm(
as.formula(paste(varTAUP, "~", varRatingP)),
data = data
)
resAP <- lm(
as.formula(paste(varTAUAP, "~", varRatingAP)),
data = data
)
df <- rbind(df,
data.frame(
rule = ap,
P_adjustedR2 = summary(resP)$adj.r.squared,
P_p.value = format.pval(summary(resP)$coefficients[8], digits = 4, eps = 0.001),
AP_adjustedR2 = summary(resAP)$adj.r.squared,
AP_p.value = format.pval(summary(resAP)$coefficients[8], digits = 4, eps = 0.001)
),
make.row.names = FALSE
)
}
print(df)
df %>% arrange(AP_adjustedR2) %>%
print
# visualize adjusted R-squared values for violation
barplotData <- df %>%
select(rule, AP_adjustedR2)
# use ggplot to print the bar chart
ggplot(barplotData, aes(x = reorder(rule, AP_adjustedR2), y = AP_adjustedR2)) +
geom_bar(
stat = "identity",
width = 0.8,
fill = "#dd1100"
) +
# control space for the labels
scale_y_continuous(expand = expansion(mult = c(0.01, 0.12))) +
# bar label text and positioning
geom_text(
aes(
label = sprintf("%.2f", round(AP_adjustedR2, 2)),
# fix label placement for negative numbers
y = ifelse(AP_adjustedR2 > 0, AP_adjustedR2 + 0.001, AP_adjustedR2 - 0.025)
),
size = 5,
fontface = "bold",
hjust = -0.05
) +
theme_classic() +
labs(x = "Rule", y = "Adjusted R-squared") +
theme(
text = element_text(size = 16, face = "bold", family = "sans"),
axis.title = element_text(size = 16),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 16)
) +
# flip the chart horizontally
coord_flip()
# aggregate mean values for TAU, perceived understandability, correctness, and time (needed for RQ3)
correlationUndData <- data %>%
rowwise() %>%
mutate(
mean_TAU_P = ifelse(
mean(c(TAU_Tidy, TAU_Contextual, TAU_Verbless, TAU_Consistent, TAU_Descriptive, TAU_Hierarchical, TAU_Pertinent), na.rm = TRUE),
mean(c(TAU_Standard, TAU_Singularized, TAU_Versioned, TAU_Adherence, TAU_ConArchetype, TAU_Annotation, TAU_Structured), na.rm = TRUE)
)
) %>%
mutate(
mean_TAU_AP =
mean(c(TAU_Amorphous, TAU_Contextless, TAU_CRUDy, TAU_Inconsistent, TAU_NonDescriptive, TAU_NonHierarchical, TAU_NonPertinent), na.rm = TRUE),
mean(c(TAU_NonStandard, TAU_Pluralized, TAU_Unversioned, TAU_Tunneling, TAU_InconArchetype, TAU_Ambiguity, TAU_Flat), na.rm = TRUE)
) %>%
mutate(
mean_perceivedDifficulty_P = ifelse(
mean(c(TidyURating, ContextualURating, VerblessURating, ConsistentURating, DescriptiveURating, HierarchicalURating, PertinentURating), na.rm = TRUE),
mean(c(StandardURating, SingularizedURating, VersionedURating, AdherenceURating, ConArchetypeURating, AnnotationURating, StructuredURating), na.rm = TRUE)
)
) %>%
mutate(
mean_perceivedDifficulty_AP = ifelse(
mean(c(AmorphousURating, ContextlessURating, CRUDyURating, InconsistentURating, NonDescriptiveURating, NonHierarchicalURating, NonPertinentURating), na.rm = TRUE),
mean(c(NonStandardURating, PluralizedURating, UnversionedURating, TunnelingURating, InconArchetypeURating, AmbiguityURating, FlatURating), na.rm = TRUE)
)
) %>%
mutate(
mean_Time_P = ifelse(
mean(c(TidyTime, ContextualURating, VerblessTime, ConsistentTime, DescriptiveTime, HierarchicalTime, PertinentTime), na.rm = TRUE),
mean(c(StandardTime, SingularizedTime, VersionedTime, AdherenceTime, ConArchetypeTime, AnnotationTime, StructuredTime), na.rm = TRUE)
)
) %>%
mutate(
mean_Time_AP =
mean(c(AmorphousTime, ContextlessTime, CRUDyTime, InconsistentTime, NonDescriptiveTime, NonHierarchicalTime, NonPertinentTime), na.rm = TRUE),
mean(c(NonStandardTime, PluralizedTime, VersionedTime, TunnelingTime, InconArchetypeTime, AmbiguityTime, FlatTime), na.rm = TRUE)
) %>%
mutate(
mean_Corr_P = ifelse(
mean(c(Tidy, Contextual, Verbless, Consistent, Descriptive, Hierarchical, Pertinent), na.rm = TRUE),
mean(c(Standard, Singularized, Versioned, Adherence, ConArchetype, Annotation, Structured), na.rm = TRUE)
)
) %>%
mutate(
mean_Corr_AP =
mean(c(Amorphous, Contextless, CRUDy, Inconsistent, NonDescriptive, NonHierarchical, NonPertinent), na.rm = TRUE),
mean(c(NonStandard, Pluralized, Unversioned, Tunneling, InconArchetype, Ambiguity, Flat), na.rm = TRUE)
)
print(correlationUndData)
# Correlation matrix for exploration
# rcorr does not support kendalls TAU
# "pearson" for linear correlation of continuous variables
# "spearman" for rank-based monotonic correlation (with ordinal variables)
corrMthd <- "spearman"
corrMatrix <-
correlationData %>%
select(
starts_with("mean_"),
starts_with("is_"),
YearsOfExperience,
RichardsonMaturity,
MaturityLevel
) %>%
as.matrix() %>%
rcorr(type = corrMthd)
# Correlation matrix for exploration
# rcorr does not support kendalls TAU
# "pearson" for linear correlation of continuous variables
# "spearman" for rank-based monotonic correlation (with ordinal variables)
corrMthd <- "spearman"
corrMatrix <-
correlationUndData %>%
select(
starts_with("mean_"),
starts_with("is_"),
YearsOfExperience,
RichardsonMaturity,
MaturityLevel
) %>%
as.matrix() %>%
rcorr(type = corrMthd)
print(corrMatrix)
# plot a correlation matrix
corrplot(corrMatrix$r, p.mat = corrMatrix$P, method = "circle", type = "lower")
print(correlationUndData)
# caculate separate correlations
corrMthd <- "kendall"
df <- data.frame()
# change to "mean_TAU_P", "mean_TAU_AP", "mean_perceivedDifficulty_P", or "mean_perceivedDifficulty_AP"
dependent <- "mean_TAU_P"
demographics <- c("is_Student", "is_Academia", "is_Canada", "YearsOfExperience", "RichardsonMaturity", "MaturityLevel")
for (d in demographics) {
res <- cor.test(
correlationData[[dependent]],
correlationData[[d]],
method = corrMthd,
exact = FALSE
)
df <- rbind(df, data.frame(
dependent = dependent,
demographic = d,
estimate = res$estimate,
p.value = res$p.value
),
make.row.names = FALSE
)
}
df <- data.frame()
# change to "mean_TAU_P", "mean_TAU_AP", "mean_perceivedDifficulty_P", or "mean_perceivedDifficulty_AP"
dependent <- "mean_TAU_P"
demographics <- c("is_Student", "is_Academia", "is_Canada", "YearsOfExperience", "RichardsonMaturity", "MaturityLevel")
for (d in demographics) {
res <- cor.test(
correlationUndData[[dependent]],
correlationUndData[[d]],
method = corrMthd,
exact = FALSE
)
df <- rbind(df, data.frame(
dependent = dependent,
demographic = d,
estimate = res$estimate,
p.value = res$p.value
),
make.row.names = FALSE
)
}
# adjust p-values with Holm-Bonferroni and format them
df %>%
mutate(p.value = format.pval(
p.adjust(p.value, method = "holm"),
digits = 4, eps = 0.001
)
) %>%
arrange(p.value) %>%
print
# create 2 linear regression models for predicting TAU (one for following patterns and one for followng antipatterns)
# LM for rule:
lrP <- lm(
mean_TAU_P ~
is_Student
+ is_Academia
+ is_Canada
+ YearsOfExperience
+ MaturityLevel,
data = correlationData
)
# create 2 linear regression models for predicting TAU (one for following patterns and one for followng antipatterns)
# LM for rule:
lrP <- lm(
mean_TAU_P ~
is_Student
+ is_Academia
+ is_Canada
+ YearsOfExperience
+ MaturityLevel,
data = correlationUndData
)
summary(lrP)
# LM for violation:
lrAP <- lm(
mean_TAU_AP ~
is_Student
+ is_Academia
+ is_Canada
+ YearsOfExperience
+ MaturityLevel,
data = correlationUndData
)
summary(lrAP)
# aggregate mean values for TAU, perceived readability, correctness, and time (needed for RQ3)
correlationReadData <- data %>%
rowwise() %>%
mutate(
mean_TAU_P = ifelse(
mean(c(TAU_Tidy, TAU_Contextual, TAU_Verbless, TAU_Consistent, TAU_Descriptive, TAU_Hierarchical, TAU_Pertinent), na.rm = TRUE),
mean(c(TAU_Standard, TAU_Singularized, TAU_Versioned, TAU_Adherence, TAU_ConArchetype, TAU_Annotation, TAU_Structured), na.rm = TRUE)
)
) %>%
mutate(
mean_TAU_AP =
mean(c(TAU_Amorphous, TAU_Contextless, TAU_CRUDy, TAU_Inconsistent, TAU_NonDescriptive, TAU_NonHierarchical, TAU_NonPertinent), na.rm = TRUE),
mean(c(TAU_NonStandard, TAU_Pluralized, TAU_Unversioned, TAU_Tunneling, TAU_InconArchetype, TAU_Ambiguity, TAU_Flat), na.rm = TRUE)
) %>%
mutate(
mean_perceivedDifficulty_P = ifelse(
mean(c(TidyURating, ContextualURating, VerblessURating, ConsistentURating, DescriptiveURating, HierarchicalURating, PertinentURating), na.rm = TRUE),
mean(c(StandardURating, SingularizedURating, VersionedURating, AdherenceURating, ConArchetypeURating, AnnotationURating, StructuredURating), na.rm = TRUE)
)
) %>%
mutate(
mean_perceivedDifficulty_AP = ifelse(
mean(c(AmorphousURating, ContextlessURating, CRUDyURating, InconsistentURating, NonDescriptiveURating, NonHierarchicalURating, NonPertinentURating), na.rm = TRUE),
mean(c(NonStandardURating, PluralizedURating, UnversionedURating, TunnelingURating, InconArchetypeURating, AmbiguityURating, FlatURating), na.rm = TRUE)
)
) %>%
mutate(
mean_Time_P = ifelse(
mean(c(TidyTime, ContextualURating, VerblessTime, ConsistentTime, DescriptiveTime, HierarchicalTime, PertinentTime), na.rm = TRUE),
mean(c(StandardTime, SingularizedTime, VersionedTime, AdherenceTime, ConArchetypeTime, AnnotationTime, StructuredTime), na.rm = TRUE)
)
) %>%
mutate(
mean_Time_AP =
mean(c(AmorphousTime, ContextlessTime, CRUDyTime, InconsistentTime, NonDescriptiveTime, NonHierarchicalTime, NonPertinentTime), na.rm = TRUE),
mean(c(NonStandardTime, PluralizedTime, VersionedTime, TunnelingTime, InconArchetypeTime, AmbiguityTime, FlatTime), na.rm = TRUE)
) %>%
mutate(
mean_Corr_P = ifelse(
mean(c(Tidy, Contextual, Verbless, Consistent, Descriptive, Hierarchical, Pertinent), na.rm = TRUE),
mean(c(Standard, Singularized, Versioned, Adherence, ConArchetype, Annotation, Structured), na.rm = TRUE)
)
) %>%
mutate(
mean_Corr_AP =
mean(c(Amorphous, Contextless, CRUDy, Inconsistent, NonDescriptive, NonHierarchical, NonPertinent), na.rm = TRUE),
mean(c(NonStandard, Pluralized, Unversioned, Tunneling, InconArchetype, Ambiguity, Flat), na.rm = TRUE)
)
print(correlationReadData)
# Correlation matrix for exploration
# rcorr does not support kendalls TAU
# "pearson" for linear correlation of continuous variables
# "spearman" for rank-based monotonic correlation (with ordinal variables)
corrMthd <- "spearman"
corrMatrix <-
correlationReadData %>%
select(
starts_with("mean_"),
starts_with("is_"),
YearsOfExperience,
RichardsonMaturity,
MaturityLevel
) %>%
as.matrix() %>%
rcorr(type = corrMthd)
print(corrMatrix)
# plot a correlation matrix
corrplot(corrMatrix$r, p.mat = corrMatrix$P, method = "circle", type = "lower")
# aggregate mean values for TAU, perceived readability, correctness, and time (needed for RQ3)
correlationReadData <- data %>%
rowwise() %>%
mutate(
mean_TAU_P = ifelse(
mean(c(TAU_Tidy, TAU_Contextual, TAU_Verbless, TAU_Consistent, TAU_Descriptive, TAU_Hierarchical, TAU_Pertinent), na.rm = TRUE),
mean(c(TAU_Standard, TAU_Singularized, TAU_Versioned, TAU_Adherence, TAU_ConArchetype, TAU_Annotation, TAU_Structured), na.rm = TRUE)
)
) %>%
mutate(
mean_TAU_AP =
mean(c(TAU_Amorphous, TAU_Contextless, TAU_CRUDy, TAU_Inconsistent, TAU_NonDescriptive, TAU_NonHierarchical, TAU_NonPertinent), na.rm = TRUE),
mean(c(TAU_NonStandard, TAU_Pluralized, TAU_Unversioned, TAU_Tunneling, TAU_InconArchetype, TAU_Ambiguity, TAU_Flat), na.rm = TRUE)
) %>%
mutate(
mean_perceivedReadability_P = ifelse(
mean(c(TidyRRating, ContextualRRating, VerblessRRating, ConsistentRRating, DescriptiveRRating, HierarchicalRRating, PertinentRRating), na.rm = TRUE),
mean(c(StandardRRating, SingularizedRRating, VersionedRRating, AdherenceRRating, ConArchetypeRRating, AnnotationRRating, StructuredRRating), na.rm = TRUE)
)
) %>%
mutate(
mean_perceivedReadability_AP = ifelse(
mean(c(AmorphousRRating, ContextlessRRating, CRUDyRRating, InconsistentRRating, NonDescriptiveRRating, NonHierarchicalRRating, NonPertinentRRating), na.rm = TRUE),
mean(c(NonStandardRRating, PluralizedRRating, UnversionedRRating, TunnelingRRating, InconArchetypeRRating, AmbiguityRRating, FlatRRating), na.rm = TRUE)
)
) %>%
mutate(
mean_Time_P = ifelse(
mean(c(TidyTime, ContextualURating, VerblessTime, ConsistentTime, DescriptiveTime, HierarchicalTime, PertinentTime), na.rm = TRUE),
mean(c(StandardTime, SingularizedTime, VersionedTime, AdherenceTime, ConArchetypeTime, AnnotationTime, StructuredTime), na.rm = TRUE)
)
) %>%
mutate(
mean_Time_AP =
mean(c(AmorphousTime, ContextlessTime, CRUDyTime, InconsistentTime, NonDescriptiveTime, NonHierarchicalTime, NonPertinentTime), na.rm = TRUE),
mean(c(NonStandardTime, PluralizedTime, VersionedTime, TunnelingTime, InconArchetypeTime, AmbiguityTime, FlatTime), na.rm = TRUE)
) %>%
mutate(
mean_Corr_P = ifelse(
mean(c(Tidy, Contextual, Verbless, Consistent, Descriptive, Hierarchical, Pertinent), na.rm = TRUE),
mean(c(Standard, Singularized, Versioned, Adherence, ConArchetype, Annotation, Structured), na.rm = TRUE)
)
) %>%
mutate(
mean_Corr_AP =
mean(c(Amorphous, Contextless, CRUDy, Inconsistent, NonDescriptive, NonHierarchical, NonPertinent), na.rm = TRUE),
mean(c(NonStandard, Pluralized, Unversioned, Tunneling, InconArchetype, Ambiguity, Flat), na.rm = TRUE)
)
print(correlationReadData)
# Correlation matrix for exploration
# rcorr does not support kendalls TAU
# "pearson" for linear correlation of continuous variables
# "spearman" for rank-based monotonic correlation (with ordinal variables)
corrMthd <- "spearman"
corrMatrix <-
correlationReadData %>%
select(
starts_with("mean_"),
starts_with("is_"),
YearsOfExperience,
RichardsonMaturity,
MaturityLevel
) %>%
as.matrix() %>%
rcorr(type = corrMthd)
print(corrMatrix)
plot a correlation matrix
# plot a correlation matrix
corrplot(corrMatrix$r, p.mat = corrMatrix$P, method = "circle", type = "lower")
print(correlationReadData)
print(corrMatrix)
print(corrMatrix)
# plot a correlation matrix
corrplot(corrMatrix$r, p.mat = corrMatrix$P, method = "circle", type = "lower")
# caculate separate correlations
corrMthd <- "kendall"
df <- data.frame()
# change to "mean_TAU_P", "mean_TAU_AP", "mean_perceivedDifficulty_P", or "mean_perceivedDifficulty_AP"
dependent <- "mean_TAU_P"
demographics <- c("is_Student", "is_Academia", "is_Canada", "YearsOfExperience", "RichardsonMaturity", "MaturityLevel")
for (d in demographics) {
res <- cor.test(
correlationReadData[[dependent]],
correlationReadData[[d]],
method = corrMthd,
exact = FALSE
)
df <- rbind(df, data.frame(
dependent = dependent,
demographic = d,
estimate = res$estimate,
p.value = res$p.value
),
make.row.names = FALSE
)
}
# adjust p-values with Holm-Bonferroni and format them
df %>%
mutate(p.value = format.pval(
p.adjust(p.value, method = "holm"),
digits = 4, eps = 0.001
)
) %>%
arrange(p.value) %>%
print
# create 2 linear regression models for predicting TAU (one for following patterns and one for followng antipatterns)
# LM for rule:
lrP <- lm(
mean_TAU_P ~
is_Student
+ is_Academia
+ is_Canada
+ YearsOfExperience
+ MaturityLevel,
data = correlationRadData
)
# create 2 linear regression models for predicting TAU (one for following patterns and one for followng antipatterns)
# LM for rule:
lrP <- lm(
mean_TAU_P ~
is_Student
+ is_Academia
+ is_Canada
+ YearsOfExperience
+ MaturityLevel,
data = correlationReadData
)
summary(lrP)
# LM for violation:
lrAP <- lm(
mean_TAU_AP ~
is_Student
+ is_Academia
+ is_Canada
+ YearsOfExperience
+ MaturityLevel,
data = correlationReadData
)
summary(lrAP)
# aggregate mean values for TAU, perceived understandability, correctness, and time (needed for RQ4)
correlationUndData <- data %>%
rowwise() %>%
mutate(
mean_TAU_P = ifelse(
mean(c(TAU_Tidy, TAU_Contextual, TAU_Verbless, TAU_Consistent, TAU_Descriptive, TAU_Hierarchical, TAU_Pertinent), na.rm = TRUE),
mean(c(TAU_Standard, TAU_Singularized, TAU_Versioned, TAU_Adherence, TAU_ConArchetype, TAU_Annotation, TAU_Structured), na.rm = TRUE)
)
) %>%
mutate(
mean_TAU_AP =
mean(c(TAU_Amorphous, TAU_Contextless, TAU_CRUDy, TAU_Inconsistent, TAU_NonDescriptive, TAU_NonHierarchical, TAU_NonPertinent), na.rm = TRUE),
mean(c(TAU_NonStandard, TAU_Pluralized, TAU_Unversioned, TAU_Tunneling, TAU_InconArchetype, TAU_Ambiguity, TAU_Flat), na.rm = TRUE)
) %>%
mutate(
mean_perceivedDifficulty_P = ifelse(
mean(c(TidyURating, ContextualURating, VerblessURating, ConsistentURating, DescriptiveURating, HierarchicalURating, PertinentURating), na.rm = TRUE),
mean(c(StandardURating, SingularizedURating, VersionedURating, AdherenceURating, ConArchetypeURating, AnnotationURating, StructuredURating), na.rm = TRUE)
)
) %>%
mutate(
mean_perceivedDifficulty_AP = ifelse(
mean(c(AmorphousURating, ContextlessURating, CRUDyURating, InconsistentURating, NonDescriptiveURating, NonHierarchicalURating, NonPertinentURating), na.rm = TRUE),
mean(c(NonStandardURating, PluralizedURating, UnversionedURating, TunnelingURating, InconArchetypeURating, AmbiguityURating, FlatURating), na.rm = TRUE)
)
) %>%
mutate(
mean_Time_P = ifelse(
mean(c(TidyTime, ContextualURating, VerblessTime, ConsistentTime, DescriptiveTime, HierarchicalTime, PertinentTime), na.rm = TRUE),
mean(c(StandardTime, SingularizedTime, VersionedTime, AdherenceTime, ConArchetypeTime, AnnotationTime, StructuredTime), na.rm = TRUE)
)
) %>%
mutate(
mean_Time_AP =
mean(c(AmorphousTime, ContextlessTime, CRUDyTime, InconsistentTime, NonDescriptiveTime, NonHierarchicalTime, NonPertinentTime), na.rm = TRUE),
mean(c(NonStandardTime, PluralizedTime, VersionedTime, TunnelingTime, InconArchetypeTime, AmbiguityTime, FlatTime), na.rm = TRUE)
) %>%
mutate(
mean_Corr_P = ifelse(
mean(c(Tidy, Contextual, Verbless, Consistent, Descriptive, Hierarchical, Pertinent), na.rm = TRUE),
mean(c(Standard, Singularized, Versioned, Adherence, ConArchetype, Annotation, Structured), na.rm = TRUE)
)
) %>%
mutate(
mean_Corr_AP =
mean(c(Amorphous, Contextless, CRUDy, Inconsistent, NonDescriptive, NonHierarchical, NonPertinent), na.rm = TRUE),
mean(c(NonStandard, Pluralized, Unversioned, Tunneling, InconArchetype, Ambiguity, Flat), na.rm = TRUE)
)
print(correlationUndData)
# Correlation matrix for exploration
# rcorr does not support kendalls TAU
# "pearson" for linear correlation of continuous variables
# "spearman" for rank-based monotonic correlation (with ordinal variables)
corrMthd <- "spearman"
corrMatrix <-
correlationUndData %>%
select(
starts_with("mean_"),
starts_with("is_"),
YearsOfExperience,
RichardsonMaturity,
MaturityLevel
) %>%
as.matrix() %>%
rcorr(type = corrMthd)
print(corrMatrix)
# plot a correlation matrix
corrplot(corrMatrix$r, p.mat = corrMatrix$P, method = "circle", type = "lower")
print(corrMatrix)
print(dim(corrMatrix$r))  # Dimensions of the correlation matrix
print(dim(corrMatrix$P))  # Dimensions of the p-value matrix
# plot a correlation matrix
corrplot(corrMatrix$r, p.mat = corrMatrix$P, method = "circle", type = "lower")
print(correlationUndData)
