ID,API-Type,API-Name,HTTP Method,URI,Decription,Parameters,AmorphousURI,TidyURI,Comment,NonStandardURI,StandarURI,Comment,CRUDyURI,VerblessURI,Comment,UnversionedURI,VersionedURI,Comment,PluralisedNodes,SingularNodes,Comment,NonDescriptiveURI,DescriptiveURI,Comment,ContextlessResource,ContextualResouce,Comment,NonHierarchicalNodes,HierarchicalNodes,Comment,LessCohisiveDoc,CohisiveDoc,Comment,InconsistantDoc,ConsistantDoc,Comment
1,GraphQL,AniList,POST,/v2/oauth/token,Converting Authorization Codes To Access Tokensn/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
2,GraphQL,AniList,POST,/v2/oauth/pin,If you are absolutely unable to have a Http or application URI scheme redirection you can use the Auth Pin redirect URL.n/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
3,GraphQL,AniList,POST,v2/SaveMediaListEntry,Create or update a media list entryn/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
4,GraphQL,AniList,POST,v2/UpdateMediaListEntries,Update multiple media list entries to the same valuesn/a,0,1,,0,1,,1,0,[update found],0,1,Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
5,GraphQL,AniList,POST,v2/DeleteMediaListEntry,Delete a media list entryn/a,0,1,,0,1,,1,0,[delete found],0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
6,GraphQL,AniList,POST,v2/DeleteCustomList,Delete a custom list and remove the list entries from itn/a,0,1,,0,1,,1,0,[delete found],0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
7,GraphQL,AniList,POST,v2/SaveTextActivity,Create or update text activity for the currently authenticated usern/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
8,GraphQL,AniList,POST,v2/SaveListActivity,Update list activityn/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between save and list. 0 hierarchical relations were detected out of 2,1,0,Inconsistent Documentation
9,GraphQL,AniList,POST,v2/DeleteActivity,Delete an activity item of the authenticated usersn/a,0,1,,0,1,,1,0,[delete found],0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
10,GraphQL,AniList,POST,v2/ToggleActivityPin,Toggle activity to be pinned to the top of the user's activity feedn/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
11,GraphQL,AniList,POST,v2/ToggleActivitySubscription,Toggle the subscription of an activity itemn/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between activity and subscription. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
12,GraphQL,AniList,POST,v2/SaveActivityReply,Create or update an activity replyn/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
13,GraphQL,AniList,POST,v2/DeleteActivityReply,Delete an activity reply of the authenticated usersn/a,0,1,,0,1,,1,0,[delete found],0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
14,GraphQL,AniList,POST,v2/ToggleLike,Add or remove a like from a likeable type. Returns all the users who liked the same modeln/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
15,GraphQL,AniList,POST,v2/ToggleLikeV2,Add or remove a like from a likeable type.n/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
16,GraphQL,AniList,POST,v2/ToggleFollow,Toggle the un/following of a usern/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
17,GraphQL,AniList,POST,v2/ToggleFavourite,"Favourite or unfavourite an anime, manga, character, staff member, or studion/a",0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
18,GraphQL,AniList,POST,v2/UpdateFavouriteOrder,Update the order favourites are displayed inn/a,0,1,,0,1,,1,0,[update found],0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
19,GraphQL,AniList,POST,v2/SaveReview,Create or update a reviewn/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
20,GraphQL,AniList,POST,v2/DeleteReview,Delete a reviewn/a,0,1,,0,1,,1,0,[delete found],0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
21,GraphQL,AniList,POST,v2/RateReview,Rate a reviewn/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
22,GraphQL,AniList,POST,v2/SaveRecommendation,Recommendation a median/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
23,GraphQL,AniList,POST,v2/SaveThread,Create or update a forum threadn/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
24,GraphQL,AniList,POST,v2/DeleteThread,Delete a threadn/a,0,1,,0,1,,1,0,[delete found],0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
25,GraphQL,AniList,POST,v2/ToggleThreadSubscription,Toggle the subscription of a forum threadn/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
26,GraphQL,AniList,POST,v2/SaveThreadComment,Create or update a thread commentn/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
27,GraphQL,AniList,POST,v2/DeleteThreadComment,Delete a thread commentn/a,0,1, ,0,1, ,1,0,[delete found],0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1, ,1,0,Inconsistent Documentation
28,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/albums/{id},"Fetch an album by using its identifier.id string (Required) The unique identifier for the album. storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
29,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/albums/{id}/{relationship},"Fetch an album’s relationship by using its identifier.id string (Required) The unique identifier for the album. relationship string (Required) The name of the relationship you want to fetch for this resource. Possible Values: artists, genres, library, record-labels, tracks storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
30,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/albums/{id}/view/{view},"Fetch related resources for a single album’s relationship view.id string (Required) The identifier of the resource to fetch. storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects. view string (Required) The name of the resource view to fetch. Possible Values: appears-on, other-versions, related-albums, related-videos",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
31,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/albums,"Fetch one or more albums by using their identifiers.storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation,0,1,Consistent Documentation
32,GraphQL,AppleMusic,GET,/v1/me/library/albums/{id},Fetch a library album by using its identifier.id string (Required) The unique identifier for the album.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
33,GraphQL,AppleMusic,GET,/v1/me/library/albums/{id}/{relationship},"Fetch a library album’s relationship by using its identifier.id string (Required) A unique identifier for the library album. relationship string (Required) The name of the relationship you want to fetch for this resource. Possible Values: artists, catalog, tracks",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
34,GraphQL,AppleMusic,GET,/v1/me/library/albums,"Fetch one or more library albums by using their identifiers.ids [string] (Required) The unique identifiers for the library albums. The maximum fetch limit is 100. l string The localization to use, specified by a language tag. The possible values are in the supportedLanguageTags array belonging to the Storefront object specified by storefront. Otherwise, the default is defaultLanguageTag in Storefront. include [string] Additional relationships to include in the fetch. extend [string] A list of attribute extensions to apply to resources in the response.",0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
35,GraphQL,AppleMusic,POST,/v1/me/library,"Add a catalog resource to a user’s iCloud Music Library.ids [string] (Required) The unique catalog identifiers for the resources. To indicate the type of resource to add, follow the ids with one of the allowed values. Add multiple types in the same request. l string The localization to use, specified by a language tag. The possible values are in the supportedLanguageTags array belonging to the Storefront object that storefront specifies. Otherwise, the default is defaultLanguageTag in Storefront.",0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Version Found,0,1,Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation,0,1,Consistent Documentation,0,1,Consistent Documentation
36,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/artists/{id},"Fetch an artist by using the artist’s identifier.id string (Required) The unique identifier for the artist. storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
37,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/artists/{id}/{relationship},"Fetch an artist’s relationship by using its identifier.id string (Required) A unique identifier for the artist. relationship string (Required) The name of the relationship you want to fetch for this resource. Possible Values: albums, genres, music-videos, playlists, station storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
38,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/artists/{id}/view/{view},"Fetch related resources for a single artist’s relationship view.id string (Required) A unique identifier for the artist. storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects. view string (Required) The name of the resource view to fetch.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
39,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/artists,"Fetch one or more artists by using their identifiers.storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
40,GraphQL,AppleMusic,GET,/v1/me/library/artists/{id},Fetch a library artist by using its identifier.id string (Required) The unique identifier for the artist.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
41,GraphQL,AppleMusic,GET,/v1/me/library/artists/{id}/{relationship},"Fetch a library artist’s relationship by using its identifier.id string (Required) A unique identifier for the library artist. relationship string (Required) The name of the relationship you want to fetch for this resource. Possible Values: albums, catalog",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
42,GraphQL,AppleMusic,GET,/v1/me/library/artists,Fetch one or more library artists by using their identifiers.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
43,GraphQL,AppleMusic,GET,/v1/artists/{id},A resource object that represents the artist of an album where an artist can be one or more people.id string (Required) The identifier for the artist.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
44,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/songs/{id},"Fetch a song by using its identifier.id string (Required) The unique identifier for the song. storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
45,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/songs/{id}/{relationship},"Fetch a song’s relationship by using its identifier.id string (Required) A unique identifier for the song. relationship string (Required) The name of the relationship you want to fetch for this resource. Possible Values: albums, artists, composers, genres, library, music-videos, station storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
46,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/songs,"Fetch one or more songs by using their identifiers.storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation,0,1,Consistent Documentation
47,GraphQL,AppleMusic,GET,/v1/me/library/songs/{id},Fetch a library song by using its identifier.id string (Required) The unique identifier for the library song.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
48,GraphQL,AppleMusic,GET,/v1/me/library/songs/{id}/{relationship},"Fetch a library song’s relationship by using its identifier.id string (Required) A unique identifier for the library song. relationship string (Required) The name of the relationship you want to fetch for this resource. Possible Values: albums, artists, catalog",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
49,GraphQL,AppleMusic,GET,/v1/me/library/songs,Fetch one or more library songs by using their identifiers.n/a,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
50,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/music-videos/{id},"Fetch a music video by using its identifier.id string (Required) The unique identifier for the music video. storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
51,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/music-videos/{id}/{relationship},"Fetch a music video’s relationship by using its identifier.id string (Required) The unique identifier for the music video. relationship string (Required) The name of the relationship you want to fetch for this resource. Possible Values: albums, artists, genres, library, songs storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
52,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/music-videos/{id}/view/{view},Fetch related resources for a single music video’s relationship view.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
53,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/music-videos,"Fetch one or more music videos by using their identifiers.storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation,0,1,Consistent Documentation
54,GraphQL,AppleMusic,GET,/v1/me/library/music-videos/{id},Fetch a library music video by using its identifier.id string (Required) The unique identifier for the library music video.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
55,GraphQL,AppleMusic,GET,/v1/me/library/music-videos/{id}/{relationship},"Fetch a library music video’s relationship by using its identifier.id string (Required) The unique identifier for the library music video. relationship string (Required) The name of the relationship you want to fetch for this resource. Possible Values: albums, artists, catalog",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
56,GraphQL,AppleMusic,GET,/v1/me/library/music-videos,Fetch one or more library music videos by using their identifiers.n/a,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
57,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/playlists/{id},"Fetch a playlist by using its identifier.id string (Required) The unique identifier for the playlist. storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
58,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/playlists/{id}/{relationship},"Fetch a playlist’s relationship by using its identifier.id string (Required) A unique identifier for the playlist. relationship string (Required) The name of the relationship you want to fetch for this resource. Possible Values: curator, library, tracks storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
59,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/playlists/{id}/view/{view},"Fetch related resources for a single playlist’s relationship view.id string (Required) A unique identifier for the playlist. storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects. view string (Required) The name of the resource view to fetch. Possible Values: featured-artists, more-by-curator",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
60,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/playlists,"Fetch one or more playlists by using their identifiers.storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
61,GraphQL,AppleMusic,GET,/v1/me/library/playlists/{id},Fetch a library playlist by using its identifier.id string (Required) A unique identifier for the library playlist.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
62,GraphQL,AppleMusic,GET,/v1/me/library/playlists/{id}/{relationship},"Fetch a library playlist’s relationship by using its identifier.id string (Required) The unique identifier for the library playlist. relationship string (Required) The name of the relationship you want to fetch for this resource. Possible Values: catalog, tracks",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
63,GraphQL,AppleMusic,GET,/v1/me/library/playlists,Fetch one or more library playlists by using their identifiers.n/a,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
64,GraphQL,AppleMusic,GET,/v1/me/library/playlist-folders,Fetch the root library playlists folder for the user.n/a,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
65,GraphQL,AppleMusic,GET,/v1/me/library/playlist-folders/{id},Fetch a library playlist folder by using its identifier.id string (Required) A unique identifier for the library playlist folder.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
66,GraphQL,AppleMusic,GET,/v1/me/library/playlist-folders/{id}/{relationship},"Fetch a library playlist folder’s relationship by using its identifier.id string (Required) A unique identifier for the library playlist folder. relationship string (Required) The name of the relationship you want to fetch for this resource. Possible Values: children, parent",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
67,GraphQL,AppleMusic,POST,/v1/me/library/playlist-folders,Create a new playlist folder in a user’s library.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
68,GraphQL,AppleMusic,POST,/v1/me/library/playlists,Create a new playlist in a user’s library.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
69,GraphQL,AppleMusic,POST,/v1/me/library/playlists/{id}/tracks,Add new tracks to the end of a library playlist.id string (Required) The unique identifier of the library playlist.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
70,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/stations/{id},"Fetch a station by using its identifier.id string (Required) The unique identifier for the station. storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
71,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/stations/{id}/{relationship},"Fetch a station's relationship using its identifier.id string (Required) The unique identifier for the station. relationship string (Required) The name of the relationship you want to fetch for the resource. Value: radio-show storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
72,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/stations,"Fetch one or more stations by using their identifiers.storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation,0,1,Consistent Documentation
73,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/station-genres/{id},"Fetch a station genre by using its identifier.id string (Required) The unique identifier for the station genre. storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
74,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/station-genres/{id}/{relationship},"Fetch a station genre’s relationship by using its identifier.id string (Required) The unique identifier for the station genre. relationship string (Required) The name of the relationship you want to fetch for this resource. Value: stations storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
75,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/station-genres,"Fetch one or more station genres by using their identifiers.storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
76,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/search,"Search the catalog by using a query.storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
77,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/search/hints,"Fetch the search term results for a hint.storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
78,GraphQL,AppleMusic,GET,/v1/catalog/{storefront}/search/suggestions,"Fetch the search suggestions for a provided term input.storefront string (Required) An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects.",0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
79,GraphQL,AppleMusic,GET,/v1/me/library/search,Search the library by using a query.n/a,0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
80,GraphQL,AppleMusic,GET,/v1/me/ratings/albums/{id},Fetch a user’s rating for an album by using the user’s identifier.id string (Required) The unique identifier for the album.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
81,GraphQL,AppleMusic,GET,/v1/me/ratings/music-videos/{id},Fetch a user’s rating for a music video by using the video’s identifier.id string (Required) The unique identifier for the music video.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
82,GraphQL,AppleMusic,GET,/v1/me/ratings/playlists/{id},Fetch a user’s rating for a playlist by using the playlist’s identifier.Fetch a user’s rating for a playlist by using the playlist’s identifier.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
83,GraphQL,AppleMusic,GET,/v1/me/ratings/songs/{id},Fetch a user’s rating for a song by using the song’s identifier.id string (Required) The unique identifier for the song.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
84,GraphQL,AppleMusic,GET,/v1/me/ratings/stations/{id},Fetch a user’s rating for a station by using the station’s identifier.id string (Required) The unique identifier for the station.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
85,GraphQL,AppleMusic,GET,/v1/me/ratings/albums,Fetch the user’s ratings for one or more albums by using the albums' identifiers.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
86,GraphQL,AppleMusic,GET,/v1/me/ratings/music-videos,Fetch the user’s ratings for one or more music videos by using the music videos' identifiers.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
87,GraphQL,AppleMusic,GET,/v1/me/ratings/playlists,Fetch the user’s ratings for one or more playlists by using the playlists' identifiers.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
88,GraphQL,AppleMusic,GET,/v1/me/ratings/songs,Fetch the user’s ratings for one or more songs by using the songs' identifiers.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
89,GraphQL,AppleMusic,GET,/v1/me/ratings/stations,Fetch the user’s ratings for one or more stations by using the stations' identifiers.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
90,GraphQL,AppleMusic,PUT,/v1/me/ratings/albums/{id},Add a user’s album rating by using the album’s identifier.id string (Required) The unique identifier for the album.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
91,GraphQL,AppleMusic,PUT,/v1/me/ratings/music-videos/{id},Add a user’s music video rating by using the music video’s identifier.id string (Required) The unique identifier for the music video.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
92,GraphQL,AppleMusic,PUT,/v1/me/ratings/playlists/{id},Add a user’s playlist rating by using the playlist’s identifier.id string (Required) The unique identifier for the playlist.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
93,GraphQL,AppleMusic,PUT,/v1/me/ratings/songs/{id},Add a user’s song rating by using the song’s identifier.id string (Required) The unique identifier for the song.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
94,GraphQL,AppleMusic,PUT,/v1/me/ratings/stations/{id},Add a user’s station rating by using the station’s identifier.id string (Required) The unique identifier for the station.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
95,GraphQL,AppleMusic,DELETE,/v1/me/ratings/albums/{id},Remove a user’s album rating by using the album’s identifier.id string (Required) The unique identifier for the album.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
96,GraphQL,AppleMusic,DELETE,/v1/me/ratings/music-videos/{id},Remove a user’s music video rating by using the music video’s identifier.id string (Required) The unique identifier for the music video.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
97,GraphQL,AppleMusic,DELETE,/v1/me/ratings/playlists/{id},Remove a user’s playlist rating by using the playlist’s identifier.id string (Required) The unique identifier for the playlist.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
98,GraphQL,AppleMusic,DELETE,/v1/me/ratings/songs/{id},Remove a user’s song rating by using the song’s identifier.id string (Required) The unique identifier for the song.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
99,GraphQL,AppleMusic,DELETE,/v1/me/ratings/stations/{id},Remove a user’s station rating by using the station’s identifier.id string (Required) The unique identifier for the station.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
100,GraphQL,AppleMusic,GET,/v1/me/ratings/library-albums/{id},Fetch a user’s rating for specific content by using the content’s identifier.id string (Required) The unique identifier for the library album.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
101,GraphQL,AppleMusic,GET,/v1/me/ratings/library-music-videos/{id},Fetch a user’s rating for a library music video by using the music video’s library identifier.id string (Required) The unique identifier for the library music video.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
102,GraphQL,AppleMusic,GET,/v1/me/ratings/library-playlists/{id},Fetch a user’s rating for a library playlist by using the playlist’s library identifier.id string (Required) The unique identifier for the library playlist.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
103,GraphQL,AppleMusic,GET,/v1/me/ratings/library-songs/{id},Fetch a user’s rating for a library song by using the song’s library identifier.id string (Required) The unique identifier for the library song.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
104,GraphQL,AppleMusic,GET,/v1/me/ratings/library-albums,Fetch the user’s ratings for one or more pieces of content by using the contents’ identifiers.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
105,GraphQL,AppleMusic,GET,/v1/me/ratings/library-music-videos,Fetch the user’s ratings for one or more library music videos by using the library music videos' identifiers.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
106,GraphQL,AppleMusic,GET,/v1/me/ratings/library-playlists,Fetch the user’s ratings for one or more library playlists by using the library playlists' identifiers.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
107,GraphQL,AppleMusic,GET,/v1/me/ratings/library-songs,Fetch the user’s ratings for one or more library songs by using the library songs' identifiers.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
108,GraphQL,AppleMusic,PUT,/v1/me/ratings/library-albums/{id},Add a user’s content rating by using the content’s identifier.id string (Required) The unique identifier for the library album.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
109,GraphQL,AppleMusic,PUT,/v1/me/ratings/library-music-videos/{id},Add a user’s library music video rating by using the library music video’s identifier.id string (Required) The unique identifier for the library music video.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
110,GraphQL,AppleMusic,PUT,/v1/me/ratings/library-playlists/{id},Add a user’s library playlist rating by using the library playlist’s identifier.id string (Required) The unique identifier for the library playlist.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
111,GraphQL,AppleMusic,PUT,/v1/me/ratings/library-songs/{id},Add a user’s library song rating by using the library song’s identifier.id string (Required) The unique identifier for the library song.,0,1, ,0,1, ,0,1, ,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1, ,0,1,Consistent Documentation
112,GraphQL,Artsy,GET,v2/applications/{id},"Users can retrieve a specific application by ID by rendering the ""application"" link template from root.user_id Application owner (user) ID.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
113,GraphQL,Artsy,GET,v2/artists/{id},"Users can retrieve a specific artist by ID by rendering the ""artist"" link template from root.artwork_id Retrieve artists for a given artwork. similar_to_artist_id Return artists similar to a given artist. similarity_type Similarity type, either default or contemporary. See below. gene_id Return a set of artists that represent a given gene. artworks Only return artists with artworks. published_artworks Only return artists with published artworks. partner_id Return artists with artworks that belong to the partner.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
114,GraphQL,Artsy,GET,v2/artworks/{id},"Users can retrieve a specific artwork by ID by rendering the ""artwork"" link template from root.self The artwork resource. thumbnail Default image thumbnail. image Curied image location. permalink An external location on the artsy.net website. partner Partner that owns the artwork. artists Artwork's Artists. genes Artwork's Genes. similar_artworks Artwork similar to the artwork.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
115,GraphQL,Artsy,GET,v2/bidders/{id},"Authorized users and applications can retrieve a specific bidder by ID by rendering the ""bidder"" link template from root.sale_id Applicable Auction (sale) ID.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
116,GraphQL,Artsy,GET,v2/bidder_positions/{id},"Users can retrieve a specific bidder position by ID by rendering the ""bidder_position"" link template from root.self The bidder position resource. sale_artwork The sale artwork of the bidder position. sale The sale of the bidder position. artwork The artwork of the bidder position. bidder The bidder of the bidder position.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
117,GraphQL,Artsy,GET,v2/bids/{id},"Users can retrieve a specific bid by ID by rendering the ""bid"" link template from root.self The bid resource. position The source bidder position artwork The associated artwork sale The sale where the bid was placed",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
118,GraphQL,Artsy,GET,v2/collection_items/{id},"Users can retrieve a specific collection item by ID by rendering the ""collection_item"" link template from root.collection_id Collection ID, required. user_id Collection owner (user) ID, required.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
119,GraphQL,Artsy,GET,v2/collections?user_id=USER_ID&private=true,"You can retrieve a user's public collections by following the ""public_collections"" link from a user. Users can retrieve their own public and private collections by following the collections link from user details.user_id Collection owner (user) ID, required. private Also retrieve private collections.",1,0,[uppercase found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
120,GraphQL,Artsy,GET,v2/edition/{id},"Editions are embedded within an artwork, but can also be retrieved individually by ID by rendering the ""edition"" link template from root.self The artwork resource. artwork Artwork cor esponding to the edition.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
121,GraphQL,Artsy,GET,v2/fairs/{id},"Users can retrieve a specific fair by ID by rendering the ""fair"" link template from root.status One of 'running', 'closed', 'upcoming' or 'current'.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
122,GraphQL,Artsy,GET,v2/genes/{id},"Retrieve genes by following the genes link from root, or the ""genes"" links within an artwork or artist.artist_id Retrieve genes for a given artist. artwork_id Retrieve genes for a given artwork.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
123,GraphQL,Artsy,GET,v2/images/{id},show_id,"Retrieve images for a given show, often called ""installation shots"".",0, ,"Retrieve images for a given show, often called ""installation shots"".",0, ,"Retrieve images for a given show, often called ""installation shots"".",0, ,"Retrieve images for a given show, often called ""installation shots"".",0, ,"Retrieve images for a given show, often called ""installation shots"".",0, ,"Retrieve images for a given show, often called ""installation shots"".",0, ,"Retrieve images for a given show, often called ""installation shots"".",0, ,"Retrieve images for a given show, often called ""installation shots"".",0, 
124,GraphQL,Artsy,GET,v2/partners/{id},"Users can retrieve a specific partner by ID by rendering the ""partner"" link template from root.user_id Retrieve partners that a user has access to. partner_id Combine with 'user_id' to check whether a user has access to this partner.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
125,GraphQL,Artsy,GET,v2/profiles/{id},"Users can retrieve a specific profile by ID by rendering the ""profile"" link template from root.self The profile resource. permalink An external location on the artsy.net website. owner Profile owner (user, fair, etc). cover_image A cover image. image:self Curied image location. website Official website.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
126,GraphQL,Artsy,GET,v2/sales,Users can retrieve sales by following the sales link from root.live,Boolean- filter live auctions only is_auction,Boolean- filter auctions only published, ,Boolean- filter live auctions only is_auction,Boolean- filter auctions only published, ,Boolean- filter live auctions only is_auction,Boolean- filter auctions only published, ,Boolean- filter live auctions only is_auction,Boolean- filter auctions only published, ,Boolean- filter live auctions only is_auction,Boolean- filter auctions only published, ,Boolean- filter live auctions only is_auction,Boolean- filter auctions only published, ,Boolean- filter live auctions only is_auction,Boolean- filter auctions only published, ,Boolean- filter live auctions only is_auction,Boolean- filter auctions only published, 
127,GraphQL,Artsy,GET,v2/search?q=Andy+Warhol,Search for anything by following the search link from root with a query parameter.n/a,0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
128,GraphQL,Artsy,GET,v2/shows/{id},"Retrieve shows by following the shows link from root, or the ""shows"" links within a partner.partner_id Retrieve shows for a given partner. status Retrieve shows with a specific status (see below). fair_id Retrieve shows for a given fair.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
129,GraphQL,Artsy,GET,v2/status,This API retrieves the system status.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
130,GraphQL,Artsy,GET,v2/user_details/{id},"Users can retrieve a specific user by following the ""user_details"" link from a user.n/a",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
131,GraphQL,Artsy,GET,v2/users/{id},"Users can retrieve a specific user by rendering the ""user"" link template from root.n/a",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
132,GraphQL,Artsy,GET,v2/current_user,Retrieve the currently authenticated user by following the current_user link from root.n/a,0,1, ,0,1, ,0,1, ,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1, ,0,1,Consistent Documentation
133,GraphQL,Braintree,GET,/ping,Returns the literal string 'pong'.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
134,GraphQL,Braintree,GET,/pingInStoreReader,Triggers a beep on a connected Reader and returns the Reader information or an error if unable to ping the device.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
135,GraphQL,Braintree,GET,/viewer,The currently authenticated viewer.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
136,GraphQL,Braintree,GET,/clientConfiguration,The client-side environment and payment method configuration.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
137,GraphQL,Braintree,GET,/node,Fetch any object that extends the Node interface using its ID.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
138,GraphQL,Braintree,GET,/idFromLegacyId,Get a GraphQL ID from a legacy ID that was returned from an SDK or a legacyId field. Does not verify existence except for payment methods.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
139,GraphQL,Braintree,GET,/report,A collection of the available reports. Each field on the Report type is a different report that can be queried with its own input parameters.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
140,GraphQL,Braintree,GET,/search,A collection of the available searches. Each field on the Search type is a different search that can be queried with its own input parameters.n/a,0,1,,0,1,,1,0,[search found],1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
141,GraphQL,Braintree,GET,/paypalFinancingOptions,Retrieve PayPal financing options that include payment installment plans.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
142,GraphQL,Braintree,GET,/inStoreLocations,Retrieve a paginated list of all in-store locations.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
143,GraphQL,Braintree,POST,/authorizePaymentMethod,Authorize an eligible payment method and return a payload that includes details of the resulting transaction.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
144,GraphQL,Braintree,POST,/authorizePayPalAccount,Authorize an eligible PayPal account and return a payload that includes details of the resulting transaction.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
145,GraphQL,Braintree,POST,/authorizeVenmoAccount,Authorize an eligible Venmo account and return a payload that includes details of the resulting transaction.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
146,GraphQL,Braintree,POST,/authorizeCreditCard,Authorize a credit card of any origin and return a payload that includes details of the resulting transaction.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
147,GraphQL,Braintree,POST,/captureTransaction,Capture an authorized transaction and return a payload that includes details of the transaction.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
148,GraphQL,Braintree,POST,/chargeUsBankAccount,Charge a US bank account and return a payload that includes details of the resulting transaction. See https://developers.braintreepayments.com/guides/ach/configuration for information on eligibility and setup.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
149,GraphQL,Braintree,POST,/chargePayPalAccount,Charge a PayPal account and return a payload that includes details of the resulting transaction.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between charge and pay. 0 hierarchical relations were detected out of 3,1,0,Inconsistent Documentation
150,GraphQL,Braintree,POST,/chargeVenmoAccount,Charge a Venmo account and return a payload that includes details of the resulting transaction. See https://articles.braintreepayments.com/guides/payment-methods/venmo for information on eligibility and setup.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
151,GraphQL,Braintree,POST,/chargeCreditCard,Charge a credit card of any origin and return a payload that includes details of the resulting transaction.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
152,GraphQL,Braintree,POST,/vaultPaymentMethod,"Vault payment information from a single-use payment method and return a payload that includes a new multi-use payment method. When vaulting a credit card, by default, this mutation will also verify that card before vaulting.n/a",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
153,GraphQL,Braintree,POST,/vaultUsBankAccount,Vault payment information from a single-use US bank account payment method and return a payload that includes a new multi-use payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
154,GraphQL,Braintree,POST,/vaultCreditCard,"Vault payment information from a single-use credit card and return a payload that includes a new multi-use payment method. By default, this mutation will also verify the card before vaulting.n/a",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
155,GraphQL,Braintree,POST,/refundTransaction,Refund a settled transaction and return a payload that includes details of the refund.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between refund and transaction. 0 hierarchical relations were detected out of 1,1,0,Inconsistent Documentation
156,GraphQL,Braintree,POST,/reverseTransaction,Reverse a transaction and return a payload that includes either the voided transaction or a refund.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
157,GraphQL,Braintree,POST,/reverseRefund,Reverse a refund and return a payload that includes voided refund.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
158,GraphQL,Braintree,POST,/refundCreditCard,"Create a detached refund (unassociated with any previous Braintree payment) to a credit card and return a payload that includes details of the refund. We have previously referred to this as issuing a ""detached credit,"" and it is disallowed by default. See the documentation for more information regarding eligibility and configuration.n/a",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
159,GraphQL,Braintree,POST,/refundUsBankAccount,"Create a detached refund (unassociated with any previous Braintree payment) to a US Bank Account and return a payload that includes details of the refund. We have previously referred to this as issuing a ""detached credit,"" and it is disallowed by default. See the documentation for more information regarding eligibility and configuration.n/a",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
160,GraphQL,Braintree,POST,/updateCustomFields,Update custom fields on a transaction or refund. Custom fields are defined in the Control Panel.n/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
161,GraphQL,Braintree,POST,/verifyPaymentMethod,Run a verification on a multi-use payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
162,GraphQL,Braintree,POST,/verifyCreditCard,Run a verification on a multi-use credit card payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
163,GraphQL,Braintree,POST,/verifyUsBankAccount,Run a verification on a multi-use US bank account payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
164,GraphQL,Braintree,POST,/confirmMicroTransferAmounts,"Confirm micro-transfer amounts initiated by vaultUsBankAccount or verifyUsBankAccount, completing the verification process for a US Bank Account via micro-transfer.n/a",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
165,GraphQL,Braintree,POST,/deletePaymentMethodFromVault,Delete a multi-use payment method from the vault.n/a,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
166,GraphQL,Braintree,POST,/createClientToken,Create a client token that can be used to initialize a client in order to tokenize payment information.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
167,GraphQL,Braintree,POST,/createUniversalAccessToken,Create a PayPal access token that can be used to make additional API calls or initialize a client.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
168,GraphQL,Braintree,POST,/partialCaptureTransaction,Partially capture funds from a transaction that was successfully authorized and return a payload that includes a new transaction with information about the capture. This is available for Venmo and PayPal transactions.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
169,GraphQL,Braintree,POST,/tokenizeCustomActionsPaymentMethod,Tokenize Custom Actions fields and return a payload that includes a single-use payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
170,GraphQL,Braintree,POST,/tokenizeCreditCard,Tokenize credit card fields and return a payload that includes a single-use payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
171,GraphQL,Braintree,POST,/tokenizeCvv,Tokenize a credit card's CVV and return a payload that includes a single-use payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,1,0,Inconsistent Documentation
172,GraphQL,Braintree,POST,/tokenizeNetworkToken,Tokenize a network tokenized payment instrument and return a payload that includes a single-use payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
173,GraphQL,Braintree,POST,/tokenizeSamsungPayCard,Tokenize Samsung Pay card fields and return a payload that includes a single-use payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
174,GraphQL,Braintree,POST,/tokenizeUsBankAccount,Tokenize US bank account fields and return a payload that includes a single-use payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
175,GraphQL,Braintree,POST,/tokenizeUsBankLogin,Tokenize US bank login fields and return a payload that includes a single-use payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,1,0,Inconsistent Documentation
176,GraphQL,Braintree,POST,/tokenizePayPalOneTimePayment,Tokenize PayPal One-Time Payment and return a payload that includes a single-use payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
177,GraphQL,Braintree,POST,/createPayPalOneTimePayment,Set up a PayPal One-Time Payment for approval by a PayPal user. See documentation for more information. Your account must be enabled for this feature.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
178,GraphQL,Braintree,POST,/tokenizePayPalBillingAgreement,Tokenize PayPal account and return a payload that includes a single-use payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
179,GraphQL,Braintree,POST,/createPayPalBillingAgreement,Set up a PayPal Billing Agreement Token for approval by a PayPal user.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
180,GraphQL,Braintree,POST,/createCustomer,Create a customer for storing individual customer information and/or grouping transactions and multi-use payment methods.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
181,GraphQL,Braintree,POST,/updateCustomer,Update a customer's information.n/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
182,GraphQL,Braintree,POST,/deleteCustomer,"Delete a customer, breaking association between any of the customer's transactions. Will not delete if the customer has existing payment methods.n/a",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
183,GraphQL,Braintree,POST,/updateCreditCardBillingAddress,"Set a new billing address for a multi-use credit card payment method. By default, this mutation will also verify the card with the new billing address before updating.n/a",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
184,GraphQL,Braintree,POST,/updateCreditCardCardholderName,"Set a new cardholder name for a multi-use credit card payment method. By default, this mutation will also verify the card with the new cardholder name before updating.n/a",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
185,GraphQL,Braintree,POST,/updateCreditCardExpirationDate,"Set a new expiration date for a multi-use credit card payment method. By default, this mutation will also verify the card with the new expiration date before updating.n/a",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
186,GraphQL,Braintree,POST,/performThreeDSecureLookup,Attempt to perform 3D Secure Authentication on credit card payment method. This may consume the payment method and return a new single-use payment method.n/a,1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
187,GraphQL,Braintree,POST,/acceptDispute,Accepts a dispute and returns a payload that includes the dispute that was accepted. Only disputes with a status of OPEN can be accepted.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
188,GraphQL,Braintree,POST,/finalizeDispute,Finalizes a dispute and returns a payload that includes the dispute that was finalized. Only disputes with a status of OPEN can be finalized.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
189,GraphQL,Braintree,POST,/createDisputeTextEvidence,Creates text evidence to a dispute and returns a payload that includes the evidence that was created. Only disputes with a status of OPEN can have text evidence created for them.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
190,GraphQL,Braintree,POST,/deleteDisputeEvidence,Deletes evidence from a dispute.n/a,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
191,GraphQL,Braintree,POST,/createDisputeFileEvidence,Uploads an evidence file and associates it with a dispute. Note:: file upload requires a special request format. See the 'Uploading Files' integration guide for instructions on how to perform this mutation.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between file and evidence. 0 hierarchical relations were detected out of 3,0,1,Consistent Documentation
192,GraphQL,Braintree,POST,/vaultPayPalBillingAgreement,Vault an existing PayPal Billing Agreement that was not created through Braintree. Only use this mutation if you need to import PayPal Billing Agreements from an existing PayPal integration into your Braintree account.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
193,GraphQL,Braintree,POST,/sandboxSettleTransaction,Force a transaction to settle in the sandbox environment. Generates an error elsewhere.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
194,GraphQL,Braintree,POST,/createInStoreLocation,Creates a new In-Store Location to associate Readers.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
195,GraphQL,Braintree,POST,/updateInStoreLocation,Updates an In-Store Location.n/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
196,GraphQL,Braintree,POST,/pairInStoreReader,Pairs a Reader to an account and In-Store Location.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
197,GraphQL,Braintree,POST,/updateInStoreReader,Updates an In-Store Reader.n/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
198,GraphQL,Braintree,POST,/requestChargeFromInStoreReader,Request an in-store reader to begin the charge flow.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between request and charge. 0 hierarchical relations were detected out of 3,0,1,Consistent Documentation
199,GraphQL,Braintree,POST,/requestAuthorizeFromInStoreReader,Request an in-store reader to begin the authorize flow. Only supported on payment application versions >= 5.1.0.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
200,GraphQL,Braintree,POST,/requestCancelFromInStoreReader,Request an in-store reader to cancel the charge flow.n/a,0,1,,0,1,,1,0,[cancel found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
201,GraphQL,Braintree,POST,/requestRefundFromInStoreReader,Request an in-store reader to start an unreferenced refund flow.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
202,GraphQL,Braintree,POST,/requestVaultFromInStoreReader,Request an in-store reader to vault a payment method.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
203,GraphQL,Braintree,POST,/requestTextDisplayFromInStoreReader,Request an in-store reader to display text.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
204,GraphQL,Braintree,POST,/requestItemDisplayFromInStoreReader,Request an in-store reader to display line items.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
205,GraphQL,Braintree,POST,/requestFirmwareUpdateFromInStoreReader,Request an in-store reader to update to the latest version of software.n/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
206,GraphQL,Braintree,POST,/requestSignaturePromptFromInStoreReader,Request an in-store reader to display a signature prompt. Only supported on payment application versions >= 3.3.0.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
207,GraphQL,Braintree,POST,/requestConfirmationPromptFromInStoreReader,Request an in-store reader to display a confirmation prompt. Only supported on payment application versions >= 3.3.0.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
208,GraphQL,Braintree,POST,/requestNonPciCardDataFromInStoreReader,Request an in-store reader to collect non PCI-scoped card data. Only supported on payment application versions >= 5.2.0.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
209,GraphQL,Braintree,POST,/requestAmountPromptFromInStoreReader,Request an in-store reader to display an amount prompt. Only supported on payment application versions >= 5.2.0.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
210,GraphQL,Braintree,POST,/requestTextPromptFromInStoreReader,Request an in-store reader to display a text prompt. Only supported on payment application versions >= 5.2.0.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between text and prompt. 0 hierarchical relations were detected out of 4,0,1,Consistent Documentation
211,GraphQL,Braintree,POST,/createVenmoPaymentContext,Create a Venmo payment context.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
212,GraphQL,Braintree,POST,/updateTransactionAmount,Updates the authorization amount of the transaction.n/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
213,GraphQL,Braintree,POST,/generateExchangeRateQuote,Generate a customized currency exchange rate quote for items on a merchant's page. This allows merchants to advertise products in their customer's currency. Your account must be enabled to use this feature.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
214,GraphQL,Braintree,POST,/createNonInstantLocalPaymentContext,Creates a non-instant local payment context. Your account must be enabled to use this feature.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
215,GraphQL,Braintree,POST,/DisputeEvidence/{id},Evidence provided by a merchant to respond to a dispute.id: ID! Unique identifier,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between evidence and identification. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
216,GraphQL,Braintree,POST,/DisputeEvidence/{legacyId},Evidence provided by a merchant to respond to a dispute.legacyId: ID! Legacy unique identifier.,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
217,GraphQL,Braintree,POST,/InStoreContextResult/{id},Reference object for an in-store request.,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
218,GraphQL,Braintree,POST,/InStoreReaderOriginDetails,Additional information about the payment method supplied by an in-store payment reader.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
219,GraphQL,Braintree,POST,/Node/{id},Relay compatible Node interface.id: ID! Global ID for a given object.,1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
220,GraphQL,Braintree,POST,/Payment/{id},"A merchant-initiated movement of money between the merchant and a customer, by way of a payment method. Payments can represent money moving either from a customer to the merchant by charging a payment method (a Transaction), or from the merchant back to a customer by refunding a previous transaction (a Refund).",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
221,GraphQL,Braintree,POST,/Payment/{legacyId},"A merchant-initiated movement of money between the merchant and a customer, by way of a payment method. Payments can represent money moving either from a customer to the merchant by charging a payment method (a Transaction), or from the merchant back to a customer by refunding a previous transaction (a Refund).legacyId: ID! Legacy unique identifier.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
222,GraphQL,Braintree,POST,/PaymentContext,Context associated with a transaction.id: ID! Unique identifier.,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
223,GraphQL,Braintree,POST,/PaymentStatusEvent,Status event in the lifecycle of a payment.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between status and event. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
224,GraphQL,Braintree,POST,/AccountCreationStatus,The status of the business account creation request.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
225,GraphQL,Braintree,POST,/ApplePayStatus,The environment being used for Apple Pay.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
226,GraphQL,Braintree,POST,/ApplicationBankAccountPurpose,The purpose of the merchant application bank account.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
227,GraphQL,Braintree,POST,/ApplicationStatus,The status of a merchant account application.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
228,GraphQL,Braintree,POST,/BinRecordValue,A boolean-like value that includes UNKNOWN in the case where the information isn't available.n/a,0,1, ,0,1, ,0,1, ,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1, ,0,1,Consistent Documentation
229,GraphQL,Facebook,GET,/v18.0/{album-id},Get Fields and Edges on an Album.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
230,GraphQL,Facebook,POST,/{group_id}/albums,"When posting to this edge, an Album will be created.n/a",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
231,GraphQL,Facebook,GET,/v18.0/{album-id}/comments,"Represents a collection of Comments on the Album.filter enum{stream, toplevel} Default value: toplevel SELF_EXPLANATORY live_filter enum{filter_low_quality, no_filter} Default value: filter_low_quality For comments on a Live streaming video, this determines whether low quality comments will be filtered out of the results (filtering is enabled by default). In all other circumstances this parameter is ignored. order enum{chronological, reverse_chronological} Preferred ordering of the comments. Accepts chronological (oldest first) and reverse chronological (newest first). If the comments can be ranked, then the order will always be ranked regardless of this modifier. The best practice for querying comments on a Live video is to continually poll for comments in the reversechronological ordering mode. since datetime Lower bound of the time range to consider",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
232,GraphQL,Facebook,GET,/v18.0/{album-id}/likes,A collection of Profiles who like the Album.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
233,GraphQL,Facebook,GET,/v18.0/{album-id}/photos,A collection of Photos in the Albumn/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
234,GraphQL,Facebook,POST,/{album_id}/photos,"When posting to this edge, a Photo will be created.aid string Legacy album ID. Deprecated Deprecated allow_spherical_photo boolean Default value: false Indicates that we should allow this photo to be treated as a spherical photo. This will not change the behavior unless the server is able to interpret the photo as spherical, such as via Photosphere XMP metadata. Regular non-spherical photos will still be treated as regular photos even if this parameter is true. alt_text_custom string Accessible alternative description for an image android_key_hash string Android key hash application_id non-empty string iTunes App ID. This is used by the native Share dialog that's part of iOS attempt int64 Default value: 0 Number of attempts that have been made to upload this photo audience_exp boolean Default value: false Audience exp backdated_time datetime A user-specified creation time for this photo backdated_time_granularity enum{year, month, day, hour, min, none} Default value: none Use only the part of the backdated_time parameter to the specified granularity caption UTF-8 string The description of the photo Supports Emoji composer_session_id string Composer session ID direct_share_status int64 The status to allow sponsor directly boost the post. feed_targeting feed target Object that controls News Feed targeting for this post. Anyone in these groups will be more likely to see this post. People not in these groups will be less likely to see this post, but may still see it anyway. Any of the targeting fields shown here can be used, but none are required. feed_targeting applies to Pages only. filter_type int64 Default value: -1 Unused? full_res_is_coming_later boolean Default value: false Full res is coming later initial_view_heading_override_degrees int64 Manually specify the initial view heading in degrees from 0 to 360. This overrides any value present in the photo embedded metadata or provided in the spherical_metadata parameter initial_view_pitch_override_degrees int64 Manually specify the initial view pitch in degrees from -90 to 90. This overrides any value present in the photo embedded metadata or provided in the spherical_metadata parameter initial_view_vertical_fov_override_degrees int64 Manually specify the initial view vertical FOV in degrees from 60 to 120. This overrides any value present in the photo embedded metadata or provided in the spherical_metadata parameter ios_bundle_id string iOS Bundle ID is_explicit_location boolean Is this an explicit location? is_explicit_place boolean If set to true, the tag is a place, not a person manual_privacy boolean Default value: false Manual privacy message UTF-8 string Deprecated. Please use the caption param instead. DeprecatedSupports Emoji name UTF-8 string Deprecated. Please use the caption param instead. DeprecatedSupports Emoji no_story boolean If set to true, this will suppress the News Feed story that is automatically generated on a profile when people upload a photo using your app. Useful for adding old photos where you may not want to generate a story offline_id int64 Default value: 0 Offline ID og_action_type_id numeric string or integer The Open Graph action type og_icon_id numeric string or integer The Open Graph icon og_object_id OG object ID or URL string The Open Graph object ID og_phrase string The Open Graph phrase og_set_profile_badge boolean Default value: false Flag to set if the post should create a profile badge og_suggestion_mechanism string The Open Graph suggestion place place tag Page ID of a place associated with the photo privacy Privacy Parameter Determines the privacy settings of the photo. If not supplied, this defaults to the privacy level granted to the app in the Login dialog. This field cannot be used to set a more open privacy setting than the one granted profile_id int Deprecated. Use target_id instead Deprecated proxied_app_id numeric string or integer Proxied app ID published boolean Default value: true Set to false if you don't want the photo to be published immediately qn string Photos waterfall ID scheduled_publish_time int64 Time at which an unpublished post should be published (Unix ISO-8601 format). Applies to Pages only spherical_metadata JSON object A set of params describing an uploaded spherical photo. This field is not required; if it is not present we will try to generate spherical metadata from the metadata embedded in the image. If it is present, it takes precedence over any embedded metadata. Please click to the left to expand this list and see more information on each parameter. See also the Google Photo Sphere spec for more info on the meaning of the params: https://developers.google.com/streetview/spherical-metadata sponsor_id numeric string or integer Facebook Page id that is tagged as sponsor in the photo post sponsor_relationship int64 Sponsor Relationship, such as Presented By or Paid PartnershipWith tags list<Object> Tags on this photo target_id int Don't use this. Specifying a target_id allows you to post the photo to an object that's not the user in the access token. It only works when posting directly to the /photos endpoint. Instead of using this parameter you should be using the edge on an object directly, like /page/photos. targeting target Allows you to target posts to specific audiences. Applies to Pages only time_since_original_post int64 Same as backdated_time but with a time delta instead of absolute time uid int Deprecated unpublished_content_type enum {SCHEDULED, SCHEDULED_RECURRING, DRAFT, ADS_POST, INLINE_CREATED, PUBLISHED, REVIEWABLE_BRANDED_CONTENT} Content type of the unpublished content type url string The URL of a photo that is already uploaded to the Internet. You must specify this or a file attachment user_selected_tags boolean Default value: false User selected tags vault_image_id numeric string or integer A vault image ID to use for a photo. You can use only one of url, a file attachment, vault_image_id, or sync_object_uuid",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
235,GraphQL,Facebook,GET,/v18.0/{album-id}/picture,"A link to the Album cover photo.redirect boolean Default value: true By default the picture edge will return a picture instead of a JSON response. If you want the picture edge to return JSON that describes the image set redirect=0 when you make the request. type enum{thumbnail, small, album} Default value: album The size of this picture. It can be one of the following values: thumbnail, small, album.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
236,GraphQL,Facebook,GET,/v18.0/{app-link-host-id},An individual app link host object created by an app. An app link host is a wrapper for a group of different app links.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
237,GraphQL,Facebook,POST,/app/app_link_hosts,create app link hosts using then/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
238,GraphQL,Facebook,DELET,/v18.0/{app-link-host-id},delete app links using this edgen/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
239,GraphQL,Facebook,POST,/v18.0/{app-link-host-id},update app links using this edgen/a,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
240,GraphQL,Facebook,GET,/v18.0/{application-id},"Get information about a Facebook app.id numeric string The app ID Core aam_rules string Rules of Auto Advanced Matching in FB SDKs an_ad_space_limit unsigned int32 The maximum number of Ad Spaces allowed for each Audience Network supported platform an_platforms list<enum> The platforms associated with the app in the Audience Network product. Not enforced, but when present, it can be used to provide the user with platform specific information for the app and its placements app_domains list<string> Domains and subdomains this app can use app_events_config ApplicationAppEventsConfig Configuration for app events app_install_tracked bool Whether the app install is trackable or not app_name string App name app_signals_binding_ios list<Binding> List of app event bindings for iOS app app_type unsigned int32 App type auth_dialog_data_help_url string The URL of a special landing page that helps people who are using an app begin publishing Open Graph activity auth_dialog_headline string One line description of an app that appears in the Login Dialog auth_dialog_perms_explanation string The text to explain why an app needs additional permissions. This appears in the Login Dialog auth_referral_default_activity_privacy string The default privacy setting selected for Open Graph activities in the Auth Dialog auth_referral_enabled unsigned int32 Indicates whether Authenticated Referrals are enabled auth_referral_extended_perms list<string> Extended permissions that a person can choose to grant when Authenticated Referrals are enabled auth_referral_friend_perms list<string> Basic friends permissions that a user must grant when Authenticated Referrals are enabled auth_referral_response_type string The format that an app receives for the authentication token from the Login Dialog auth_referral_user_perms list<string> Basic user permissions that a user must grant when Authenticated Referrals are enabled canvas_fluid_height bool Indicates whether the app uses fluid or settable height values for Canvas canvas_fluid_width unsigned int32 Indicates whether the app uses fluid or fixed width values for Canvas canvas_url string The non-secure URL from which Canvas app content is loaded category string The category of the app Default client_config map Config data for the client company string The company the app belongs to configured_ios_sso bool True if the app has configured Single Sign On on iOS contact_email string Email address listed for people using the app to contact developers created_time datetime Timestamp that indicates when the app was created creator_uid id User ID of the creator of this app daily_active_users numeric string The number of daily active users the app has daily_active_users_rank unsigned int32 Ranking of this app vs other apps comparing daily active users deauth_callback_url string URL that is pinged whenever a person removes the app default_share_mode string The platform that should be used to share content description string The description of the app, as provided by the developer Core financial_id string The ID for the corresponding audience network financial entity. hosting_url string Webspace created with one of our hosting partners for this app icon_url string The URL of this app's icon ios_bundle_id list<string> Bundle ID of the associated iOS app ios_supports_native_proxy_auth_flow bool Whether to support the native proxy login flow ios_supports_system_auth bool Whether to support the iOS integrated Login Dialog ipad_app_store_id string ID of the app in the iPad App Store iphone_app_store_id string ID of the app in the iPhone App Store latest_sdk_version ApplicationSDKInfo App latest sdk version link string A link to the app on Facebook CoreDefault logging_token string To use for logging purposes logo_url string The URL of the app's logo migrations map<string, bool> Status of migrations for this app mobile_profile_section_url string Mobile URL of the app section on a person's profile mobile_web_url string URL to which Mobile users will be directed when using the app monthly_active_users numeric string The number of monthly active users the app has monthly_active_users_rank unsigned int32 Ranking of this app vs other apps comparing monthly active users name string The name of the app CoreDefault namespace string The string appended to apps.facebook.com/ to navigate to the app's canvas page CoreDefault object_store_urls ApplicationObjectStoreURLs Mobile store URLs for the app page_tab_default_name string The title of the app when used in a Page Tab page_tab_url string The non-secure URL from which Page Tab app content is loaded photo_url string The URL of the app photo privacy_policy_url string The URL that links to a Privacy Policy for the app profile_section_url string URL of the app section on a user's profile for the desktop site property_id string The monetization property which owns this app protected_mode_rules ApplicationProtectedModeRules protected_mode_rules real_time_mode_devices list<string> List of real time hashed device restrictions ApplicationRestrictionInfo Demographic restrictions for the app restrictive_data_filter_params string Params used to filter out restrictive data secure_canvas_url string The secure URL from which Canvas app content is loaded secure_page_tab_url string The secure URL from which Page Tab app content is loaded server_ip_whitelist string App requests must originate from this comma-separated list of IP addresses social_discovery unsigned int32 Indicates whether app usage stories show up in the Ticker or Feed subcategory string The subcategory the app can be found under suggested_events_setting string Settings for suggested events supported_platforms list<enum {WEB, CANVAS, MOBILE_WEB, IPHONE, IPAD, ANDROID, WINDOWS, AMAZON, SUPPLEMENTARY_IMAGES, GAMEROOM, INSTANT_GAME, OCULUS, SAMSUNG, XIAOMI}> All the platform the app supports terms_of_service_url string URL to Terms of Service that appears in the Login Dialog url_scheme_suffix string URL scheme suffix user_support_email string Main contact email for this app where people can receive support user_support_url string URL shown in the Canvas footer that people can visit to get support for the app website_url string URL of a website that integrates with this app weekly_active_users numeric string The number of weekly active users the app has",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
241,GraphQL,Facebook,POST,/{business_id}/owned_apps,"When posting to this edge, an Application will be created.app_version string The version of the app being indexed Required device_session_id string Device session id of the uploading device extra_info string Extra information about the app index platform enum {ANDROID, IOS} The platform of the app being indexed Required request_type enum {APP_INDEXING, PLUGIN, BUTTON_SAMPLING} Default value: ""APP_INDEXING"" Type of the app indexing request tree JSON object The UI component tree of the app",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
242,GraphQL,Facebook,GET,/v18.0/{application-id}/accounts,Represents a collection of test users on an app.type enum{test-users} The type of user requested,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
243,GraphQL,Facebook,POST,/{application_id}/accounts,"When posting to this edge, a TestAccount will be created.installed boolean Automatically installs the app for the test user once it is created or associated minor boolean Is this test user a minor name string The name for the test user. When left blank, a random name will be automatically generated owner_access_token string When associating existing test users with other apps, this is the app access token of any app that is already associated with the test user. The {app-id} in the publishing request in this case should be the app that will is the target to associate with the test user. The API request should also be signed with the app access token of that target app. Required when associating test users, but should not be used when creating new test users permissions List<Permission> Default value: Set List of permissions that are automatically granted for the app when it is created or associated type enum{test-users} Type uid int ID of an existing test user to associate with another app. Required when associating test users, but should not be used when creating new test users",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
244,GraphQL,Facebook,GET,/v18.0/{application-id}/ad_placement_groups,Ad placement groups for publishing ads on this appn/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
245,GraphQL,Facebook,GET,/v18.0/{application-id}/adnetworkanalytics_results,Obtain the results of an async Audience Network query for this publisher entityn/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
246,GraphQL,Facebook,GE,/v18.0/{application-id}/aem_attribution,aem_attributionn/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
247,GraphQL,Facebook,GET,/v18.0/{application-id}/aem_conversion_configs,The aggregated event measurement conversion value configs for this appn/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
248,GraphQL,Facebook,GET,/v18.0/{application-id}/aem_conversion_filter,"Boolean for if product_set_id [fb_content_id] belongs to a certain catalog [catalog_id]catalog_id string catalog_id. Check the product_ids are in this catalog. fb_content_ids string product_set_ids, or fb_content_ids. Check these are in catalog_id",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
249,GraphQL,Facebook,GET,/v19.0/{application-id}/agencies,The businesses which are not owner but can advertise for this app,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
250,GraphQL,Facebook,GET,/v19.0/{application-id}/app_event_types,Info about App Events logged for the app,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between application and event. 0 hierarchical relations were detected out of 4,0,1,Consistent Documentation
251,GraphQL,Facebook,GET,/v19.0/{application-id}/app_installed_groups,List of facebook groups the app is installed ingroup_id group_id ID Id of the group to check if app is installed in it or not,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
252,GraphQL,Facebook,GET,/v19.0/{application-id}/appassets,appassets,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
253,GraphQL,Facebook,GET,/v19.0/{application-id}/button_auto_detection_device_selection,to turn on auto device sampling.device_id string Device id of the given app.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between device and selection. 0 hierarchical relations were detected out of 6,0,1,Consistent Documentation
254,GraphQL,Facebook,GET,/v19.0/{application-id}/cloudbridge_settings,ApplicationCloudbridgeSettings,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
255,GraphQL,Facebook,GET,/v19.0/{application-id}/da_checks,"A list of results after running Dynamic Ads checks on this app.checks list<string> Default value: Vector A list of Dynamic Ads checks that will be run. If not specified, all checks will be run. Valid values are: app_missing_param_in_events connection_method enum{ALL, APP, BROWSER, SERVER} Connection method of pixel/app event to check. This is optional",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
256,GraphQL,Facebook,GET,/v19.0/{application-id}/events,"Retrieves events created on your page on behalf of your appinclude_canceled boolean Whether include canceled events. type enum{attending, created, declined, maybe, not_replied} Query events for which the user has this particular rsvp_status set",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between identification and events. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
257,GraphQL,Facebook,GET,/v19.0/{application-id}/ios_skadnetwork_conversion_config,ApplicationiosSkadnetworkConversionConfigdataset_id int64 used for capi-g to fetch the skan config for dataset,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
258,GraphQL,Facebook,GET,/v19.0/{application-id}/mobile_sdk_gk,"Gatekeeper for Mobile SDKdevice_id string Device ID extinfo Object Extra Information platform enum {ANDROID, IOS} SDK Platform Required sdk_version string SDK version",0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,1,0,Non-descriptive End-point,1,0,Non-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
259,GraphQL,Facebook,GET,/v19.0/{application-id}/model_asset,ApplicationmodelAsset,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
260,GraphQL,Facebook,GET,/v19.0/{application-id}/monetized_digital_store_objects,List of digital store objects for this app monetized via Audience Network,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between store and objects. 0 hierarchical relations were detected out of 5,1,0,Reversed hierarchy of type True detected between store and objects. 0 hierarchical relations were detected out of 5,0,1,Consistent Documentation,0,1,Consistent Documentation
261,GraphQL,Facebook,GET,/v19.0/{application-id}/permissions,"The status of permissions that are have been submitted for Login Reviewandroid_key_hash string The app key hash for the Android app ios_bundle_id string Bundle ID of the iOS app permission List<Permission> Name of permission proxied_app_id int App ID of the original app. The main Facebook apps act as a proxy and pass this ID along with their call status list<enum{live, unapproved}> Default value: Vec Status of permission",0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
262,GraphQL,Facebook,GET,/v19.0/{application-id}/products,In-app-purchaseable products associated with this appproduct_ids list<string> List of product ids (e.g. 'golden_gem') to retrieve info about,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
263,GraphQL,Facebook,GET,/v19.0/{application-id}/purchases,In-app-purchaseable products of this app owned by the user,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
264,GraphQL,Facebook,GET,/v19.0/{app-id}/roles,"The developer roles defined for this appapp_id The ID of the app being requested. string user The ID of the user who has a role in the app. string role The name of the role that this person has. enum{administrators, developers, testers, insights users}",0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
265,GraphQL,Facebook,GET,/v19.0/{application-id}/subscribed_domains,GETGraphApplicationSubscribedDomainsEdge,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
266,GraphQL,Facebook,GET,/v19.0/{application-id}/subscribed_domains_phishing,GETGraphApplicationSubscribedDomainsPhishingEdge,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Version Found,0,1,Regular methods,0,1,Regular methods,1,0,Non-descriptive End-point,1,0,Non-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
267,GraphQL,Facebook,POST,/{application_id}/app_indexing,"When posting to this edge, an Application will be created.app_version string The version of the app being indexed Required device_session_id string Device session id of the uploading device extra_info string Extra information about the app index platform enum {ANDROID, IOS} The platform of the app being indexed Required request_type enum {APP_INDEXING, PLUGIN, BUTTON_SAMPLING} Default value: ""APP_INDEXING"" Type of the app indexing request tree JSON object The UI component tree of the app",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
268,GraphQL,Facebook,POST,/{application_id}/codeless_event_mappings,"When posting to this edge, an Application will be created.mappings array<JSON object> The event to UI component mappings of the app Required mutation_method enum {REPLACE, ADD, DELETE} Detailed mutation type like replace, add Required platform enum {ANDROID, IOS} The platform of the app being indexed Required post_method enum {EYMT, CODELESS} Default value: ""CODELESS"" Whether the api is called by codeless or EYMT",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between event and mappings. 0 hierarchical relations were detected out of 4,1,0,Inconsistent Documentation
269,GraphQL,Facebook,POST,/{application_id}/page_activities,"When posting to this edge, an Application will be created.advertiser_tracking_enabled boolean A person can choose to enable ad tracking on iOS 6+, and that choice is stored within the phone. You should fetch that and return it to Facebook so we know not to use the data for optimization. We will, however, use the data to report on a conversion. See here for an example of how Facebook fetches that variable. For devices running less than iOS 6, this query parameter can default to 1. Use 0 for disabled, 1 for enabled application_tracking_enabled boolean A person can choose to enable ad tracking on an app level. Your SDK should allow an app developer to put an opt-out setting into their app. Use this field to specify the person's choice. Use 0 for disabled, 1 for enabled custom_events list<CustomEvent> Custom events reported logging_source enum {MESSENGER_BOT, DETECTION} Specifies the event source logging_target enum {APP, APP_AND_PAGE, PAGE} Default value: ""APP"" whether the event is logged to app level or page level or both page_id int64 Specifies the Page ID associated with the messenger bot that logs the event page_scoped_user_id int64 Specifies the page scoped User ID associated with the messenger bot that logs the event",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
270,GraphQL,Facebook,POST,/{business_id}/client_apps,"When posting to this edge, an Application will be created.app_id App ID.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
271,GraphQL,Facebook,POST,/{application_id}/mmp_auditing,"When posting to this edge, an Application will be created.advertiser_id string Apple's Advertising Identifier (IDFA) or Google Android's advertising ID. You can see how Facebook fetches this on iOS or on Android attribution string mobile_cookie from the person's device. Use this only on Android or iOS devices before iOS 6. The format for this should look something like DDDECD0A-C076-4050-8CE8-C20EC3FC2BD3 attribution_model string attribution model that clients selected to be respected by MMP auditing_token string Token provided in claim response sent to MMP click_attr_window int64 Time window of click attribution custom_events list<CustomEvent> Custom app events that MMP are sending auditing events for decline_reason string Reason that MMP rejected Facebook ads claim engagement_type string Engagement type that MMP explicitly reports event string Event type that Facebook claimed for Required event_reported_time int64 Time that event reported to MMP fb_ad_id int64 FBID of the ads in Facebook claim Required fb_click_time int64 Ad click time in Facebook claim fb_view_time int64 Ad view time in Facebook claim is_fb boolean Result that whether MMP attribute the event to Facebook ads Required used_install_referrer boolean Identifies whether MMP used the install referrer view_attr_window int64 Time window of view attribution",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
272,GraphQL,Facebook,POST,/act_{ad_account_id}/subscribed_apps,You can update an Application by making a POST request to /act_{ad_account_id}/subscribed_apps.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
273,GraphQL,Facebook,DELETE,/{page_id}/subscribed_apps.,You can dissociate an Application from a Page by making a DELETE request to /{page_id}/subscribed_apps.,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Pluralized last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
274,GraphQL,Facebook,DELETE,/act_{ad_account_id}/subscribed_apps,You can dissociate an Application from an AdAccount by making a DELETE request to /act_{ad_account_id}/subscribed_apps.app_id string Default value: the id of app to be unsubscribed from ad account,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Pluralized last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
275,GraphQL,Facebook,POST,/{application_id}/activities,"Application activities are events from your app.You can use a user access token or app access token to log events to this endpoint.advertiser_id string Apple's Advertising Identifier (IDFA) or Google Android's advertising ID. You can see how Facebook fetches this on iOS or on Android advertiser_tracking_enabled boolean Specifies whether a person has enabled advertising tracking on their device. Set to 0 for disabled or 1 for enabled. You should fetch this data and return it to Meta will use the event data (from partners about user activities off Meta) pursuant to its Data Policy, including for ad reporting, fraud detection and to build and improve our products (including our ads delivery products), but will restrict use of data about that individual to personalize that user’s ads. For devices running earlier versions than iOS 6, this parameter should default to 1. anon_id string The ID of a person who has installed the app anonymously app_user_id string Specifies user id of an app user. Used internally by the iOS and Android SDKs for MOBILE_APP_INSTALL event application_tracking_enabled boolean A person can choose to enable ad tracking on an app level. Your SDK should allow an app developer to put an opt-out setting into their app. Use this field to specify the person's choice. Use 0 for disabled, 1 for enabled attribution string mobile_cookie from the person's device. Use this only on Android or iOS devices before iOS 6. The format for this should look something like DDDECD0A-C076-4050-8CE8-C20EC3FC2BD3 auto_publish boolean This field is not longer being used. Used to be used internally by Facebook's SDK bundle_id string Used internally by Facebook's SDK bundle_short_version string Used internally by Facebook's SDK bundle_version string Used internally by Facebook's SDK campaign_ids string Parameter passed via the deep link for Mobile App Engagement campaigns. click_id string click_id consider_views boolean Specifies that view through data should be considered when determining the ad to attribute this install to. Clicks will always be considered first before views and views will only be returned if there was not a click on an ad for the app custom_events list<CustomEvent> Custom events reported, required with CUSTOM_APP_EVENTS events. Please see our App Events API, App Events for iOS and App Events for Android for more information custom_events_file file Custom file, encoded as JSON that describes the event. Please encode as UTF-8 and attach with the mime type application/json or content/unknown device_token string A token used to identify the device on push networks event enum {MOBILE_APP_INSTALL, CUSTOM_APP_EVENTS, DEFERRED_APP_LINK} Event type, one of MOBILE_APP_INSTALL, CUSTOM_APP_EVENTS or DEFERRED_APP_LINK. If you are reporting a MOBILE_APP_INSTALL event, you must include either attribution or advertiser_id in the request Required extinfo Object Extended device and source information array, used by Facebook's SDKs, MMPs and Bots for Messenger. This parameter is an array and must be in a specific format. Please see our App Events API for more information include_dwell_data boolean Specifies that view dwell ms should be returned as part of view through data include_video_data boolean Specifies that video view completion percentages should be returned as part of view through data install_referrer string 3rd party install referrer, currently available for Android only, see https://developers.google.com/analytics/devguides/collection/android/v4/campaigns installer_package string Used internally by the Android SDKs migration_bundle string Used internally by the iOS and Android SDKs page_id int64 Specifies the Page ID associated with the messenger bot that logs the event page_scoped_user_id int64 Specifies the page scoped User ID associated with the messenger bot that logs the event receipt_data string The receipts of in-app purchase ud JSON object Optional user data parameters for advanced matchingProvide hashed fields as key/value pairs similar to the Pixel url_schemes list<string> Used internally by the iOS and Android SDKs user_id string user_id user_id_type enum {INSTANT_GAMES_PLAYER_ID} user_id_type vendor_id string vendor_id windows_attribution_id string Attribution token used for Windows 10",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
276,GraphQL,Facebook,GET,/v19.0/{application-id}/ad_placement_groups,Application Ad Placement Groups,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
277,GraphQL,Facebook,GET,/v19.0/{application-id}/adnetworkanalytics_results,Application Adnetworkanalytics Resultsquery_ids list<string> Default value: Vec Set of query ids to get result for,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
278,GraphQL,Facebook,GET,/v19.0/{app-id}/picture,An app's profile picture.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
279,GraphQL,Facebook,GET,/v19.0/{app-id}/scores,Scores from this Facebook game for a user and their friends.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
280,GraphQL,Facebook,DELETE,/v19.0/{app-id}/scores,"You can delete all scores from your app using this edge. To delete individual scores, use the /{user-id}/scores edge.",0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Pluralized last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
281,GraphQL,Facebook,POST,/v19.0/{app-id}/subscriptions,You can create new Webhooks subscriptions using this edge,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
282,GraphQL,Facebook,DELETE,/v19.0/{app-id}/subscriptions,You can delete all or per-object subscriptions using this operation:,0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Pluralized last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
283,GraphQL,Facebook,POST,/v19.0/{app-id}/translations,You can specify new strings to be translated for your app using this edge:,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
284,GraphQL,Facebook,GET,/v19.0/branded_content_search,"Returns branded content based on your search. By default we only return content that is currently available on Facebook or Instagram, and content that was created on or after August 17, 2023.creation_date_max string Search for branded content posted after the date (inclusive) you provide. The date format should be YYYY-mm-dd. Required creation_date_min string Search for branded content posted before the date (inclusive) you provide. The date format should be YYYY-mm-dd. Required ig_username string Search for an Instagram account that posted branded content or was a brand partner. Your search must include this parameter or page_url. page_url URI Search for a Facebook Page that posted branded content or was a brand partner. Your search must include this parameter or ig_username.",0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
285,GraphQL,Facebook,GET,/v19.0/{cpas-advertiser-partnership-recommendation-id},Returns a recommendation of a single retailer for a specific brand. This endpoint returns a retailer-brand pair and an advertiser who can advertise on behalf of the producer.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
286,GraphQL,Facebook,GET,/v19.0/{canvas-id},A canvas documentid numeric string ID of the Canvas,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
287,GraphQL,Facebook,GET,/v19.0/{canvas-id}/preview,Get preview HTML embed element,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
288,GraphQL,Facebook,GET,/v19.0/{canvas-id}/previews,Get preview notifications for the canvas. Sends a Canvas preview notification to specified page admin ids.user_idslist<int>SELF_EXPLANATORY,0,1, ,0,1, ,0,1, ,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1, ,0,1,Consistent Documentation
289,GraphQL,GitHub,GET,/codeOfConduct,Look up a code of conduct by its key.key: The code of conduct's key.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
290,GraphQL,GitHub,GET,/codesOfConduct,Look up a code of conduct by its key.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
291,GraphQL,GitHub,GET,/enterprise,"Look up an enterprise by URL slug.invitationToken: The enterprise invitation token., slug: The enterprise URL slug.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
292,GraphQL,GitHub,GET,/enterpriseAdministratorInvitation,"Look up a pending enterprise administrator invitation by invitee, enterprise and role.enterpriseSlug: The slug of the enterprise the user was invited to join., role: The role for the business member invitation., userLogin: The login of the user invited to join the business.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
293,GraphQL,GitHub,GET,/enterpriseAdministratorInvitationByToken,Look up a pending enterprise administrator invitation by invitation token.invitationToken: The invitation token sent with the invitation email.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
294,GraphQL,GitHub,GET,/license,Look up an open source license by its key.key: The license's downcased SPDX ID.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
295,GraphQL,GitHub,GET,/licenses,Return a list of known open source licenses.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
296,GraphQL,GitHub,GET,/marketplaceCategories,"Get alphabetically sorted list of Marketplace categories.excludeEmpty: Exclude categories with no listings., excludeSubcategories: Returns top level categories only, excluding any subcategories., includeCategories: Return only the specified categories.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
297,GraphQL,GitHub,GET,/marketplaceCategory,"Look up a Marketplace category by its slug.slug: The URL slug of the category., useTopicAliases: Also check topic aliases for the category slug.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
298,GraphQL,GitHub,GET,/marketplaceListing,Look up a single Marketplace listing.slug: Select the listing that matches this slug. It's the short name of the listing used in its URL.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
299,GraphQL,GitHub,GET,/marketplaceListings,"Look up Marketplace listings.adminId: Select listings that can be administered by the specified user., after: Returns the elements in the list that come after the specified cursor., allStates: Select listings visible to the viewer even if they are not approved. If omitted orfalse, only approved listings will be returned., before: Returns the elements in the list that come before the specified cursor., categorySlug: Select only listings with the given category., first: Returns the first n elements from the list., last: Returns the last n elements from the list., organizationId: Select listings for products owned by the specified organization., primaryCategoryOnly: Select only listings where the primary category matches the given category slug., slugs: Select the listings with these slugs, if they are visible to the viewer., useTopicAliases: Also check topic aliases for the category slug., viewerCanAdmin: Select listings to which user has admin access. If omitted, listings visible to theviewer are returned., withFreeTrialsOnly: Select only listings that offer a free trial.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
300,GraphQL,GitHub,GET,/meta,Return information about the GitHub instance.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
301,GraphQL,GitHub,GET,/node,Fetches an object given its ID.id: ID of the object.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
302,GraphQL,GitHub,GET,/nodes,Lookup nodes by a list of IDs.ids: The list of node IDs.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
303,GraphQL,GitHub,GET,/organization,Lookup a organization by login.login: The organization's login.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
304,GraphQL,GitHub,GET,/rateLimit,"The client's rate limit information.dryRun: If true, calculate the cost for the query without evaluating it.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
305,GraphQL,GitHub,GET,/relay,Workaround for re-exposing the root query object. (Refer tohttps://github.com/facebook/relay/issues/112 for more information.).,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
306,GraphQL,GitHub,GET,/repository,"Lookup a given repository by the owner and repository name.followRenames: Follow repository renames. If disabled, a repository referenced by its old name will return an error., name: The name of the repository., owner: The login field of a user or organization.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
307,GraphQL,GitHub,GET,/repositoryOwner,Lookup a repository owner (ie. either a User or an Organization) by login.login: The username to lookup the owner by.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
308,GraphQL,GitHub,GET,/resource,Lookup resource by a URL.url: The URL.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
309,GraphQL,GitHub,GET,/search,"Perform a search across resources, returning a maximum of 1,000 results.after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., first: Returns the first n elements from the list., last: Returns the last n elements from the list., query: The search string to look for., type: The types of search items to search within.",0,1,,0,1,,1,0,[search found],1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
310,GraphQL,GitHub,GET,/securityAdvisories,"GitHub Security Advisories.after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., classifications: A list of classifications to filter advisories by., first: Returns the first n elements from the list., identifier: Filter advisories by identifier, e.g. GHSA or CVE., last: Returns the last n elements from the list., orderBy: Ordering options for the returned topics., publishedSince: Filter advisories to those published since a time in the past., updatedSince: Filter advisories to those updated since a time in the past.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
311,GraphQL,GitHub,GET,/securityAdvisory,Fetch a Security Advisory by its GHSA ID.ghsaId: GitHub Security Advisory ID.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
312,GraphQL,GitHub,GET,/securityVulnerabilities,"Software Vulnerabilities documented by GitHub Security Advisories.after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., classifications: A list of advisory classifications to filter vulnerabilities by., ecosystem: An ecosystem to filter vulnerabilities by., first: Returns the first n elements from the list., last: Returns the last n elements from the list., orderBy: Ordering options for the returned topics., package: A package name to filter vulnerabilities by., severities: A list of severities to filter vulnerabilities by.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
313,GraphQL,GitHub,GET,/sponsorables,"Users and organizations who can be sponsored via GitHub Sponsors.after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., dependencyEcosystem: Optional filter for which dependencies should be checked for sponsorableowners. Only sponsorable owners of dependencies in this ecosystem will beincluded. Used when onlyDependencies = true.Upcoming Change on 2022-07-01 UTCDescription: dependencyEcosystem will be removed. Use the ecosystem argument instead.Reason: The type is switching from SecurityAdvisoryEcosystem to DependencyGraphEcosystem., ecosystem: Optional filter for which dependencies should be checked for sponsorableowners. Only sponsorable owners of dependencies in this ecosystem will beincluded. Used when onlyDependencies = true., first: Returns the first n elements from the list., last: Returns the last n elements from the list., onlyDependencies: Whether only sponsorables who own the viewer's dependencies will bereturned. Must be authenticated to use. Can check an organization insteadfor their dependencies owned by sponsorables by passingorgLoginForDependencies., orderBy: Ordering options for users and organizations returned from the connection., orgLoginForDependencies: Optional organization username for whose dependencies should be checked.Used when onlyDependencies = true. Omit to check your own dependencies. Ifyou are not an administrator of the organization, only dependencies from itspublic repositories will be considered.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
314,GraphQL,GitHub,GET,/topic,Look up a topic by name.name: The topic's name.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
315,GraphQL,GitHub,GET,/user,Lookup a user by login.login: The user's login.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
316,GraphQL,GitHub,GET,/viewer,The currently authenticated user.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
317,GraphQL,GitHub,POST,/abortQueuedMigrations,"Clear all of a customer's queued migrations.clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
318,GraphQL,GitHub,POST,/abortRepositoryMigration,"Abort a repository migration queued or in progress.clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
319,GraphQL,GitHub,POST,/acceptEnterpriseAdministratorInvitation,"Accepts a pending invitation for a user to become an administrator of an enterprise.clientMutationId: A unique identifier for the client performing the mutation., invitation: The invitation that was accepted., message: A message confirming the result of accepting an administrator invitation.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
320,GraphQL,GitHub,POST,/acceptTopicSuggestion,"Applies a suggested topic to the repository.clientMutationId: A unique identifier for the client performing the mutation., topic: The accepted topic.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
321,GraphQL,GitHub,POST,/addAssigneesToAssignable,"Adds assignees to an assignable object.assignable: The item that was assigned., clientMutationId: A unique identifier for the client performing the mutation.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
322,GraphQL,GitHub,POST,/addComment,"Adds a comment to an Issue or Pull Request.clientMutationId: A unique identifier for the client performing the mutation., commentEdge: The edge from the subject's comment connection., subject: The subject., timelineEdge: The edge from the subject's timeline connection.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
323,GraphQL,GitHub,POST,/addDiscussionComment,"Adds a comment to a Discussion, possibly as a reply to another comment.clientMutationId: A unique identifier for the client performing the mutation., comment: The newly created discussion comment.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
324,GraphQL,GitHub,POST,/addDiscussionPollVote,"Vote for an option in a discussion poll.clientMutationId: A unique identifier for the client performing the mutation., pollOption: The poll option that a vote was added to.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between poll and vote. 0 hierarchical relations were detected out of 3,0,1,Consistent Documentation
325,GraphQL,GitHub,POST,/addEnterpriseOrganizationMember,"Adds enterprise members to an organization within the enterprise.clientMutationId: A unique identifier for the client performing the mutation., users: The users who were added to the organization.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between enterprise and organization. 0 hierarchical relations were detected out of 3,0,1,Consistent Documentation
326,GraphQL,GitHub,POST,/addEnterpriseSupportEntitlement,"Adds a support entitlement to an enterprise member.clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of adding the support entitlement.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
327,GraphQL,GitHub,POST,/addLabelsToLabelable,"Adds labels to a labelable object.clientMutationId: A unique identifier for the client performing the mutation., labelable: The item that was labeled.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
328,GraphQL,GitHub,POST,/addProjectCard,"Adds a card to a ProjectColumn. Either contentId or note must be provided but not both.cardEdge: The edge from the ProjectColumn's card connection., clientMutationId: A unique identifier for the client performing the mutation., projectColumn: The ProjectColumn.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
329,GraphQL,GitHub,POST,/addProjectColumn,"Adds a column to a Project.clientMutationId: A unique identifier for the client performing the mutation., columnEdge: The edge from the project's column connection., project: The project.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
330,GraphQL,GitHub,POST,/addProjectV2DraftIssue,"Creates a new draft issue and add it to a Project.clientMutationId: A unique identifier for the client performing the mutation., projectItem: The draft issue added to the project.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
331,GraphQL,GitHub,POST,/addProjectV2ItemById,"Links an existing content instance to a Project.clientMutationId: A unique identifier for the client performing the mutation., item: The item added to the project.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
332,GraphQL,GitHub,POST,/addPullRequestReview,"Adds a review to a Pull Request.clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The newly created pull request review., reviewEdge: The edge from the pull request's review connection.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
333,GraphQL,GitHub,POST,/addPullRequestReviewComment,"Adds a comment to a review.clientMutationId: A unique identifier for the client performing the mutation., comment: The newly created comment., commentEdge: The edge from the review's comment connection.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
334,GraphQL,GitHub,POST,/addPullRequestReviewThread,"Adds a new thread to a pending Pull Request Review.clientMutationId: A unique identifier for the client performing the mutation., thread: The newly created thread.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
335,GraphQL,GitHub,POST,/addPullRequestReviewThreadReply,"Adds a reply to an existing Pull Request Review Thread.clientMutationId: A unique identifier for the client performing the mutation., comment: The newly created reply.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
336,GraphQL,GitHub,POST,/addReaction,"Adds a reaction to a subject.clientMutationId: A unique identifier for the client performing the mutation., reaction: The reaction object., reactionGroups: The reaction groups for the subject., subject: The reactable subject.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
337,GraphQL,GitHub,POST,/addStar,"Adds a star to a Starrable.clientMutationId: A unique identifier for the client performing the mutation., starrable: The starrable.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
338,GraphQL,GitHub,POST,/addUpvote,"Add an upvote to a discussion or discussion comment.clientMutationId: A unique identifier for the client performing the mutation., subject: The votable subject.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
339,GraphQL,GitHub,POST,/addVerifiableDomain,"Adds a verifiable domain to an owning account.clientMutationId: A unique identifier for the client performing the mutation., domain: The verifiable domain that was added.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
340,GraphQL,GitHub,POST,/approveDeployments,"Approve all pending deployments under one or more environments.clientMutationId: A unique identifier for the client performing the mutation., deployments: The affected deployments.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
341,GraphQL,GitHub,POST,/approveVerifiableDomain,"Approve a verifiable domain for notification delivery.clientMutationId: A unique identifier for the client performing the mutation., domain: The verifiable domain that was approved.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
342,GraphQL,GitHub,POST,/archiveProjectV2Item,"Archives a ProjectV2Item.clientMutationId: A unique identifier for the client performing the mutation., item: The item archived from the project.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
343,GraphQL,GitHub,POST,/archiveRepository,"Marks a repository as archived.clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that was marked as archived.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between archive and repository. 0 hierarchical relations were detected out of 1,0,1,Consistent Documentation
344,GraphQL,GitHub,POST,/cancelEnterpriseAdminInvitation,"Cancels a pending invitation for an administrator to join an enterprise.clientMutationId: A unique identifier for the client performing the mutation., invitation: The invitation that was canceled., message: A message confirming the result of canceling an administrator invitation.",0,1,,0,1,,1,0,[cancel found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
345,GraphQL,GitHub,POST,/cancelSponsorship,"Cancel an active sponsorship.clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The tier that was being used at the time of cancellation.",0,1,,0,1,,1,0,[cancel found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
346,GraphQL,GitHub,POST,/changeUserStatus,"Update your status on GitHub.clientMutationId: A unique identifier for the client performing the mutation., status: Your updated status.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
347,GraphQL,GitHub,POST,/clearLabelsFromLabelable,"Clears all labels from a labelable object.clientMutationId: A unique identifier for the client performing the mutation., labelable: The item that was unlabeled.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,1,0,Reversed hierarchy of type True detected between clear and labels. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
348,GraphQL,GitHub,POST,/clearProjectV2ItemFieldValue,"This mutation clears the value of a field for an item in a Project. Currentlyonly text, number, date, assignees, labels, single-select, iteration andmilestone fields are supported.clientMutationId: A unique identifier for the client performing the mutation., projectV2Item: The updated item.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
349,GraphQL,GitHub,POST,/cloneProject,"Creates a new project by cloning configuration from an existing project.clientMutationId: A unique identifier for the client performing the mutation., jobStatusId: The id of the JobStatus for populating cloned fields., project: The new cloned project.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
350,GraphQL,GitHub,POST,/cloneTemplateRepository,"Create a new repository with the same files and directory structure as a template repository.clientMutationId: A unique identifier for the client performing the mutation., repository: The new repository.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
351,GraphQL,GitHub,POST,/closeDiscussion,"Close a discussion.clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was closed.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
352,GraphQL,GitHub,POST,/closeIssue,"Close an issue.clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was closed.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
353,GraphQL,GitHub,POST,/closePullRequest,"Close a pull request.clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was closed.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
354,GraphQL,GitHub,POST,/convertProjectCardNoteToIssue,"Convert a project note card to one associated with a newly created issue.clientMutationId: A unique identifier for the client performing the mutation., projectCard: The updated ProjectCard.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
355,GraphQL,GitHub,POST,/convertPullRequestToDraft,"Converts a pull request to draft.clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that is now a draft.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
356,GraphQL,GitHub,POST,/copyProjectV2,"Copy a project.clientMutationId: A unique identifier for the client performing the mutation., projectV2: The copied project.",0,1,,0,1,,1,0,[copy found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
357,GraphQL,GitHub,POST,/createAttributionInvitation,"Invites a user to claim reattributable data.clientMutationId: A unique identifier for the client performing the mutation., owner: The owner scoping the reattributable data., source: The account owning the data to reattribute., target: The account which may claim the data.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
358,GraphQL,GitHub,POST,/createBranchProtectionRule,"Create a new branch protection rule.branchProtectionRule: The newly created BranchProtectionRule., clientMutationId: A unique identifier for the client performing the mutation.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
359,GraphQL,GitHub,POST,/createCheckRun,"Create a check run.checkRun: The newly created check run., clientMutationId: A unique identifier for the client performing the mutation.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and check. 0 hierarchical relations were detected out of 2,1,0,Inconsistent Documentation
360,GraphQL,GitHub,POST,/createCheckSuite,"Create a check suite.checkSuite: The newly created check suite., clientMutationId: A unique identifier for the client performing the mutation.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and check. 0 hierarchical relations were detected out of 2,1,0,Inconsistent Documentation
361,GraphQL,GitHub,POST,/createCommitOnBranch,"Appends a commit to the given branch as the authenticated user.This mutation creates a commit whose parent is the HEAD of the providedbranch and also updates that branch to point to the new commit.It can be thought of as similar to git commit.Locating a BranchCommits are appended to a branch of type Ref.This must refer to a git branch (i.e.  the fully qualified path mustbegin with refs/heads/, although including this prefix is optional.Callers may specify the branch to commit to either by its global nodeID or by passing both of repositoryNameWithOwner and refName.  Formore details see the documentation for CommittableBranch.Describing ChangesfileChanges are specified as a FilesChanges object describingFileAdditions and FileDeletions.Please see the documentation for FileChanges for more information onhow to use this argument to describe any set of file changes.AuthorshipSimilar to the web commit interface, this mutation does not supportspecifying the author or committer of the commit and will not addsupport for this in the future.A commit created by a successful execution of this mutation will beauthored by the owner of the credential which authenticates the APIrequest.  The committer will be identical to that of commits authoredusing the web interface.If you need full control over author and committer information, pleaseuse the Git Database REST API instead.Commit SigningCommits made using this mutation are automatically signed by GitHub ifsupported and will be marked as verified in the user interface.clientMutationId: A unique identifier for the client performing the mutation., commit: The new commit., ref: The ref which has been updated to point to the new commit.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
362,GraphQL,GitHub,POST,/createDeployment,"Creates a new deployment event.autoMerged: True if the default branch has been auto-merged into the deployment ref., clientMutationId: A unique identifier for the client performing the mutation., deployment: The new deployment.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
363,GraphQL,GitHub,POST,/createDeploymentStatus,"Create a deployment status.clientMutationId: A unique identifier for the client performing the mutation., deploymentStatus: The new deployment status.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
364,GraphQL,GitHub,POST,/createDiscussion,"Create a discussion.clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was just created.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
365,GraphQL,GitHub,POST,/createEnterpriseOrganization,"Creates an organization as part of an enterprise account. A personal accesstoken used to create an organization is implicitly permitted to update theorganization it created, if the organization is part of an enterprise that hasSAML enabled or uses Enterprise Managed Users. If the organization is not partof such an enterprise, and instead has SAML enabled for it individually, thetoken will then require SAML authorization to continue working against that organization.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise that owns the created organization., organization: The organization that was created.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between enterprise and organization. 0 hierarchical relations were detected out of 2,1,0,Inconsistent Documentation
366,GraphQL,GitHub,POST,/createEnvironment,"Creates an environment or simply returns it if already exists.clientMutationId: A unique identifier for the client performing the mutation., environment: The new or existing environment.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
367,GraphQL,GitHub,POST,/createIpAllowListEntry,"Creates a new IP allow list entry.clientMutationId: A unique identifier for the client performing the mutation., ipAllowListEntry: The IP allow list entry that was created.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
368,GraphQL,GitHub,POST,/createIssue,"Creates a new issue.clientMutationId: A unique identifier for the client performing the mutation., issue: The new issue.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
369,GraphQL,GitHub,POST,/createLabel,"Creates a new label.clientMutationId: A unique identifier for the client performing the mutation., label: The new label.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
370,GraphQL,GitHub,POST,/createLinkedBranch,"Create a branch linked to an issue.clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was linked to., linkedBranch: The new branch issue reference.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
371,GraphQL,GitHub,POST,/createMigrationSource,"Creates a GitHub Enterprise Importer (GEI) migration source.clientMutationId: A unique identifier for the client performing the mutation., migrationSource: The created migration source.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
372,GraphQL,GitHub,POST,/createProject,"Creates a new project.clientMutationId: A unique identifier for the client performing the mutation., project: The new project.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and project. 0 hierarchical relations were detected out of 1,0,1,Consistent Documentation
373,GraphQL,GitHub,POST,/createProjectV2,"Creates a new project.clientMutationId: A unique identifier for the client performing the mutation., projectV2: The new project.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and project. 0 hierarchical relations were detected out of 1,0,1,Consistent Documentation
374,GraphQL,GitHub,POST,/createProjectV2Field,"Create a new project field.clientMutationId: A unique identifier for the client performing the mutation., projectV2Field: The new field.",1,0,[uppercase found],0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and project. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
375,GraphQL,GitHub,POST,/createPullRequest,"Create a new pull request.clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The new pull request.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
376,GraphQL,GitHub,POST,/createRef,"Create a new Git Ref.clientMutationId: A unique identifier for the client performing the mutation., ref: The newly created ref.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
377,GraphQL,GitHub,POST,/createRepository,"Create a new repository.clientMutationId: A unique identifier for the client performing the mutation., repository: The new repository.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
378,GraphQL,GitHub,POST,/createRepositoryRuleset,"Create a repository ruleset.clientMutationId: A unique identifier for the client performing the mutation., ruleset: The newly created Ruleset.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
379,GraphQL,GitHub,POST,/createSponsorsListing,"Create a GitHub Sponsors profile to allow others to sponsor you or your organization.clientMutationId: A unique identifier for the client performing the mutation., sponsorsListing: The new GitHub Sponsors profile.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
380,GraphQL,GitHub,POST,/createSponsorsTier,"Create a new payment tier for your GitHub Sponsors profile.clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The new tier.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
381,GraphQL,GitHub,POST,/createSponsorship,"Start a new sponsorship of a maintainer in GitHub Sponsors, or reactivate a past sponsorship.clientMutationId: A unique identifier for the client performing the mutation., sponsorship: The sponsorship that was started.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
382,GraphQL,GitHub,POST,/createSponsorships,"Make many one-time sponsorships for different sponsorable users ororganizations at once. Can only sponsor those who have a public GitHubSponsors profile.clientMutationId: A unique identifier for the client performing the mutation., sponsorables: The users and organizations who received a sponsorship.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
383,GraphQL,GitHub,POST,/createTeamDiscussion,"Creates a new team discussion.clientMutationId: A unique identifier for the client performing the mutation., teamDiscussion: The new discussion.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
384,GraphQL,GitHub,POST,/createTeamDiscussionComment,"Creates a new team discussion comment.clientMutationId: A unique identifier for the client performing the mutation., teamDiscussionComment: The new comment.",0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
385,GraphQL,GitHub,POST,/declineTopicSuggestion,"Rejects a suggested topic for the repository.clientMutationId: A unique identifier for the client performing the mutation., topic: The declined topic.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
386,GraphQL,GitHub,POST,/deleteBranchProtectionRule,Delete a branch protection rule.clientMutationId: A unique identifier for the client performing the mutation.,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
387,GraphQL,GitHub,POST,/deleteDeployment,Deletes a deployment.clientMutationId: A unique identifier for the client performing the mutation.,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
388,GraphQL,GitHub,POST,/deleteDiscussion,"Delete a discussion and all of its replies.clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was just deleted.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
389,GraphQL,GitHub,POST,/deleteDiscussionComment,"Delete a discussion comment. If it has replies, wipe it instead.clientMutationId: A unique identifier for the client performing the mutation., comment: The discussion comment that was just deleted.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
390,GraphQL,GitHub,POST,/deleteEnvironment,Deletes an environment.clientMutationId: A unique identifier for the client performing the mutation.,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
391,GraphQL,GitHub,POST,/deleteIpAllowListEntry,"Deletes an IP allow list entry.clientMutationId: A unique identifier for the client performing the mutation., ipAllowListEntry: The IP allow list entry that was deleted.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
392,GraphQL,GitHub,POST,/deleteIssue,"Deletes an Issue object.clientMutationId: A unique identifier for the client performing the mutation., repository: The repository the issue belonged to.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
393,GraphQL,GitHub,POST,/deleteIssueComment,Deletes an IssueComment object.clientMutationId: A unique identifier for the client performing the mutation.,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
394,GraphQL,GitHub,POST,/deleteLabel,Deletes a label.clientMutationId: A unique identifier for the client performing the mutation.,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
395,GraphQL,GitHub,POST,/deleteLinkedBranch,"Unlink a branch from an issue.clientMutationId: A unique identifier for the client performing the mutation., issue: The issue the linked branch was unlinked from.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
396,GraphQL,GitHub,POST,/deletePackageVersion,"Delete a package version.clientMutationId: A unique identifier for the client performing the mutation., success: Whether or not the operation succeeded.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
397,GraphQL,GitHub,POST,/deleteProject,"Deletes a project.clientMutationId: A unique identifier for the client performing the mutation., owner: The repository or organization the project was removed from.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
398,GraphQL,GitHub,POST,/deleteProjectCard,"Deletes a project card.clientMutationId: A unique identifier for the client performing the mutation., column: The column the deleted card was in., deletedCardId: The deleted card ID.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
399,GraphQL,GitHub,POST,/deleteProjectColumn,"Deletes a project column.clientMutationId: A unique identifier for the client performing the mutation., deletedColumnId: The deleted column ID., project: The project the deleted column was in.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
400,GraphQL,GitHub,POST,/deleteProjectV2,"Delete a project.clientMutationId: A unique identifier for the client performing the mutation., projectV2: The deleted Project.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
401,GraphQL,GitHub,POST,/deleteProjectV2Field,"Delete a project field.clientMutationId: A unique identifier for the client performing the mutation., projectV2Field: The deleted field.",1,0,[uppercase found],0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
402,GraphQL,GitHub,POST,/deleteProjectV2Item,"Deletes an item from a Project.clientMutationId: A unique identifier for the client performing the mutation., deletedItemId: The ID of the deleted item.",1,0,[uppercase found],0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
403,GraphQL,GitHub,POST,/deleteProjectV2Workflow,"Deletes a project workflow.clientMutationId: A unique identifier for the client performing the mutation., deletedWorkflowId: The ID of the deleted workflow., projectV2: The project the deleted workflow was in.",1,0,[uppercase found],0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
404,GraphQL,GitHub,POST,/deletePullRequestReview,"Deletes a pull request review.clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The deleted pull request review.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
405,GraphQL,GitHub,POST,/deletePullRequestReviewComment,"Deletes a pull request review comment.clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The pull request review the deleted comment belonged to., pullRequestReviewComment: The deleted pull request review comment.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
406,GraphQL,GitHub,POST,/deleteRef,Delete a Git Ref.clientMutationId: A unique identifier for the client performing the mutation.,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
407,GraphQL,GitHub,POST,/deleteRepositoryRuleset,Delete a repository ruleset.clientMutationId: A unique identifier for the client performing the mutation.,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,1,0,Inconsistent Documentation
408,GraphQL,GitHub,POST,/deleteTeamDiscussion,Deletes a team discussion.clientMutationId: A unique identifier for the client performing the mutation.,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
409,GraphQL,GitHub,POST,/deleteTeamDiscussionComment,Deletes a team discussion comment.clientMutationId: A unique identifier for the client performing the mutation.,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
410,GraphQL,GitHub,POST,/deleteVerifiableDomain,"Deletes a verifiable domain.clientMutationId: A unique identifier for the client performing the mutation., owner: The owning account from which the domain was deleted.",0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
411,GraphQL,GitHub,POST,/dequeuePullRequest,"Remove a pull request from the merge queue.clientMutationId: A unique identifier for the client performing the mutation., mergeQueueEntry: The merge queue entry of the dequeued pull request.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
412,GraphQL,GitHub,POST,/disablePullRequestAutoMerge,"Disable auto merge on the given pull request.actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request auto merge was disabled on.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
413,GraphQL,GitHub,POST,/dismissPullRequestReview,"Dismisses an approved or rejected pull request review.clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The dismissed pull request review.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
414,GraphQL,GitHub,POST,/dismissRepositoryVulnerabilityAlert,"Dismisses the Dependabot alert.clientMutationId: A unique identifier for the client performing the mutation., repositoryVulnerabilityAlert: The Dependabot alert that was dismissed.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
415,GraphQL,GitHub,POST,/enablePullRequestAutoMerge,"Enable the default auto-merge on a pull request.actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request auto-merge was enabled on.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
416,GraphQL,GitHub,POST,/enqueuePullRequest,"Add a pull request to the merge queue.clientMutationId: A unique identifier for the client performing the mutation., mergeQueueEntry: The merge queue entry for the enqueued pull request.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
417,GraphQL,GitHub,POST,/followOrganization,"Follow an organization.clientMutationId: A unique identifier for the client performing the mutation., organization: The organization that was followed.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
418,GraphQL,GitHub,POST,/followUser,"Follow a user.clientMutationId: A unique identifier for the client performing the mutation., user: The user that was followed.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
419,GraphQL,GitHub,POST,/grantEnterpriseOrganizationsMigratorRole,"Grant the migrator role to a user for all organizations under an enterprise account.clientMutationId: A unique identifier for the client performing the mutation., organizations: The organizations that had the migrator role applied to for the given user.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between enterprise and organizations. 0 hierarchical relations were detected out of 4,0,1,Consistent Documentation
420,GraphQL,GitHub,POST,/grantMigratorRole,"Grant the migrator role to a user or a team.clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
421,GraphQL,GitHub,POST,/importProject,"Creates a new project by importing columns and a list of issues/PRs.clientMutationId: A unique identifier for the client performing the mutation., project: The new Project!.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
422,GraphQL,GitHub,POST,/inviteEnterpriseAdmin,"Invite someone to become an administrator of the enterprise.clientMutationId: A unique identifier for the client performing the mutation., invitation: The created enterprise administrator invitation.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
423,GraphQL,GitHub,POST,/linkProjectV2ToRepository,"Links a project to a repository.clientMutationId: A unique identifier for the client performing the mutation., repository: The repository the project is linked to.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
424,GraphQL,GitHub,POST,/linkProjectV2ToTeam,"Links a project to a team.clientMutationId: A unique identifier for the client performing the mutation., team: The team the project is linked to.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
425,GraphQL,GitHub,POST,/linkRepositoryToProject,"Creates a repository link for a project.clientMutationId: A unique identifier for the client performing the mutation., project: The linked Project., repository: The linked Repository.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
426,GraphQL,GitHub,POST,/lockLockable,"Lock a lockable object.actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., lockedRecord: The item that was locked.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
427,GraphQL,GitHub,POST,/markDiscussionCommentAsAnswer,"Mark a discussion comment as the chosen answer for discussions in an answerable category.clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that includes the chosen comment.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
428,GraphQL,GitHub,POST,/markFileAsViewed,"Mark a pull request file as viewed.clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
429,GraphQL,GitHub,POST,/markProjectV2AsTemplate,"Mark a project as a template. Note that only projects which are owned by an Organization can be marked as a template.clientMutationId: A unique identifier for the client performing the mutation., projectV2: The project.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
430,GraphQL,GitHub,POST,/markPullRequestReadyForReview,"Marks a pull request ready for review.clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that is ready for review.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
431,GraphQL,GitHub,POST,/mergeBranch,"Merge a head into a branch.clientMutationId: A unique identifier for the client performing the mutation., mergeCommit: The resulting merge Commit.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
432,GraphQL,GitHub,POST,/mergePullRequest,"Merge a pull request.actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was merged.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
433,GraphQL,GitHub,POST,/minimizeComment,"Minimizes a comment on an Issue, Commit, Pull Request, or Gist.clientMutationId: A unique identifier for the client performing the mutation., minimizedComment: The comment that was minimized.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between minimize and comment. 0 hierarchical relations were detected out of 1,0,1,Consistent Documentation
434,GraphQL,GitHub,POST,/moveProjectCard,"Moves a project card to another place.cardEdge: The new edge of the moved card., clientMutationId: A unique identifier for the client performing the mutation.",0,1,,0,1,,1,0,[move found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between move and project. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
435,GraphQL,GitHub,POST,/moveProjectColumn,"Moves a project column to another place.clientMutationId: A unique identifier for the client performing the mutation., columnEdge: The new edge of the moved column.",0,1,,0,1,,1,0,[move found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between move and project. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
436,GraphQL,GitHub,POST,/pinIssue,"Pin an issue to a repository.clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was pinned.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
437,GraphQL,GitHub,POST,/publishSponsorsTier,"Publish an existing sponsorship tier that is currently still a draft to a GitHub Sponsors profile.clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The tier that was published.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
438,GraphQL,GitHub,POST,/regenerateEnterpriseIdentityProviderRecoveryCodes,"Regenerates the identity provider recovery codes for an enterprise.clientMutationId: A unique identifier for the client performing the mutation., identityProvider: The identity provider for the enterprise.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
439,GraphQL,GitHub,POST,/regenerateVerifiableDomainToken,"Regenerates a verifiable domain's verification token.clientMutationId: A unique identifier for the client performing the mutation., verificationToken: The verification token that was generated.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
440,GraphQL,GitHub,POST,/rejectDeployments,"Reject all pending deployments under one or more environments.clientMutationId: A unique identifier for the client performing the mutation., deployments: The affected deployments.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
441,GraphQL,GitHub,POST,/removeAssigneesFromAssignable,"Removes assignees from an assignable object.assignable: The item that was unassigned., clientMutationId: A unique identifier for the client performing the mutation.",0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
442,GraphQL,GitHub,POST,/removeEnterpriseAdmin,"Removes an administrator from the enterprise.admin: The user who was removed as an administrator., clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise., message: A message confirming the result of removing an administrator., viewer: The viewer performing the mutation.",0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
443,GraphQL,GitHub,POST,/removeEnterpriseIdentityProvider,"Removes the identity provider from an enterprise.clientMutationId: A unique identifier for the client performing the mutation., identityProvider: The identity provider that was removed from the enterprise.",0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
444,GraphQL,GitHub,POST,/removeEnterpriseMember,"Removes a user from all organizations within the enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise., user: The user that was removed from the enterprise., viewer: The viewer performing the mutation.",0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
445,GraphQL,GitHub,POST,/removeEnterpriseOrganization,"Removes an organization from the enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise., organization: The organization that was removed from the enterprise., viewer: The viewer performing the mutation.",0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between enterprise and organization. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
446,GraphQL,GitHub,POST,/removeEnterpriseSupportEntitlement,"Removes a support entitlement from an enterprise member.clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of removing the support entitlement.",0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
447,GraphQL,GitHub,POST,/removeLabelsFromLabelable,"Removes labels from a Labelable object.clientMutationId: A unique identifier for the client performing the mutation., labelable: The Labelable the labels were removed from.",0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
448,GraphQL,GitHub,POST,/removeOutsideCollaborator,"Removes outside collaborator from all repositories in an organization.clientMutationId: A unique identifier for the client performing the mutation., removedUser: The user that was removed as an outside collaborator.",0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
449,GraphQL,GitHub,POST,/removeReaction,"Removes a reaction from a subject.clientMutationId: A unique identifier for the client performing the mutation., reaction: The reaction object., reactionGroups: The reaction groups for the subject., subject: The reactable subject.",0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
450,GraphQL,GitHub,POST,/removeStar,"Removes a star from a Starrable.clientMutationId: A unique identifier for the client performing the mutation., starrable: The starrable.",0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
451,GraphQL,GitHub,POST,/removeUpvote,"Remove an upvote to a discussion or discussion comment.clientMutationId: A unique identifier for the client performing the mutation., subject: The votable subject.",0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
452,GraphQL,GitHub,POST,/reopenDiscussion,"Reopen a discussion.clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was reopened.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
453,GraphQL,GitHub,POST,/reopenIssue,"Reopen a issue.clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was opened.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
454,GraphQL,GitHub,POST,/reopenPullRequest,"Reopen a pull request.clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was reopened.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
455,GraphQL,GitHub,POST,/requestReviews,"Set review requests on a pull request.actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that is getting requests., requestedReviewersEdge: The edge from the pull request to the requested reviewers.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
456,GraphQL,GitHub,POST,/rerequestCheckSuite,"Rerequests an existing check suite.checkSuite: The requested check suite., clientMutationId: A unique identifier for the client performing the mutation.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
457,GraphQL,GitHub,POST,/resolveReviewThread,"Marks a review thread as resolved.clientMutationId: A unique identifier for the client performing the mutation., thread: The thread to resolve.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
458,GraphQL,GitHub,POST,/retireSponsorsTier,"Retire a published payment tier from your GitHub Sponsors profile so it cannot be used to start new sponsorships.clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The tier that was retired.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
459,GraphQL,GitHub,POST,/revertPullRequest,"Create a pull request that reverts the changes from a merged pull request.clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was reverted., revertPullRequest: The new pull request that reverts the input pull request.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
460,GraphQL,GitHub,POST,/revokeEnterpriseOrganizationsMigratorRole,"Revoke the migrator role to a user for all organizations under an enterprise account.clientMutationId: A unique identifier for the client performing the mutation., organizations: The organizations that had the migrator role revoked for the given user.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between enterprise and organizations. 0 hierarchical relations were detected out of 4,0,1,Consistent Documentation
461,GraphQL,GitHub,POST,/revokeMigratorRole,"Revoke the migrator role from a user or a team.clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
462,GraphQL,GitHub,POST,/setEnterpriseIdentityProvider,"Creates or updates the identity provider for an enterprise.clientMutationId: A unique identifier for the client performing the mutation., identityProvider: The identity provider for the enterprise.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
463,GraphQL,GitHub,POST,/setOrganizationInteractionLimit,"Set an organization level interaction limit for an organization's public repositories.clientMutationId: A unique identifier for the client performing the mutation., organization: The organization that the interaction limit was set for.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
464,GraphQL,GitHub,POST,/setRepositoryInteractionLimit,"Sets an interaction limit setting for a repository.clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that the interaction limit was set for.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
465,GraphQL,GitHub,POST,/setUserInteractionLimit,"Set a user level interaction limit for an user's public repositories.clientMutationId: A unique identifier for the client performing the mutation., user: The user that the interaction limit was set for.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
466,GraphQL,GitHub,POST,/startOrganizationMigration,"Starts a GitHub Enterprise Importer organization migration.clientMutationId: A unique identifier for the client performing the mutation., orgMigration: The new organization migration.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between start and organization. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
467,GraphQL,GitHub,POST,/startRepositoryMigration,"Starts a GitHub Enterprise Importer (GEI) repository migration.clientMutationId: A unique identifier for the client performing the mutation., repositoryMigration: The new repository migration.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
468,GraphQL,GitHub,POST,/submitPullRequestReview,"Submits a pending pull request review.clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The submitted pull request review.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
469,GraphQL,GitHub,POST,/transferEnterpriseOrganization,"Transfer an organization from one enterprise to another enterprise.clientMutationId: A unique identifier for the client performing the mutation., organization: The organization for which a transfer was initiated.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between enterprise and organization. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
470,GraphQL,GitHub,POST,/transferIssue,"Transfer an issue to a different repository.clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was transferred.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between transfer and issue. 0 hierarchical relations were detected out of 1,0,1,Consistent Documentation
471,GraphQL,GitHub,POST,/unarchiveProjectV2Item,"Unarchives a ProjectV2Item.clientMutationId: A unique identifier for the client performing the mutation., item: The item unarchived from the project.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
472,GraphQL,GitHub,POST,/unarchiveRepository,"Unarchives a repository.clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that was unarchived.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
473,GraphQL,GitHub,POST,/unfollowOrganization,"Unfollow an organization.clientMutationId: A unique identifier for the client performing the mutation., organization: The organization that was unfollowed.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
474,GraphQL,GitHub,POST,/unfollowUser,"Unfollow a user.clientMutationId: A unique identifier for the client performing the mutation., user: The user that was unfollowed.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
475,GraphQL,GitHub,POST,/unlinkProjectV2FromRepository,"Unlinks a project from a repository.clientMutationId: A unique identifier for the client performing the mutation., repository: The repository the project is no longer linked to.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
476,GraphQL,GitHub,POST,/unlinkProjectV2FromTeam,"Unlinks a project to a team.clientMutationId: A unique identifier for the client performing the mutation., team: The team the project is unlinked from.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
477,GraphQL,GitHub,POST,/unlinkRepositoryFromProject,"Deletes a repository link from a project.clientMutationId: A unique identifier for the client performing the mutation., project: The linked Project., repository: The linked Repository.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
478,GraphQL,GitHub,POST,/unlockLockable,"Unlock a lockable object.actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., unlockedRecord: The item that was unlocked.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
479,GraphQL,GitHub,POST,/unmarkDiscussionCommentAsAnswer,"Unmark a discussion comment as the chosen answer for discussions in an answerable category.clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that includes the comment.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
480,GraphQL,GitHub,POST,/unmarkFileAsViewed,"Unmark a pull request file as viewed.clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
481,GraphQL,GitHub,POST,/unmarkIssueAsDuplicate,"Unmark an issue as a duplicate of another issue.clientMutationId: A unique identifier for the client performing the mutation., duplicate: The issue or pull request that was marked as a duplicate.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
482,GraphQL,GitHub,POST,/unmarkProjectV2AsTemplate,"Unmark a project as a template.clientMutationId: A unique identifier for the client performing the mutation., projectV2: The project.",1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
483,GraphQL,GitHub,POST,/unminimizeComment,"Unminimizes a comment on an Issue, Commit, Pull Request, or Gist.clientMutationId: A unique identifier for the client performing the mutation., unminimizedComment: The comment that was unminimized.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
484,GraphQL,GitHub,POST,/unpinIssue,"Unpin a pinned issue from a repository.clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was unpinned.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
485,GraphQL,GitHub,POST,/unresolveReviewThread,"Marks a review thread as unresolved.clientMutationId: A unique identifier for the client performing the mutation., thread: The thread to resolve.",0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
486,GraphQL,GitHub,POST,/unsubscribeFromNotifications,"Unsubscribes from notifications.clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
487,GraphQL,GitHub,POST,/updateBranchProtectionRule,"Update a branch protection rule.branchProtectionRule: The newly created BranchProtectionRule., clientMutationId: A unique identifier for the client performing the mutation.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
488,GraphQL,GitHub,POST,/updateCheckRun,"Update a check run.checkRun: The updated check run., clientMutationId: A unique identifier for the client performing the mutation.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
489,GraphQL,GitHub,POST,/updateCheckSuitePreferences,"Modifies the settings of an existing check suite.clientMutationId: A unique identifier for the client performing the mutation., repository: The updated repository.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
490,GraphQL,GitHub,POST,/updateDiscussion,"Update a discussion.clientMutationId: A unique identifier for the client performing the mutation., discussion: The modified discussion.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
491,GraphQL,GitHub,POST,/updateDiscussionComment,"Update the contents of a comment on a Discussion.clientMutationId: A unique identifier for the client performing the mutation., comment: The modified discussion comment.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
492,GraphQL,GitHub,POST,/updateEnterpriseAdministratorRole,"Updates the role of an enterprise administrator.clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of changing the administrator's role.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
493,GraphQL,GitHub,POST,/updateEnterpriseAllowPrivateRepositoryForkingSetting,"Sets whether private repository forks are enabled for an enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated allow private repository forking setting., message: A message confirming the result of updating the allow private repository forking setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
494,GraphQL,GitHub,POST,/updateEnterpriseDefaultRepositoryPermissionSetting,"Sets the base repository permission for organizations in an enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated base repository permission setting., message: A message confirming the result of updating the base repository permission setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
495,GraphQL,GitHub,POST,/updateEnterpriseMembersCanChangeRepositoryVisibilitySetting,"Sets whether organization members with admin permissions on a repository can change repository visibility.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can change repository visibility setting., message: A message confirming the result of updating the members can change repository visibility setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
496,GraphQL,GitHub,POST,/updateEnterpriseMembersCanCreateRepositoriesSetting,"Sets the members can create repositories setting for an enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can create repositories setting., message: A message confirming the result of updating the members can create repositories setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
497,GraphQL,GitHub,POST,/updateEnterpriseMembersCanDeleteIssuesSetting,"Sets the members can delete issues setting for an enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can delete issues setting., message: A message confirming the result of updating the members can delete issues setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
498,GraphQL,GitHub,POST,/updateEnterpriseMembersCanDeleteRepositoriesSetting,"Sets the members can delete repositories setting for an enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can delete repositories setting., message: A message confirming the result of updating the members can delete repositories setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
499,GraphQL,GitHub,POST,/updateEnterpriseMembersCanInviteCollaboratorsSetting,"Sets whether members can invite collaborators are enabled for an enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can invite collaborators setting., message: A message confirming the result of updating the members can invite collaborators setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
500,GraphQL,GitHub,POST,/updateEnterpriseMembersCanMakePurchasesSetting,"Sets whether or not an organization owner can make purchases.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can make purchases setting., message: A message confirming the result of updating the members can make purchases setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
501,GraphQL,GitHub,POST,/updateEnterpriseMembersCanUpdateProtectedBranchesSetting,"Sets the members can update protected branches setting for an enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can update protected branches setting., message: A message confirming the result of updating the members can update protected branches setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
502,GraphQL,GitHub,POST,/updateEnterpriseMembersCanViewDependencyInsightsSetting,"Sets the members can view dependency insights for an enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can view dependency insights setting., message: A message confirming the result of updating the members can view dependency insights setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
503,GraphQL,GitHub,POST,/updateEnterpriseOrganizationProjectsSetting,"Sets whether organization projects are enabled for an enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated organization projects setting., message: A message confirming the result of updating the organization projects setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between enterprise and organization. 0 hierarchical relations were detected out of 4,0,1,Consistent Documentation
504,GraphQL,GitHub,POST,/updateEnterpriseOwnerOrganizationRole,"Updates the role of an enterprise owner with an organization.clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of changing the owner's organization role.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
505,GraphQL,GitHub,POST,/updateEnterpriseProfile,"Updates an enterprise's profile.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
506,GraphQL,GitHub,POST,/updateEnterpriseRepositoryProjectsSetting,"Sets whether repository projects are enabled for a enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated repository projects setting., message: A message confirming the result of updating the repository projects setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
507,GraphQL,GitHub,POST,/updateEnterpriseTeamDiscussionsSetting,"Sets whether team discussions are enabled for an enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated team discussions setting., message: A message confirming the result of updating the team discussions setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
508,GraphQL,GitHub,POST,/updateEnterpriseTwoFactorAuthenticationRequiredSetting,"Sets whether two factor authentication is required for all users in an enterprise.clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated two factor authentication required setting., message: A message confirming the result of updating the two factor authentication required setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
509,GraphQL,GitHub,POST,/updateEnvironment,"Updates an environment.clientMutationId: A unique identifier for the client performing the mutation., environment: The updated environment.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
510,GraphQL,GitHub,POST,/updateIpAllowListEnabledSetting,"Sets whether an IP allow list is enabled on an owner.clientMutationId: A unique identifier for the client performing the mutation., owner: The IP allow list owner on which the setting was updated.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
511,GraphQL,GitHub,POST,/updateIpAllowListEntry,"Updates an IP allow list entry.clientMutationId: A unique identifier for the client performing the mutation., ipAllowListEntry: The IP allow list entry that was updated.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
512,GraphQL,GitHub,POST,/updateIpAllowListForInstalledAppsEnabledSetting,"Sets whether IP allow list configuration for installed GitHub Apps is enabled on an owner.clientMutationId: A unique identifier for the client performing the mutation., owner: The IP allow list owner on which the setting was updated.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
513,GraphQL,GitHub,POST,/updateIssue,"Updates an Issue.actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., issue: The issue.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
514,GraphQL,GitHub,POST,/updateIssueComment,"Updates an IssueComment object.clientMutationId: A unique identifier for the client performing the mutation., issueComment: The updated comment.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
515,GraphQL,GitHub,POST,/updateLabel,"Updates an existing label.clientMutationId: A unique identifier for the client performing the mutation., label: The updated label.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
516,GraphQL,GitHub,POST,/updateNotificationRestrictionSetting,"Update the setting to restrict notifications to only verified or approved domains available to an owner.clientMutationId: A unique identifier for the client performing the mutation., owner: The owner on which the setting was updated.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
517,GraphQL,GitHub,POST,/updateOrganizationAllowPrivateRepositoryForkingSetting,"Sets whether private repository forks are enabled for an organization.clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of updating the allow private repository forking setting., organization: The organization with the updated allow private repository forking setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
518,GraphQL,GitHub,POST,/updateOrganizationWebCommitSignoffSetting,"Sets whether contributors are required to sign off on web-based commits for repositories in an organization.clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of updating the web commit signoff setting., organization: The organization with the updated web commit signoff setting.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
519,GraphQL,GitHub,POST,/updatePatreonSponsorability,"Toggle the setting for your GitHub Sponsors profile that allows other GitHubaccounts to sponsor you on GitHub while paying for the sponsorship on Patreon.Only applicable when you have a GitHub Sponsors profile and have connectedyour GitHub account with Patreon.clientMutationId: A unique identifier for the client performing the mutation., sponsorsListing: The GitHub Sponsors profile.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
520,GraphQL,GitHub,POST,/updateProject,"Updates an existing project.clientMutationId: A unique identifier for the client performing the mutation., project: The updated project.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
521,GraphQL,GitHub,POST,/updateProjectCard,"Updates an existing project card.clientMutationId: A unique identifier for the client performing the mutation., projectCard: The updated ProjectCard.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
522,GraphQL,GitHub,POST,/updateProjectColumn,"Updates an existing project column.clientMutationId: A unique identifier for the client performing the mutation., projectColumn: The updated project column.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
523,GraphQL,GitHub,POST,/updateProjectV2,"Updates an existing project (beta).clientMutationId: A unique identifier for the client performing the mutation., projectV2: The updated Project.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
524,GraphQL,GitHub,POST,/updateProjectV2Collaborators,"Update the collaborators on a team or a project.clientMutationId: A unique identifier for the client performing the mutation., collaborators: The collaborators granted a role.",1,0,[uppercase found],0,1,,1,0,[update found],1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
525,GraphQL,GitHub,POST,/updateProjectV2DraftIssue,"Updates a draft issue within a Project.clientMutationId: A unique identifier for the client performing the mutation., draftIssue: The draft issue updated in the project.",1,0,[uppercase found],0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
526,GraphQL,GitHub,POST,/updateProjectV2ItemFieldValue,"This mutation updates the value of a field for an item in a Project. Currentlyonly single-select, text, number, date, and iteration fields are supported.clientMutationId: A unique identifier for the client performing the mutation., projectV2Item: The updated item.",1,0,[uppercase found],0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
527,GraphQL,GitHub,POST,/updateProjectV2ItemPosition,"This mutation updates the position of the item in the project, where the position represents the priority of an item.clientMutationId: A unique identifier for the client performing the mutation., items: The items in the new order.",1,0,[uppercase found],0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between item and position. 0 hierarchical relations were detected out of 3,0,1,Consistent Documentation
528,GraphQL,GitHub,POST,/updatePullRequest,"Update a pull request.actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
529,GraphQL,GitHub,POST,/updatePullRequestBranch,"Merge or Rebase HEAD from upstream branch into pull request branch.clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
530,GraphQL,GitHub,POST,/updatePullRequestReview,"Updates the body of a pull request review.clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The updated pull request review.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
531,GraphQL,GitHub,POST,/updatePullRequestReviewComment,"Updates a pull request review comment.clientMutationId: A unique identifier for the client performing the mutation., pullRequestReviewComment: The updated comment.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
532,GraphQL,GitHub,POST,/updateRef,"Update a Git Ref.clientMutationId: A unique identifier for the client performing the mutation., ref: The updated Ref.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
533,GraphQL,GitHub,POST,/updateRefs,"Creates, updates and/or deletes multiple refs in a repository.This mutation takes a list of RefUpdates and performs these updateson the repository. All updates are performed atomically, meaning thatif one of them is rejected, no other ref will be modified.RefUpdate.beforeOid specifies that the given reference needs to pointto the given value before performing any updates. A value of0000000000000000000000000000000000000000 can be used to verify thatthe references should not exist.RefUpdate.afterOid specifies the value that the given referencewill point to after performing all updates. A value of0000000000000000000000000000000000000000 can be used to delete areference.If RefUpdate.force is set to true, a non-fast-forward updatesfor the given reference will be allowed.clientMutationId: A unique identifier for the client performing the mutation.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
534,GraphQL,GitHub,POST,/updateRepository,"Update information about a repository.clientMutationId: A unique identifier for the client performing the mutation., repository: The updated repository.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
535,GraphQL,GitHub,POST,/updateRepositoryRuleset,"Update a repository ruleset.clientMutationId: A unique identifier for the client performing the mutation., ruleset: The newly created Ruleset.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,1,0,Inconsistent Documentation
536,GraphQL,GitHub,POST,/updateRepositoryWebCommitSignoffSetting,"Sets whether contributors are required to sign off on web-based commits for a repository.clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of updating the web commit signoff setting., repository: The updated repository.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
537,GraphQL,GitHub,POST,/updateSponsorshipPreferences,"Change visibility of your sponsorship and opt in or out of email updates from the maintainer.clientMutationId: A unique identifier for the client performing the mutation., sponsorship: The sponsorship that was updated.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
538,GraphQL,GitHub,POST,/updateSubscription,"Updates the state for subscribable subjects.clientMutationId: A unique identifier for the client performing the mutation., subscribable: The input subscribable entity.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
539,GraphQL,GitHub,POST,/updateTeamDiscussion,"Updates a team discussion.clientMutationId: A unique identifier for the client performing the mutation., teamDiscussion: The updated discussion.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
540,GraphQL,GitHub,POST,/updateTeamDiscussionComment,"Updates a discussion comment.clientMutationId: A unique identifier for the client performing the mutation., teamDiscussionComment: The updated comment.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
541,GraphQL,GitHub,POST,/updateTeamReviewAssignment,"Updates team review assignment.clientMutationId: A unique identifier for the client performing the mutation., team: The team that was modified.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
542,GraphQL,GitHub,POST,/updateTeamsRepository,"Update team repository.clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that was updated., teams: The teams granted permission on the repository.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
543,GraphQL,GitHub,POST,/updateTopics,"Replaces the repository's topics with the given topics.clientMutationId: A unique identifier for the client performing the mutation., invalidTopicNames: Names of the provided topics that are not valid., repository: The updated repository.",0,1,,0,1,,1,0,[update found],1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
544,GraphQL,GitHub,POST,/verifyVerifiableDomain,Verify that a verifiable domain has the expected DNS record.,0,1, ,0,1, ,0,1, ,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1, ,1,0,Inconsistent Documentation
545,GraphQL,GitLab,GET,/abuseReport/{id},Find an abuse report.id AbuseReportID! ID of the abuse report.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
546,GraphQL,GitLab,GET,/abuseReportLabels,Abuse report labels.searchTerm String Search term to find labels with.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
547,GraphQL,GitLab,GET,/addOnPurchase/{id},Retrieve the active add-on purchase. This query can be used in GitLab SaaS and self-managed environments addOnType,GitlabSubscriptionsAddOnType!,Type of add-on for the add-on purchase. namespaceId, ,GitlabSubscriptionsAddOnType!,Type of add-on for the add-on purchase. namespaceId, ,GitlabSubscriptionsAddOnType!,Type of add-on for the add-on purchase. namespaceId, ,GitlabSubscriptionsAddOnType!,Type of add-on for the add-on purchase. namespaceId, ,GitlabSubscriptionsAddOnType!,Type of add-on for the add-on purchase. namespaceId, ,GitlabSubscriptionsAddOnType!,Type of add-on for the add-on purchase. namespaceId, ,GitlabSubscriptionsAddOnType!,Type of add-on for the add-on purchase. namespaceId, ,GitlabSubscriptionsAddOnType!,Type of add-on for the add-on purchase. namespaceId, 
548,GraphQL,GitLab,GET,/aiMessages,Find GitLab Duo Chat messages.requestIds [ID!] Array of request IDs to fetch. roles [AiMessageRole!] Array of roles to fetch.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
549,GraphQL,GitLab,GET,/auditEventDefinitions,Definitions for all audit events available on the instance.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between audit and event. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
550,GraphQL,GitLab,GET,/auditEventsInstanceAmazonS3Configurations,Instance-level Amazon S3 configurations for audit events.n/a,1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between audit and events. 0 hierarchical relations were detected out of 4,0,1,Consistent Documentation
551,GraphQL,GitLab,GET,/boardList/{id},Find an issue board list.id ListID! Global ID of the list.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
552,GraphQL,GitLab,GET,/ciCatalogResource/{id},A single CI/CD Catalog resource visible to an authorized user.id CiCatalogResourceID CI/CD Catalog resource global ID.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
553,GraphQL,GitLab,GET,/ciCatalogResources/{projectPath},"All CI/CD Catalog resources under a common namespace, visible to an authorized user.projectPath ID Project with the namespace catalog.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
554,GraphQL,GitLab,GET,/ciConfig/{projectPath},Linted and processed contents of a CI config. Should not be requested more than once per requestprojectPath ID! Project of the CI config.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
555,GraphQL,GitLab,GET,/ciMinutesUsage/{namespaceId},Compute usage data for a namespace.namespaceId NamespaceID Global ID of the Namespace for the monthly compute usage.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
556,GraphQL,GitLab,GET,/ciPipelineStage/{id},Stage belonging to a CI pipeline.id CiStageID! Global ID of the CI stage.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
557,GraphQL,GitLab,GET,/ciQueueingHistory,Time it took for ci job to be picked up by runner in percentiles.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
558,GraphQL,GitLab,GET,/ciVariables,List of the instance’s CI/CD variables.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
559,GraphQL,GitLab,GET,/containerRepository/{id},Find a container repository.id ContainerRepositoryID! Global ID of the container repository.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
560,GraphQL,GitLab,GET,/currentLicense,Fields related to the current license.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
561,GraphQL,GitLab,GET,/currentUser,Get information about current user.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
562,GraphQL,GitLab,GET,/designManagement,Fields related to design management.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
563,GraphQL,GitLab,GET,/devopsAdoptionEnabledNamespaces/{displayNamespaceId},Get configured DevOps adoption namespaces. BETA This endpoint is subject to change without notice.displayNamespaceId NamespaceID Filter by display namespace.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
564,GraphQL,GitLab,GET,/echo,Testing endpoint to validate the API with.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
565,GraphQL,GitLab,GET,/epicBoardList/{id},Returns EpicList.id BoardsEpicListID! Global ID of the list.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
566,GraphQL,GitLab,GET,/explainVulnerabilityPrompt/{vulnerabilityId},GitLab Duo Vulnerability summary prompt for a specified vulnerability.vulnerabilityId VulnerabilityID! Vulnerability to generate a prompt for.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
567,GraphQL,GitLab,GET,/frecentGroups,A user’s frecently visited groups.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
568,GraphQL,GitLab,GET,/frecentProjects,A user’s frecently visited projects.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
569,GraphQL,GitLab,GET,/geoNode,Find a Geo noden/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
570,GraphQL,GitLab,GET,/gitpodEnabled,Whether Gitpod is enabled in application settings.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
571,GraphQL,GitLab,GET,/group,Find a groupn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
572,GraphQL,GitLab,GET,groups,Find groups.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
573,GraphQL,GitLab,GET,/instanceExternalAuditEventDestinations,Instance level external audit event destinations.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between audit and event. 0 hierarchical relations were detected out of 4,0,1,Consistent Documentation
574,GraphQL,GitLab,GET,/instanceGoogleCloudLoggingConfigurations,Instance level google cloud logging configurations.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
575,GraphQL,GitLab,GET,/instanceSecurityDashboard,Fields related to Instance Security Dashboard.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
576,GraphQL,GitLab,GET,/issue/{id},Find an issue.id IssueID! Global ID of the issue.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
577,GraphQL,GitLab,GET,/issues/{assigneeId},Find issues visible to the current user. At least one filter must be provided.assigneeId String ID of a user assigned to the issues.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
578,GraphQL,GitLab,GET,/iteration/{id},Find an iteration.id IterationID! Find an iteration by its ID.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
579,GraphQL,GitLab,GET,/jobs,All jobs on this GitLab instance. Returns an empty result for users without administrator access.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
580,GraphQL,GitLab,GET,/licenseHistoryEntries,Fields related to entries in the license history.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
581,GraphQL,GitLab,GET,/memberRole/{id},Finds a single custom role.id MemberRoleID Global ID of the member role to look up.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
582,GraphQL,GitLab,GET,/memberRolePermissions,List of all customizable permissions.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
583,GraphQL,GitLab,GET,/memberRoles/{id},Member roles available for the instance.id MemberRoleID Global ID of the member role to look up.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
584,GraphQL,GitLab,GET,/mergeRequest/{id},Find a merge request.id MergeRequestID! Global ID of the merge request.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
585,GraphQL,GitLab,GET,/metadata,Metadata about GitLab.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
586,GraphQL,GitLab,GET,/milestone/{id},Find a milestone.id MilestoneID! Find a milestone by its ID.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
587,GraphQL,GitLab,GET,/mlModel/{id},Find machine learning models.id MlModelID! ID of the model.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
588,GraphQL,GitLab,GET,/namespace,Find a namespace.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
589,GraphQL,GitLab,GET,/note/{id},Find a note.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
590,GraphQL,GitLab,GET,/organization/{id},Find an organization.id OrganizationsOrganizationID! ID of the organization.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
591,GraphQL,GitLab,GET,/organizations,List organizations.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
592,GraphQL,GitLab,GET,/package/{id},Find a package. This field can only be resolved for one query in any single request. Returns null if a package has no default status.id PackagesPackageID! Global ID of the package.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
593,GraphQL,GitLab,GET,/project/{fullPath},"Find a project.fullPath ID! Full path of the project. For example, gitlab-org/gitlab-foss.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
594,GraphQL,GitLab,GET,/projects/{ids},Find projects visible to the current user.ids [ID!] Filter projects by IDs,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
595,GraphQL,GitLab,GET,/queryComplexity,Information about the complexity of the GraphQL query.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
596,GraphQL,GitLab,GET,/runner/{id},Find a runner.id CiRunnerID! Runner ID.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
597,GraphQL,GitLab,GET,/runnerSetup,Runner setup instructions.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
598,GraphQL,GitLab,GET,/runners/{creatorId},Get all runners in the GitLab instance (project and shared). Access is restricted to users with administrator access.creatorId UserID Filter runners by creator ID.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
599,GraphQL,GitLab,GET,/selfManagedAddOnEligibleUsers,Users within the self-managed instance who are eligible for add-onsn/a,0,1, ,0,1, ,0,1, ,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1, ,0,1,Consistent Documentation
600,GraphQL,Instagram,GET,/{ig-comment-id}?fields={fields},Get fields and edges on an IG Comment.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
601,GraphQL,Instagram,GET,/oauth/access_token,"To generate an app access token, you needn/a",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
602,GraphQL,Instagram,GET,/{user-id}/accounts?access_token={user-access-token},"Page access tokens are used in Graph API calls to manage Pages. To generate a page access token, an admin of the page must grant your app the Page permission or permissions needed. Once granted, you can retrieve the Page access token using a user access token with the required permissions.n/a",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
603,GraphQL,Instagram,GET,/{app-id}|{client-token},Client tokens make Graph API requests on behalf of apps instead of users.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
604,GraphQL,Instagram,GET,/{api-version}/{ig-comment-id},Get Instagram comments{api-version} API version. {ig-comment-id} Required. IG Comment ID.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
605,GraphQL,Instagram,GET,/{api-version}/{ig-comment-id}/replies,Get a list of IG Comments on the IG Comment; Create an IG Comment on an IG Comment.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
606,GraphQL,Instagram,POST,/{ig-comment-id}/replies?message={message},Replying to a Comment{message} (required) — The text to be included in the comment.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
607,GraphQL,Instagram,POST,/{ig-media-id}/comments,Create an IG Comment on an IG Media objectn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
608,GraphQL,Instagram,GET,/{ig-comment-id}/replies,Returns a list of IG Comments on an IG Comment.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
609,GraphQL,Instagram,DELETE,/{ig-comment-id},Deleting a Commentn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
610,GraphQL,Instagram,GET,/{api-version}/{instagram-container-id}?fields={fields}&access_token={access-token},"Get fields and edges on an IG Container.access_token Required String The app user's User access token. fields Comma-separated list A comma-separated list of fields and edges you want returned. If omitted, default fields will be returned.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
611,GraphQL,Instagram,GET,/{api-version}/{ig-hashtag-id}?fields={fields}&access_token={access-token},"Returns Fields and Edges on an IG Hashtag.access_token Required String The app user's Instagram User Access Token. fields Comma-separated list A comma-separated list of Fields and Edges you want returned. If omitted, default fields will be returned.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
612,GraphQL,Instagram,GET,/{api-version}/{ig-media-id}?fields={fields}&access_token={access-token},Gets fields and edges on IG media.access_token {access-token} Required. App user's user access token. fields {fields} Comma-separated list of fields you want returned,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
613,GraphQL,Instagram,POST,{api-version}/{ig-media-id}?comment_enabled={comment-enabled} &access_token={access-token},Enable or disable comments on an IG Media.{ig-media-id}: IG Media ID.,0,1,,1,0,[blank space/tab found],0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
614,GraphQL,Instagram,GET,/{api-version}/{ig-user-id},Get fields and edges on an Instagram Business or Creator Account.{ig-user-id} IG User ID.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
615,GraphQL,Instagram,GET,/{api-version}/{ig-user-id}?fields=business_discovery.username({username}),"Returns data about another Instagram Business or Creator IG User. Perform this request on the Instagram Business or Creator IG User who is making the query, and identify the targeted business with the username parameter.{username} The username of the Instagram Business or Creator IG User you want to get data about.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
616,GraphQL,Instagram,GET,/v9.0/{ig-user-id}/content_publishing_limit?fields={fields}&since={since}&access_token={access-token},"Get the number of times an IG User has published and IG Container within a given time period. Refer to the Content Publishing guide for complete publishing steps.{access-token} Required String The app user's User Access Token. {fields} Comma-separated list A comma-separated list of fields you want returned. If omitted, the quota_usage field will be returned by default. {since} Unix timestamp A Unix timestamp no older than 24 hours.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
617,GraphQL,Instagram,GET,{api-version}/{ig-user-id}/insights ?metric={metric} &period={period} &since={since} &until={until} &access_token={access-token},"Returns insights on an IG User.{api-version} API version. {ig-user-id} Required. IG User ID.{access-token} Required String The app user's User Access Token. {metric} Required Comma-separated list A comma-separated list of Metrics you want returned. If requesting multiple metrics, they must all have the same compatible Period. {period} Required String A Period that is compatible with the metrics you are requesting. {since} Unix timestamp Used in conjunction with {until} to define a Range. If you omit since and until, the API defaults to a 2 day range: yesterday through today. Note: The pagination cursors (previous and next) fetch the next time window of results, not the next batch of results within the current time window. {until} Unix timestamp Used in conjunction with {since} to define a Range. If you omit since and until, the API defaults to a 2 day range: yesterday through today. Note: The pagination cursors (previous and next) fetch the next time window of results, not the next batch of results within the current time window.",0,1,,1,0,[blank space/tab found],0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
618,GraphQL,Instagram,GET,/{api-version}//{instagram-container-id},"Get fields and edges on an IG Container.id Instagram Container ID, represented in code examples as {instagram-container-id}",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
619,GraphQL,Instagram,GET,/{api-version}//{ig-hashtag-id},"Returns Fields and Edges on an IG Hashtag.id The hashtag's ID (included by default). IDs are static and global. name The hashtag's name, without the leading hash symbol.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
620,GraphQL,Instagram,GET,/{ig-hashtag-id}/recent_media?user_id={user-id}&fields={fields},Returns a list of the most recently published photo and video IG Media objects published with a specific hashtag.{user_id} (required) — The ID of the IG User performing the query. {fields} — A comma-separated list of fields you want returned. See Returnable Fields.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
621,GraphQL,Instagram,GET,/{ig-hashtag-id}/top_media?user_id={user-id}&fields={fields},Returns the most popular photo and video IG Media objects that have been tagged with the hashtag.{user_id} (required) — The ID of the Instagram Business or Creator Account performing the query. {fields} — A comma-separated list of fields you want returned. See Returnable Fields.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
622,GraphQL,Instagram,GET,/{api-version}/{ig-media-id} ?fields={fields} &access_token={access-token},Gets fields and edges on IG media.{api-version} API version. {ig-media-id} Required. IG Media ID.,0,1,,1,0,[blank space/tab found],0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
623,GraphQL,Instagram,POST,/{api-version}/{ig-media-id}?comment_enabled={comment-enabled}&access_token={access-token},Enable or disable comments on an IG Media.{api-version} API version. {ig-media-id}Required. IG Media ID.,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
624,GraphQL,Instagram,GET,/{api-version}/{ig-user-id} ?fields={fields} &access_token={access-token},Get fields and edges on an Instagram Business or Creator Account.{api-version} API version. {ig-user-id} Required. IG User ID.,0,1,,1,0,[blank space/tab found],0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
625,GraphQL,Instagram,GET,/{ig-user-id}?fields=business_discovery.username({username}),"Returns data about another Instagram Business or Creator IG User. Perform this request on the Instagram Business or Creator IG User who is making the query, and identify the targeted business with the username parameter.n/a",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
626,GraphQL,Instagram,GET,/v9.0/{ig-user-id}/content_publishing_limit ?fields={fields} &since={since} &access_token={access-token},"Get the number of times an IG User has published and IG Container within a given time period. Refer to the Content Publishing guide for complete publishing steps.{access-token} Required String The app user's User Access Token. {fields} Comma-separated list A comma-separated list of fields you want returned. If omitted, the quota_usage field will be returned by default. {since} Unix timestamp A Unix timestamp no older than 24 hours.",0,1,,1,0,[blank space/tab found],0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
627,GraphQL,Instagram,GET,/{api-version}/{ig-user-id}/insights,Returns insights on an IG User.{ig-user-id} Required. IG User ID.,0,1, ,0,1, ,0,1, ,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1, ,0,1,Consistent Documentation
628,GraphQL,Pipefy,GET,/allCards,Fetches all pipe cards based on argumentsn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
629,GraphQL,Pipefy,GET,/autoFillFields,Lookup the values that will automatically fill the child-card's start form fieldsn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
630,GraphQL,Pipefy,GET,/card,Lookup a card by its IDn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
631,GraphQL,Pipefy,GET,/cards,Fetches a group of cards based on argumentsn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
632,GraphQL,Pipefy,GET,/cardsImportations/{pipeId},Lookup the cards importer history by the pipe IDpipeId: ID! Required. The pipe ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
633,GraphQL,Pipefy,GET,/findCards/{pipeId},Fetch cards based on fields' inputspipeId: ID! Required. The pipe ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
634,GraphQL,Pipefy,GET,/findCards/{tableId},Fetch records based on fields' inputstableId: String! Required. The table ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
635,GraphQL,Pipefy,GET,/inbox_emails/card_id,Lookup the card's emails by its IDcard_id: ID! Required. The card ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between card and identification. 0 hierarchical relations were detected out of 3,0,1,Consistent Documentation
636,GraphQL,Pipefy,GET,/me,Returns informations of the current authenticated usern/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
637,GraphQL,Pipefy,GET,/organization/{id},Lookup an organization by its IDid: ID! Required. The organization ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
638,GraphQL,Pipefy,GET,/organizations/{ids},Lookup organizations by their IDids: [ID] The organizations IDs,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
639,GraphQL,Pipefy,GET,/phase/{id},Lookup a phase by its IDid: ID! Required. The phase ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
640,GraphQL,Pipefy,GET,/pipe/{id},Lookup a pipe by its IDid: ID! Required. The pipe ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
641,GraphQL,Pipefy,GET,/pipeReportExport/{id},Lookup a pipe report export by its IDid: ID! Required. The export ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
642,GraphQL,Pipefy,GET,/pipe/{ids},Lookup a pipe by their IDids: ID! Required. The pipes ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
643,GraphQL,Pipefy,GET,/pipe_relations/{id},Lookup pipe relations by their IDids: [ID]! Required. The pipe relation ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
644,GraphQL,Pipefy,GET,/pipe_templates,Lookup all pipe templates available on Pipefyn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
645,GraphQL,Pipefy,GET,/recordsImportations/{tableID},Lookup the records importer history by the table IDtableId: ID! Required. The table ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
646,GraphQL,Pipefy,GET,/table/{id},Lookup a database table by its IDid: ID! Required. The table ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
647,GraphQL,Pipefy,GET,/table/{ids},Lookup a database tables by their IDids: ID! Required. The table ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
648,GraphQL,Pipefy,GET,/table_record/{id},Lookup a record by its IDid: ID! Required. The record ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
649,GraphQL,Pipefy,GET,/table_records/{table_id},Fetches a group of records based on argumentstable_id: ID! Required. The table ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
650,GraphQL,Pipefy,GET,/table_relations/{ids},Lookup table relations by their IDids: [ID]! Required. The table relation ID,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
651,GraphQL,Pipefy,POST,/clonePipes,Clones a pipen/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
652,GraphQL,Pipefy,POST,/createCard,Creates a cardn/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
653,GraphQL,Pipefy,POST,/createCardRelation,Creates a card relationn/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between card and relation. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
654,GraphQL,Pipefy,POST,/createComment,Creates a commentn/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
655,GraphQL,Pipefy,POST,/createFieldCondition,Creates a field conditionn/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
656,GraphQL,Pipefy,POST,/createInboxEmail,Creates an emailn/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
657,GraphQL,Pipefy,POST,/createLabel,Creates a labeln/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
658,GraphQL,Pipefy,POST,/createOrganization,Creates an organizationn/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
659,GraphQL,Pipefy,POST,/createOrganizationWebhook,Creates an organization-level webhookn/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
660,GraphQL,Pipefy,POST,/createPhase,Creates a phasen/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and phase. 0 hierarchical relations were detected out of 1,0,1,Consistent Documentation
661,GraphQL,Pipefy,POST,/createPhaseField,Creates a phase fieldn/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and phase. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
662,GraphQL,Pipefy,POST,/createPipe,Creates a pipen/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
663,GraphQL,Pipefy,POST,/createPipeRelation,Creates a pipe relationn/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
664,GraphQL,Pipefy,POST,/createPresignedUrl,Returns a temporary S3 presigned url to upload a filen/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
665,GraphQL,Pipefy,POST,/createPresignedUrlForPipePdfTemplate,Returns a temporary S3 presigned url to upload a pdf template imagen/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
666,GraphQL,Pipefy,POST,/createTable,Creates a tablen/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and table. 0 hierarchical relations were detected out of 1,0,1,Consistent Documentation
667,GraphQL,Pipefy,POST,/createTableField,Creates a table fieldn/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and table. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
668,GraphQL,Pipefy,POST,/createTableRecord,Creates a recordn/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and table. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation
669,GraphQL,Pipefy,POST,/createTableRecordInRestrictedTable,Creates a record in a private tablen/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and table. 0 hierarchical relations were detected out of 4,0,1,Consistent Documentation
670,GraphQL,Pipefy,POST,/createTableRelation,Creates a table relationn/a,0,1,,0,1,,0,1,,0,1,,1,0,[create found],1,0,[create found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between create and table. 0 hierarchical relations were detected out of 2,1,0,Reversed hierarchy of type True detected between create and table. 0 hierarchical relations were detected out of 2,0,1,Consistent Documentation,0,1,Consistent Documentation
671,GraphQL,Pipefy,POST,/createWebhook,Creates a webhook at a pipe or table leveln/a,0,1,,0,1,,0,1,,0,1,,1,0,[create found],1,0,[create found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,1,0,Non-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
672,GraphQL,Pipefy,POST,/deleteCard,Deletes a cardn/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
673,GraphQL,Pipefy,POST,/deleteComment,Deletes a commentn/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
674,GraphQL,Pipefy,POST,/deleteFieldCondition,Deletes a field conditionn/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
675,GraphQL,Pipefy,POST,/deleteInboxEmail,Deletes an emailn/a,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
676,GraphQL,Pipefy,POST,/deleteLabel,Deletes a labeln/a,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
677,GraphQL,Pipefy,POST,/deleteOrganization,Deletes an organizationn/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
678,GraphQL,Pipefy,POST,/deleteOrganizationWebhook,Deletes a webhookn/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,1,0,Non-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
679,GraphQL,Pipefy,POST,/deletePhase,Deletes a phasen/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
680,GraphQL,Pipefy,POST,/deletePhaseField,Deletes a phase fieldn/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
681,GraphQL,Pipefy,POST,/deletePipe,Deletes a pipen/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
682,GraphQL,Pipefy,POST,/deletePipeRelation,Deletes a pipe relationn/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
683,GraphQL,Pipefy,POST,/deleteTable,Deletes a tablen/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
684,GraphQL,Pipefy,POST,/deleteTableField,Deletes a table fieldn/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
685,GraphQL,Pipefy,POST,/deleteTableRecord,Deletes a recordn/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
686,GraphQL,Pipefy,POST,/deleteTableRelation,Deletes a table relationn/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
687,GraphQL,Pipefy,POST,/deleteWebhook,Deletes a webhook (pipe or table level)n/a,0,1,,0,1,,0,1,,0,1,,1,0,[delete found],1,0,[delete found],1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,1,0,Non-descriptive End-point,0,1,,0,1,,1,0,Inconsistent Documentation,1,0,Inconsistent Documentation
688,GraphQL,Pipefy,POST,/exportPipeReport,Exports a pipe reportn/a,0,1,,0,1,,0,1,,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,Self-descriptive End-point,0,1,,0,1,,0,1,Consistent Documentation,0,1,Consistent Documentation
689,GraphQL,Pipefy,POST,/interfaceEmbedCreat,Create a new Interfacen/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
690,GraphQL,Pipefy,POST,/inviteMembers,Invites new members for the organizationn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
691,GraphQL,Pipefy,POST,/moveCardToPhase,Moves a card to another phasen/a,0,1,,0,1,,1,0,[move found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
692,GraphQL,Pipefy,POST,/recordsImporter,Create new records from a xlsx filen/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
693,GraphQL,Pipefy,POST,/removeUserFromOrg,Remove a user from an organizationn/a,0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
694,GraphQL,Pipefy,POST,/removeUserFromPipe,Removes a user from pipen/a,0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
695,GraphQL,Pipefy,POST,/removeUserFromTable,Removes a user from tablen/a,0,1,,0,1,,1,0,[remove found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
696,GraphQL,Pipefy,POST,/sendInboxEmail,Sends an emailn/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
697,GraphQL,Pipefy,POST,/setFieldConditionOrder,Sets field condition ordern/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between set and field. 0 hierarchical relations were detected out of 3,0,1,Consistent Documentation
698,GraphQL,Pipefy,POST,/setRole,Sets the role of a usern/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
699,GraphQL,Pipefy,POST,/setRoles,Sets role of multiple usersn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
700,GraphQL,Pipefy,POST,/setSummaryAttributes,Sets summary attributesn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
701,GraphQL,Pipefy,POST,/setTableFieldOrder,Sets table field ordern/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between set and table. 0 hierarchical relations were detected out of 3,0,1,Consistent Documentation
702,GraphQL,Pipefy,POST,/setTableRecordFieldValue,Sets record field valuen/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between set and table. 0 hierarchical relations were detected out of 4,0,1,Consistent Documentation
703,GraphQL,Pipefy,POST,/updateCard,Updates an existing cardn/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
704,GraphQL,Pipefy,POST,/updateCardField,Updates an existing card fieldn/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
705,GraphQL,Pipefy,POST,/updateComment,Updates an existing commentn/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
706,GraphQL,Pipefy,POST,/updateFieldsValues,Update one or many values of fields inside a Card or Table record.n/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
707,GraphQL,Pipefy,POST,/updateLabel,Updates an existing labeln/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
708,GraphQL,Pipefy,POST,/updateOrganization,Updates an existing organizationn/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
709,GraphQL,Pipefy,POST,/updateOrganizationWebhook,Updates an existing organization-level webhookn/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
710,GraphQL,Pipefy,POST,/updatePhase,Updates an existing phasen/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
711,GraphQL,Pipefy,POST,/updatePhaseField,Updates an existing phase fieldn/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
712,GraphQL,Pipefy,POST,/updatePipe,Updates an existing pipen/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
713,GraphQL,Pipefy,POST,/updatePipeRelation,Updates an existing pipe relationn/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
714,GraphQL,Pipefy,POST,/updateTable,Updates an existing tablen/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
715,GraphQL,Pipefy,POST,/updateTableField,Updates an existing table fieldn/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
716,GraphQL,Pipefy,POST,/updateTableRecord,Updates an existing recordn/a,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
717,GraphQL,Pipefy,POST,/updateWebhook,Updates an existing webhook (pipe or table level)n/a,0,1, ,0,1, ,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1, ,0,1,Consistent Documentation
718,GraphQL,Pokeapi,GET,/v2/count/,The total number of resources available from this API.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
719,GraphQL,Pokeapi,GET,/v2/next/,The URL for the next page in the list.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
720,GraphQL,Pokeapi,GET,/v2/previous/,The URL for the previous page in the list.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
721,GraphQL,Pokeapi,GET,/v2/results/,A list of named API resources.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
722,GraphQL,Pokeapi,GET,/v2/berry/{id or name}/,"Berries are small fruits that can provide HP and status condition restoration, stat enhancement, and even damage negation when eaten by Pokémon.n/a",1,0,[trailing slash found],1,0,[blank space/tab found],0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
723,GraphQL,Pokeapi,GET,/v2/berry/{id}/,The identifier for this resource.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
724,GraphQL,Pokeapi,GET,/v2/berry/{name}/,The name for this resource.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
725,GraphQL,Pokeapi,GET,/v2/berry/{growth_time}/,"Time it takes the tree to grow one stage, in hours. Berry trees go through four of these growth stages before they can be picked.n/a",1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
726,GraphQL,Pokeapi,GET,/v2/berry/{max_harvest}/,The maximum number of these berries that can grow on one tree in Generation IV.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
727,GraphQL,Pokeapi,GET,/v2/berry/{natural_gift_power}/,"The power of the move ""Natural Gift"" when used with this Berry.n/a",1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,1,0,Reversed hierarchy of type True detected between gift and power. 0 hierarchical relations were detected out of 3,0,1,Consistent Documentation
728,GraphQL,Pokeapi,GET,/v2/berry/{size}/,"The size of this Berry, in millimeters.n/a",1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
729,GraphQL,Pokeapi,GET,/v2/berry/{smoothness}/,"The smoothness of this Berry, used in making Pokéblocks or Poffins.n/a",1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
730,GraphQL,Pokeapi,GET,/v2/berry/{soil_dryness}/,The speed at which this Berry dries out the soil as it grows. A higher rate means the soil dries more quickly.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
731,GraphQL,Pokeapi,GET,/v2/berry/{firmness}/,"The firmness of this berry, used in making Pokéblocks or Poffins.n/a",1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
732,GraphQL,Pokeapi,GET,/v2/berry/{flavors}/,A list of references to each flavor a berry can have and the potency of each of those flavors in regard to this berry.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
733,GraphQL,Pokeapi,GET,/v2/berry/{items}/,Berries are actually items. This is a reference to the item specific data for this berry.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
734,GraphQL,Pokeapi,GET,/v2/berry/{natural_gift_type}/,"The type inherited by ""Natural Gift"" when used with this Berry.n/a",1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
735,GraphQL,Pokeapi,GET,/v2/berry/{potency}/,How powerful the referenced flavor is for this berry.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
736,GraphQL,Pokeapi,GET,/v2/berry-firmness/{id}/,The identifier for this resource.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
737,GraphQL,Pokeapi,GET,/v2/berry-firmness/{id or name}/,n/a,1,0,[trailing slash found],1,0,[blank space/tab found],0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
738,GraphQL,Pokeapi,GET,/v2/berry-firmness/{name}/,The name for this resource.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
739,GraphQL,Pokeapi,GET,/v2/berry-firmness/{berries}/,A list of the berries with this firmness.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
740,GraphQL,Pokeapi,GET,/v2/berry-firmness/{names}/,The name of this resource listed in different languages.n/a,1,0,[trailing slash found],0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
741,GraphQL,Pokeapi,GET,v2/berry-flavor/{id or name}/,Flavors determine whether a Pokémon will benefit or suffer from eating a berry based on their nature.n/a,1,0,[trailing slash found],1,0,[blank space/tab found],0,1, ,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1, ,0,1,Consistent Documentation
742,GraphQL,Shopify,POST,/delegateAccessTokenCreate,creating a delegate access token.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
743,GraphQL,Shopify,POST,/storefrontAccessTokenCreate,Creates a storefront access token. An app can have a maximum of 100 active storefront access tokens for each shop.n/a,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
744,GraphQL,Shopify,POST,/storefrontAccessTokenDelete,Deletes a storefront access token.n/a,0,1,,0,1,,1,0,[delete found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
745,GraphQL,Shopify,POST,/AccessScope,The permission required to access a Shopify Admin API or Storefront API resource for a shop. Merchants grant access scopes that are requested by applications.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
746,GraphQL,Shopify,POST,/DelegateAccessToken,A token that delegates a set of scopes from the original permission.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
747,GraphQL,Shopify,POST,/StorefrontAccessToken,A token that's used to delegate unauthenticated access scopes to clients that need to access the unauthenticated Storefront API. An app can have a maximum of 100 active storefront access tokens for each shop.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
748,GraphQL,Shopify,GET,/shopifyqlQuery,Returns the results of a ShopifyQL queryn/a,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
749,GraphQL,Shopify,POST,/ErrorPosition,Error position information in a ShopifyQL parsing error.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
750,GraphQL,Shopify,POST,/ParseError,A ShopifyQL parsing error.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
751,GraphQL,Shopify,POST,/ParseErrorRange,A range of ShopifyQL parsing errors.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
752,GraphQL,Shopify,POST,/PolarisVizDataPoint,A PolarisViz data point structure for ShopifyQL query.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
753,GraphQL,Shopify,POST,/PolarisVizDataSeries,The data series used for PolarisViz visualization.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
754,GraphQL,Shopify,POST,/PolarisVizResponse,A PolarisViz response to a ShopifyQL query.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
755,GraphQL,Shopify,POST,/TableData,The result in a tabular format with schema information and formatted and unformatted row data.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
756,GraphQL,Shopify,POST,/TableDataColumn,A nested array representation of the data. An index in an array represents a row number.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
757,GraphQL,Shopify,POST,/TableResponse,The default table response structure for a ShopifyQL query.n/a,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
758,GraphQL,Shopify,GET,/query/{id},Lookup an App by ID or return the currently authenticated App.id ID The ID to lookup the App by.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
759,GraphQL,Shopify,GET,/appByHandle,Fetches app by handle. Returns null if the app doesn't exist.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
760,GraphQL,Shopify,GET,/appByKey,Fetches an app by its client ID. Returns null if the app doesn't exist.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
761,GraphQL,Shopify,GET,/appInstallation/{id},Lookup an AppInstallation by ID or return the AppInstallation for the currently authenticated App.id ID ID used to lookup AppInstallation.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
762,GraphQL,Shopify,GET,/appInstallations,"A list of app installations. To use this query, you need to contact Shopify Support to grant your custom app the read_apps access scope. Public apps can't be granted this access scope.",0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
763,GraphQL,Shopify,GET,/currentAppInstallation,Return the AppInstallation for the currently authenticated App.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
764,GraphQL,Shopify,GET,/publication/{id},Lookup a publication by ID.id id ID! non-null The ID of the Publication to return.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
765,GraphQL,Shopify,GET,/publications,List of publications.,0,1,,0,1,,0,1,,1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
766,GraphQL,Shopify,POST,/publicationCreate,Creates a publication.,0,1,,0,1,,1,0,[create found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
767,GraphQL,Shopify,POST,/publicationDelete{id},Deletes a publication.id ID! required The ID of the publication to delete.,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,1,0,Inconsistent Documentation
768,GraphQL,Shopify,POST,/publicationUpdate,Updates a publication.id ID! required The ID of the publication to update.,0,1,,0,1,,1,0,[update found],1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
769,GraphQL,Shopify,POST,/AppFeedback,Reports the status of shops and their resources and displays this information within Shopify admin. AppFeedback is used to notify merchants about steps they need to take to set up an app on their store.,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
770,GraphQL,Shopify,POST,/AppInstallation,Represents an installed application on a shop.,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
771,GraphQL,Shopify,POST,/FailedRequirement,Requirements that must be met before an app can be installed.,0,1,,0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
772,GraphQL,Shopify,POST,/Link,A link to direct users to.,1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
773,GraphQL,Shopify,POST,/Publication,A publication is a group of products and collections that is published to an app.,1,0,[uppercase found],0,1,,0,1,,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
774,GraphQL,Shopify,POST,/ResourceFeedback,"Represents feedback from apps about a resource, and the steps required to set up the apps on the shop.",0,1, ,0,1, ,0,1, ,1,0,No Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1, ,0,1,Consistent Documentation
775,GraphQL,Twitter,DELETE,/v2/users/:id/bookmarks/:tweet_id,"Allows a user or authenticated user ID to remove a Bookmark of a Tweet.id REQUIRED string The user ID of an authenticated user who you are removing a Bookmark of a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. tweet_id REQUIRED string The ID of the Tweet that you would like the id to remove a Bookmark of.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
776,GraphQL,Twitter,GET,/v2/users/:id/bookmarks,Allows you to get an authenticated user's 800 most recent bookmarked Tweets.id REQUIRED string User ID of an authenticated user to request bookmarked Tweets for.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
777,GraphQL,Twitter,POST,/v2/users/:id/bookmarks,"Causes the user ID of an authenticated user identified in the path parameter to Bookmark the target Tweet provided in the request body.id REQUIRED string The user ID of an authenticated user who you are bookmarking a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Token associated with the user ID when authenticating your request. tweet_id REQUIRED string The ID of the Tweet that you would like an id to Bookmark.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
778,GraphQL,Twitter,GET,/v2/tweets/search/stream,"Streams Tweets in real-time that match the rules that you added to the stream using the POST /tweets/search/stream/rules endpoint. If you haven't added any rules to your stream, you will not receive any Tweets.n/a",0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
779,GraphQL,Twitter,POST,/v2/tweets/search/stream/rules,"Add or delete rules to your stream. Once you've added a rule or rules to your stream, you can retrieve all of the Tweets that match these rules by using the",0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
780,GraphQL,Twitter,GET,/tweets/search/stream,"Return either a single rule, or a list of rules that have been added to the stream.",0,1,,0,1,,1,0,[search found],1,0,No Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
781,GraphQL,Twitter,PUT,/v2/tweets/:id/hidden,Hides or unhides a reply to a Tweet.id REQUIRED string Unique identifier of the Tweet to hide or unhide. The Tweet must belong to a conversation initiated by the authenticating user.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
782,GraphQL,Twitter,DELETE,/v2/users/:id/likes/:tweet_id,"Allows a user or authenticated user ID to unlike a Tweet.id Required string The user ID who you are removing a Like of a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. tweet_id Required string The ID of the Tweet that you would like the id to unlike.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
783,GraphQL,Twitter,GET,/v2/tweets/:id/liking_users,Allows you to get information about a Tweet’s liking users.id REQUIRED string Tweet ID of the Tweet to request liking users of.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
784,GraphQL,Twitter,GET,/v2/users/:id/liked_tweets,Allows you to get information about a user’s liked Tweetsid REQUIRED string User ID of the user to request liked Tweets for.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
785,GraphQL,Twitter,POST,/v2/users/:id/likes,Causes the user ID identified in the path parameter to Like the target Tweet.POST /2/users/:id/likes Causes the user ID identified in the path parameter to Like the target Tweet.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
786,GraphQL,Twitter,DELETE,/v2/tweets/:id,Allows a user or authenticated user ID to delete a Tweet.id REQUIRED string The Tweet ID you are deleting.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
787,GraphQL,Twitter,POST,/v2/tweets,"Creates a Tweet on behalf of an authenticated user.direct_message_deep_link OPTIONAL string Tweets a link directly to a Direct Message conversation with an account. Example: {""text"": ""Tweeting a DM deep link!"", ""direct_message_deep_link"": ""https://twitter.com/messages/compose?recipient_id=2244994945""} for_super_followers_only OPTIONAL boolean Allows you to Tweet exclusively for Super Followers. Example: {""text"": ""Hello World!"", ""for_super_followers_only"": true} geo OPTIONAL object A JSON object that contains location information for a Tweet. You can only add a location to Tweets if you have geo enabled in your profile settings. If you don't have geo enabled, you can still add a location parameter in your request body, but it won't get attached to your Tweet geo.place_id OPTIONAL string Place ID being attached to the Tweet for geo location. Example: {""text"": ""Tweeting with geo!"",""geo"": {""place_id"": ""5a110d312052166f""}} media OPTIONAL object A JSON object that contains media information being attached to created Tweet. This is mutually exclusive from Quote Tweet ID and Poll. media.media_ids OPTIONAL array A list of Media IDs being attached to the Tweet. This is only required if the request includes the tagged_user_ids. Example: {""text"": ""Tweeting with media!"", ""media"": {""media_ids"": [""1455952740635586573""]}} media.tagged_user_ids OPTIONAL array A list of User IDs being tagged in the Tweet with Media. If the user you're tagging doesn't have photo-tagging enabled, their names won't show up in the list of tagged users even though the Tweet is successfully created. Example: {""text"": ""Tagging users in images!"", ""media"": {""media_ids"": [""1455952740635586573""], ""tagged_user_ids"": [""2244994945"",""6253282""]}} poll OPTIONAL object A JSON object that contains options for a Tweet with a poll. This is mutually exclusive from Media and Quote Tweet ID. poll.duration_minutes OPTIONAL number Duration of the poll in minutes for a Tweet with a poll. This is only required if the request includes poll. options. Example: {""text"": ""Tweeting with polls!"", ""poll"": {""options"": [""yes"", ""maybe"", ""no""], ""duration_minutes"": 120}} poll.options OPTIONAL array A list of poll options for a Tweet with a poll. For the request to be successful it must also include duration_minutes too. Example: {""text"": ""Tweeting with polls!"", ""poll"": {""options"": [""yes"", ""maybe"", ""no""], ""duration_minutes"": 120}}"" quote_tweet_id OPTIONAL string Link to the Tweet being quoted. Example: {""text"": ""Yay!"", ""quote_tweet_id"": ""1455953449422516226""} reply OPTIONAL object A JSON object that contains information of the Tweet being replied to. reply.exclude_reply_user_ids OPTIONAL array A list of User IDs to be excluded from the reply Tweet thus removing a user from a thread. Example: {""text"": ""Yay!"", ""reply"": {""in_reply_to_tweet_id"": ""1455953449422516226"", ""exclude_reply_user_ids"": [""6253282""]}} reply.in_reply_to_tweet_id OPTIONAL string Tweet ID of the Tweet being replied to. Please note that in_reply_to_tweet_id needs to be in the request if exclude_reply_user_ids is present. Example: {""text"": ""Excited!"", ""reply"": {""in_reply_to_tweet_id"": ""1455953449422516226""}} reply_settings OPTIONAL string Settings to indicate who can reply to the Tweet. Options include ""mentionedUsers"" and ""following"". If the field isn’t specified, it will default to everyone. Example:{""text"": ""Tweeting with reply settings!"", ""reply_settings"": ""mentionedUsers""} text OPTIONAL string Text of the Tweet being created. This field is required if media.media_ids is not present. Example: {""text"": ""Hello World!""}",0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
788,GraphQL,Twitter,GET,/v2/tweets/:id/quote_tweets,Returns Quote Tweets for a Tweet specified by the requested Tweet ID.id REQUIRED string Unique identifier of the Tweet to request,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
789,GraphQL,Twitter,DELETE,/v2/users/:id/retweets/:source_tweet_id,"Allows a user or authenticated user ID to remove the Retweet of a Tweet.id REQUIRED string The user ID who you are removing a the Retweet of a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. source_tweet_id REQUIRED string The ID of the Tweet that you would like the id to remove the Retweet of.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
790,GraphQL,Twitter,GET,/v2/tweets/:id/retweeted_by,Allows you to get information about who has Retweeted a Tweet.id REQUIRED string Tweet ID of the Tweet to request Retweeting users of.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
791,GraphQL,Twitter,GET,/v2/tweets/:id/retweets,Returns the Retweets for a given Tweet ID.id REQUIRED string Unique identifier of the Tweet.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
792,GraphQL,Twitter,POST,/v2/users/:id/retweets,"Causes the user ID identified in the path parameter to Retweet the target Tweet.id REQUIRED string The user ID who you are Retweeting a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request.",0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
793,GraphQL,Twitter,GET,/v2/tweets/search/all,"The full-archive search endpoint returns the complete history of public Tweets matching a search query; since the first Tweet was created March 26, 2006.n/a",0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
794,GraphQL,Twitter,GET,/v2/tweets/search/recent,The recent search endpoint returns Tweets from the last seven days that match a search query.,0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
795,GraphQL,Twitter,GET,/v2/users/:id/mentions,"Returns Tweets mentioning a single user specified by the requested user ID. By default, the most recent ten Tweets are returned per request. Using pagination, up to the most recent 800 Tweets can be retrieved.id REQUIRED string Unique identifier of the user for whom to return Tweets mentioning the user. User ID can be referenced using the user/lookup endpoint. More information on Twitter IDs is here.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
796,GraphQL,Twitter,GET,/v2/users/:id/timelines/reverse_chronological,Allows you to retrieve a collection of the most recent Tweets and Retweets posted by you and users you follow. This endpoint can return every Tweet created on a timeline over the last 7 days as well as the most recent 800 regardless of creation date.id REQUIRED string Unique identifier of the user that is requesting their chronological home timeline. User ID can be referenced using the user/lookup endpoint. More information on Twitter IDs is here.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
797,GraphQL,Twitter,GET,/v2/users/:id/tweets,"Returns Tweets composed by a single user, specified by the requested user ID. By default, the most recent ten Tweets are returned per request. Using pagination, the most recent 3,200 Tweets can be retrieved.id REQUIRED string Unique identifier of the Twitter account (user ID) for whom to return results. User ID can be referenced using the user/lookup endpoint. More information on Twitter IDs is here.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
798,GraphQL,Twitter,GET,/v2/tweets/counts/all,"The full-archive Tweet counts endpoint returns the count of Tweets that match your query from the complete history of public Tweets; since the first Tweet was created March 26, 2006.n/a",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
799,GraphQL,Twitter,GET,/v2/tweets/counts/recent,The recent Tweet counts endpoint returns count of Tweets from the last seven days that match a query.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
800,GraphQL,Twitter,GET,/v2/users/:id/blocking,"Returns a list of users who are blocked by the specified user ID.id REQUIRED string The user ID whose blocked users you would like to retrieve. The user’s ID must correspond to the user ID of the authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
801,GraphQL,Twitter,DELETE,/v2/users/:source_user_id/following/:target_user_id,Allows a user ID to unfollow another user. The request succeeds with no action when the authenticated user sends a request to a user they're not following or have already unfollowed.source_user_id REQUIRED string The user ID who you would like to initiate the unfollow on behalf of. You must pass the Access Tokens that relate to this user when authenticating the request. target_user_id REQUIRED string The user ID of the user that you would like the source_user_id to unfollow.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
802,GraphQL,Twitter,GET,/v2/users/:id/followers,Returns a list of users who are followers of the specified user ID.id REQUIRED string The user ID whose followers you would like to retrieve.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
803,GraphQL,Twitter,GET,/v2/users/:id/following,Returns a list of users the specified user ID is following.id REQUIRED string The user ID whose following you would like to retrieve.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
804,GraphQL,Twitter,POST,/v2/users/:id/following,"Allows a user ID to follow another user. If the target user does not have public Tweets, this endpoint will send a follow request. The request succeeds with no action when the authenticated user sends a request to a user they're already following, or if they're sending a follower request to a user that does not have public Tweets.id REQUIRED string The authenticated user ID who you would like to initiate the follow on behalf of. You must pass the Access Tokens that relate to this user when authenticating the request.",0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
805,GraphQL,Twitter,DELETE,/v2/users/:source_user_id/muting/:target_user_id,"Allows an authenticated user ID to unmute the target user. The request succeeds with no action when the user sends a request to a user they're not muting or have already unmuted.source_user_id REQUIRED string The user ID who you would like to initiate an unmute on behalf of. The user’s ID must correspond to the user ID of the authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. target_user_id REQUIRED string The user ID of the user that you would like the source_user_id to unmute.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
806,GraphQL,Twitter,GET,/v2/users/:id/muting,"Returns a list of users who are muted by the specified user ID.id REQUIRED string The user ID whose muted users you would like to retrieve. The user’s ID must correspond to the user ID of the authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request.",0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
807,GraphQL,Twitter,POST,/v2/users/:id/muting,"Allows an authenticated user ID to mute the target user.id REQUIRED string The user ID who you would like to initiate the mute on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request.",0,1,,0,1,,0,1,,0,1,Version Found,1,0,[Singular last node with POST method.],0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
808,GraphQL,Twitter,GET,/v2/users/search,The users endpoint returns Users that match a search query.n/a,0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
809,GraphQL,Twitter,GET,/v2/users,Returns a variety of information about one or more users specified by the requested IDs.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
810,GraphQL,Twitter,GET,/v2/users/:id,Returns a variety of information about a single user specified by the requested ID.id REQUIRED string The ID of the user to lookup.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
811,GraphQL,Twitter,GET,/v2/users/by,Returns a variety of information about one or more users specified by their usernames.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
812,GraphQL,Twitter,GET,/v2/users/by/username/:username,Returns a variety of information about one or more users specified by their usernames.username REQUIRED string The Twitter username (handle) of the user.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,1,0,Non-descriptive End-point,0,1,,0,1,Consistent Documentation
813,GraphQL,Twitter,GET,/v2/users/me,Returns information about an authorized user.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
814,GraphQL,Twitter,GET,/v2/spaces/search,"Return live or scheduled Spaces matching your specified search terms. This endpoint performs a keyword search, meaning that it will return Spaces that are an exact case-insensitive match of the specified search term. The search term will match the original title of the Space.n/a",0,1,,0,1,,1,0,[search found],0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
815,GraphQL,Twitter,GET,/v2/spaces/:id,Returns a variety of information about a single Space specified by the requested ID.id REQUIRED string Unique identifier of the Space to request.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
816,GraphQL,Twitter,GET,/v2/spaces/:id/buyers,Returns a list of user who purchased a ticket to the requested Space. You must authenticate the request using the Access Token of the creator of the requested Space.id REQUIRED string Unique identifier of the Space for which you want to request Tweets.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
817,GraphQL,Twitter,GET,/v2/spaces/:id/tweets,Returns Tweets shared in the requested Spaces.id REQUIRED string Unique identifier of the Space containing the Tweets you'd like to access.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
818,GraphQL,Twitter,GET,/v2/spaces/by/creator_ids,Returns live or scheduled Spaces created by the specified user IDs. Up to 100 comma-separated IDs can be looked up using this endpoint.n/a,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
819,GraphQL,Twitter,GET,/v2/lists/:id/tweets,Returns a list of Tweets from the specified List.id REQUIRED string The ID of the List whose Tweets you would like to retrieve.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
820,GraphQL,Twitter,GET,/v2/lists/:id,Returns the details of a specified List.id REQUIRED string The ID of the List to lookup.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
821,GraphQL,Twitter,GET,/v2/users/:id/owned_lists,Returns all Lists owned by the specified user.id REQUIRED string The user ID whose owned Lists you would like to retrieve.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
822,GraphQL,Twitter,DELETE,/v2/lists/:id/members/:user_id,Enables the authenticated user to remove a member from a List they own.id REQUIRED string The ID of the List you are removing a member from. user_id REQUIRED string The ID of the user you wish to remove as a member of the List.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,[Singular last node with PUT|DELETE method.],0,1,Self-descriptive End-point,0,1,,1,0,Inconsistent Documentation
823,GraphQL,Twitter,GET,/v2/lists/:id/members,Returns a list of users who are members of the specified List.id REQUIRED string The ID of the List whose members you would like to retrieve.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
824,GraphQL,Twitter,GET,/v2/users/:id/list_memberships,Returns all Lists a specified user is a member of.id REQUIRED string The user ID whose List memberships you would like to retrieve.,0,1,,0,1,,0,1,,0,1,Version Found,0,1,Regular methods,0,1,Self-descriptive End-point,0,1,,0,1,Consistent Documentation
825,GraphQL,Twitter,POST,/v2/lists/:id/members,Enables the authenticated user to add a member to a List they own.id REQUIRED string The ID of the List you are adding a member to.,0,1, ,0,1, ,0,1, ,0,1,Version Found,0,1,[Pluralized last node with POST method.],0,1,Self-descriptive End-point,0,1, ,1,0,Inconsistent Documentation
