***Anti-Pattern*** 
Count: 0

***Patterns*** 
Count: 96
GET	/ping	[Regular Endpoints]	Returns the literal string 'pong'.
GET	/pingInStoreReader	[Regular Endpoints]	Triggers a beep on a connected Reader and returns the Reader information or an error if unable to ping the device.
GET	/viewer	[Regular Endpoints]	The currently authenticated viewer.
GET	/clientConfiguration	[Regular Endpoints]	The client-side environment and payment method configuration.
GET	/node	[Regular Endpoints]	Fetch any object that extends the Node interface using its ID.
GET	/idFromLegacyId	[Regular Endpoints]	Get a GraphQL ID from a legacy ID that was returned from an SDK or a legacyId field. Does not verify existence except for payment methods.
GET	/report	[Regular Endpoints]	A collection of the available reports. Each field on the Report type is a different report that can be queried with its own input parameters.
GET	/search	[Regular Endpoints]	A collection of the available searches. Each field on the Search type is a different search that can be queried with its own input parameters.
GET	/paypalFinancingOptions	[Regular Endpoints]	Retrieve PayPal financing options that include payment installment plans.
GET	/inStoreLocations	[Regular Endpoints]	Retrieve a paginated list of all in-store locations.
POST	/authorizePaymentMethod	[Regular Endpoints]	Authorize an eligible payment method and return a payload that includes details of the resulting transaction.
POST	/authorizePayPalAccount	[Regular Endpoints]	Authorize an eligible PayPal account and return a payload that includes details of the resulting transaction.
POST	/authorizeVenmoAccount	[Regular Endpoints]	Authorize an eligible Venmo account and return a payload that includes details of the resulting transaction.
POST	/authorizeCreditCard	[Regular Endpoints]	Authorize a credit card of any origin and return a payload that includes details of the resulting transaction.
POST	/captureTransaction	[Regular Endpoints]	Capture an authorized transaction and return a payload that includes details of the transaction.
POST	/chargeUsBankAccount	[Regular Endpoints]	Charge a US bank account and return a payload that includes details of the resulting transaction. See https://developers.braintreepayments.com/guides/ach/configuration for information on eligibility and setup.
POST	/chargePayPalAccount	[Regular Endpoints]	Charge a PayPal account and return a payload that includes details of the resulting transaction.
POST	/chargeVenmoAccount	[Regular Endpoints]	Charge a Venmo account and return a payload that includes details of the resulting transaction. See https://articles.braintreepayments.com/guides/payment-methods/venmo for information on eligibility and setup.
POST	/chargeCreditCard	[Regular Endpoints]	Charge a credit card of any origin and return a payload that includes details of the resulting transaction.
POST	/vaultPaymentMethod	[Regular Endpoints]	Vault payment information from a single-use payment method and return a payload that includes a new multi-use payment method. When vaulting a credit card, by default, this mutation will also verify that card before vaulting.
POST	/vaultUsBankAccount	[Regular Endpoints]	Vault payment information from a single-use US bank account payment method and return a payload that includes a new multi-use payment method.
POST	/vaultCreditCard	[Regular Endpoints]	Vault payment information from a single-use credit card and return a payload that includes a new multi-use payment method. By default, this mutation will also verify the card before vaulting.
POST	/refundTransaction	[Regular Endpoints]	Refund a settled transaction and return a payload that includes details of the refund.
POST	/reverseTransaction	[Regular Endpoints]	Reverse a transaction and return a payload that includes either the voided transaction or a refund.
POST	/reverseRefund	[Regular Endpoints]	Reverse a refund and return a payload that includes voided refund.
POST	/refundCreditCard	[Regular Endpoints]	Create a detached refund (unassociated with any previous Braintree payment) to a credit card and return a payload that includes details of the refund. We have previously referred to this as issuing a "detached credit," and it is disallowed by default. See the documentation for more information regarding eligibility and configuration.
POST	/refundUsBankAccount	[Regular Endpoints]	Create a detached refund (unassociated with any previous Braintree payment) to a US Bank Account and return a payload that includes details of the refund. We have previously referred to this as issuing a "detached credit," and it is disallowed by default. See the documentation for more information regarding eligibility and configuration.
POST	/updateCustomFields	[Regular Endpoints]	Update custom fields on a transaction or refund. Custom fields are defined in the Control Panel.
POST	/verifyPaymentMethod	[Regular Endpoints]	Run a verification on a multi-use payment method.
POST	/verifyCreditCard	[Regular Endpoints]	Run a verification on a multi-use credit card payment method.
POST	/verifyUsBankAccount	[Regular Endpoints]	Run a verification on a multi-use US bank account payment method.
POST	/confirmMicroTransferAmounts	[Regular Endpoints]	Confirm micro-transfer amounts initiated by vaultUsBankAccount or verifyUsBankAccount, completing the verification process for a US Bank Account via micro-transfer.
POST	/deletePaymentMethodFromVault	[Regular Endpoints]	Delete a multi-use payment method from the vault.
POST	/createClientToken	[Regular Endpoints]	Create a client token that can be used to initialize a client in order to tokenize payment information.
POST	/createUniversalAccessToken	[Regular Endpoints]	Create a PayPal access token that can be used to make additional API calls or initialize a client.
POST	/partialCaptureTransaction	[Regular Endpoints]	Partially capture funds from a transaction that was successfully authorized and return a payload that includes a new transaction with information about the capture. This is available for Venmo and PayPal transactions.
POST	/tokenizeCustomActionsPaymentMethod	[Regular Endpoints]	Tokenize Custom Actions fields and return a payload that includes a single-use payment method.
POST	/tokenizeCreditCard	[Regular Endpoints]	Tokenize credit card fields and return a payload that includes a single-use payment method.
POST	/tokenizeCvv	[Regular Endpoints]	Tokenize a credit card's CVV and return a payload that includes a single-use payment method.
POST	/tokenizeNetworkToken	[Regular Endpoints]	Tokenize a network tokenized payment instrument and return a payload that includes a single-use payment method.
POST	/tokenizeSamsungPayCard	[Regular Endpoints]	Tokenize Samsung Pay card fields and return a payload that includes a single-use payment method.
POST	/tokenizeUsBankAccount	[Regular Endpoints]	Tokenize US bank account fields and return a payload that includes a single-use payment method.
POST	/tokenizeUsBankLogin	[Regular Endpoints]	Tokenize US bank login fields and return a payload that includes a single-use payment method.
POST	/tokenizePayPalOneTimePayment	[Regular Endpoints]	Tokenize PayPal One-Time Payment and return a payload that includes a single-use payment method.
POST	/createPayPalOneTimePayment	[Regular Endpoints]	Set up a PayPal One-Time Payment for approval by a PayPal user. See documentation for more information. Your account must be enabled for this feature.
POST	/tokenizePayPalBillingAgreement	[Regular Endpoints]	Tokenize PayPal account and return a payload that includes a single-use payment method.
POST	/createPayPalBillingAgreement	[Regular Endpoints]	Set up a PayPal Billing Agreement Token for approval by a PayPal user.
POST	/createCustomer	[Regular Endpoints]	Create a customer for storing individual customer information and/or grouping transactions and multi-use payment methods.
POST	/updateCustomer	[Regular Endpoints]	Update a customer's information.
POST	/deleteCustomer	[Regular Endpoints]	Delete a customer, breaking association between any of the customer's transactions. Will not delete if the customer has existing payment methods.
POST	/updateCreditCardBillingAddress	[Regular Endpoints]	Set a new billing address for a multi-use credit card payment method. By default, this mutation will also verify the card with the new billing address before updating.
POST	/updateCreditCardCardholderName	[Regular Endpoints]	Set a new cardholder name for a multi-use credit card payment method. By default, this mutation will also verify the card with the new cardholder name before updating.
POST	/updateCreditCardExpirationDate	[Regular Endpoints]	Set a new expiration date for a multi-use credit card payment method. By default, this mutation will also verify the card with the new expiration date before updating.
POST	/performThreeDSecureLookup	[Regular Endpoints]	Attempt to perform 3D Secure Authentication on credit card payment method. This may consume the payment method and return a new single-use payment method.
POST	/acceptDispute	[Regular Endpoints]	Accepts a dispute and returns a payload that includes the dispute that was accepted. Only disputes with a status of OPEN can be accepted.
POST	/finalizeDispute	[Regular Endpoints]	Finalizes a dispute and returns a payload that includes the dispute that was finalized. Only disputes with a status of OPEN can be finalized.
POST	/createDisputeTextEvidence	[Regular Endpoints]	Creates text evidence to a dispute and returns a payload that includes the evidence that was created. Only disputes with a status of OPEN can have text evidence created for them.
POST	/deleteDisputeEvidence	[Regular Endpoints]	Deletes evidence from a dispute.
POST	/createDisputeFileEvidence	[Regular Endpoints]	Uploads an evidence file and associates it with a dispute. Note:: file upload requires a special request format. See the 'Uploading Files' integration guide for instructions on how to perform this mutation.
POST	/vaultPayPalBillingAgreement	[Regular Endpoints]	Vault an existing PayPal Billing Agreement that was not created through Braintree. Only use this mutation if you need to import PayPal Billing Agreements from an existing PayPal integration into your Braintree account.
POST	/sandboxSettleTransaction	[Regular Endpoints]	Force a transaction to settle in the sandbox environment. Generates an error elsewhere.
POST	/createInStoreLocation	[Regular Endpoints]	Creates a new In-Store Location to associate Readers.
POST	/updateInStoreLocation	[Regular Endpoints]	Updates an In-Store Location.
POST	/pairInStoreReader	[Regular Endpoints]	Pairs a Reader to an account and In-Store Location.
POST	/updateInStoreReader	[Regular Endpoints]	Updates an In-Store Reader.
POST	/requestChargeFromInStoreReader	[Regular Endpoints]	Request an in-store reader to begin the charge flow.
POST	/requestAuthorizeFromInStoreReader	[Regular Endpoints]	Request an in-store reader to begin the authorize flow. Only supported on payment application versions >= 5.1.0.
POST	/requestCancelFromInStoreReader	[Regular Endpoints]	Request an in-store reader to cancel the charge flow.
POST	/requestRefundFromInStoreReader	[Regular Endpoints]	Request an in-store reader to start an unreferenced refund flow.
POST	/requestVaultFromInStoreReader	[Regular Endpoints]	Request an in-store reader to vault a payment method.
POST	/requestTextDisplayFromInStoreReader	[Regular Endpoints]	Request an in-store reader to display text.
POST	/requestItemDisplayFromInStoreReader	[Regular Endpoints]	Request an in-store reader to display line items.
POST	/requestFirmwareUpdateFromInStoreReader	[Regular Endpoints]	Request an in-store reader to update to the latest version of software.
POST	/requestSignaturePromptFromInStoreReader	[Regular Endpoints]	Request an in-store reader to display a signature prompt. Only supported on payment application versions >= 3.3.0.
POST	/requestConfirmationPromptFromInStoreReader	[Regular Endpoints]	Request an in-store reader to display a confirmation prompt. Only supported on payment application versions >= 3.3.0.
POST	/requestNonPciCardDataFromInStoreReader	[Regular Endpoints]	Request an in-store reader to collect non PCI-scoped card data. Only supported on payment application versions >= 5.2.0.
POST	/requestAmountPromptFromInStoreReader	[Regular Endpoints]	Request an in-store reader to display an amount prompt. Only supported on payment application versions >= 5.2.0.
POST	/requestTextPromptFromInStoreReader	[Regular Endpoints]	Request an in-store reader to display a text prompt. Only supported on payment application versions >= 5.2.0.
POST	/createVenmoPaymentContext	[Regular Endpoints]	Create a Venmo payment context.
POST	/updateTransactionAmount	[Regular Endpoints]	Updates the authorization amount of the transaction.
POST	/generateExchangeRateQuote	[Regular Endpoints]	Generate a customized currency exchange rate quote for items on a merchant's page. This allows merchants to advertise products in their customer's currency. Your account must be enabled to use this feature.
POST	/createNonInstantLocalPaymentContext	[Regular Endpoints]	Creates a non-instant local payment context. Your account must be enabled to use this feature.
POST	/DisputeEvidence/{id}	[Identifier is Enclosed in {} or <> or Starts with :]	Evidence provided by a merchant to respond to a dispute.
POST	/DisputeEvidence/{legacyId}	[Identifier is Enclosed in {} or <> or Starts with :]	Evidence provided by a merchant to respond to a dispute.
POST	/InStoreContextResult/{id}	[Identifier is Enclosed in {} or <> or Starts with :]	Reference object for an in-store request.
POST	/InStoreReaderOriginDetails	[Regular Endpoints]	Additional information about the payment method supplied by an in-store payment reader.
POST	/Node/{id}	[Identifier is Enclosed in {} or <> or Starts with :]	Relay compatible Node interface.
POST	/Payment/{id}	[Identifier is Enclosed in {} or <> or Starts with :]	A merchant-initiated movement of money between the merchant and a customer, by way of a payment method. Payments can represent money moving either from a customer to the merchant by charging a payment method (a Transaction), or from the merchant back to a customer by refunding a previous transaction (a Refund).
POST	/Payment/{legacyId}	[Identifier is Enclosed in {} or <> or Starts with :]	A merchant-initiated movement of money between the merchant and a customer, by way of a payment method. Payments can represent money moving either from a customer to the merchant by charging a payment method (a Transaction), or from the merchant back to a customer by refunding a previous transaction (a Refund).
POST	/PaymentContext	[Regular Endpoints]	Context associated with a transaction.
POST	/PaymentStatusEvent	[Regular Endpoints]	Status event in the lifecycle of a payment.
POST	/AccountCreationStatus	[Regular Endpoints]	The status of the business account creation request.
POST	/ApplePayStatus	[Regular Endpoints]	The environment being used for Apple Pay.
POST	/ApplicationBankAccountPurpose	[Regular Endpoints]	The purpose of the merchant application bank account.
POST	/ApplicationStatus	[Regular Endpoints]	The status of a merchant account application.
POST	/BinRecordValue	[Regular Endpoints]	A boolean-like value that includes UNKNOWN in the case where the information isn't available.
