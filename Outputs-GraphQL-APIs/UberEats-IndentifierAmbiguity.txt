***Anti-Pattern*** 
Count: 0

***Patterns*** 
Count: 45
POST	/oauth/v2/token	[Regular Endpoints]	The Eats API supports OAuth 2.0.
POST	v1/eats/stores/{store_id}/pos_data	[Identifier is Enclosed in {} or <> or Starts with :]	Link application with a location within Uber's platform. Note that the token for this endpoint requires the eats.pos_provisioning scope. For generating a token with this scope, please refer to the Authentication and Integration Activation Guide for more information.
PATCH	v1/eats/stores/{store_id}/pos_data	[Identifier is Enclosed in {} or <> or Starts with :]	Update an integration's configuration. Note that the token for this endpoint requires the eats.store scope. Configurations can only be updated for locations which you are already associated.
GET	/v1/eats/stores/{store_id}/pos_data	[Identifier is Enclosed in {} or <> or Starts with :]	Retrieves a location configuration that is pertinent to your application.
DELETE	/v1/eats/stores/{store_id}/pos_data	[Identifier is Enclosed in {} or <> or Starts with :]	Removes your application configuration from a store and removes access for your developer token.
GET	/v1/delivery/stores	[Regular Endpoints]	This endpoint allows a partner to enumerate the stores that this token is authorized against. Tokens generated via client_credentials grant will return stores linked to your client ID. Tokens generated via authorization_code grant will return stores linked to the user authorizing the client ID.
GET	/v1/delivery/store/{store_id}	[Identifier is Enclosed in {} or <> or Starts with :]	Retrieves the details of a single location.
POST	/v1/delivery/store/{store_id}	[Identifier is Enclosed in {} or <> or Starts with :]	Allows application to update the metadata for a unique location. Only "Contact", "Location", and "Pickup Instructions" can be updated.
GET	/v1/delivery/store/{store_id}/status	[Identifier is Enclosed in {} or <> or Starts with :]	The Get Store Status endpoint retrieves the orderability status of a location.
POST	/v1/delivery/store/{store_id}/update-store-status	[Identifier is Enclosed in {} or <> or Starts with :]	The Set Restaurant Status endpoint sets the online status of a restaurant.
PSOT	/v1/delivery/store/{store_id}/update-store-prep-time	[Identifier is Enclosed in {} or <> or Starts with :]	Updates the preptime of a given store
GET	/v1/delivery/order/{order_id}	[Identifier is Enclosed in {} or <> or Starts with :]	Provides detailed information regarding an Uber Eats active order that can be expanded to provide additional order information.
GET	/v1/delivery/store/{store_id}/orders	[Identifier is Enclosed in {} or <> or Starts with :]	A list with detailed information regarding Uber Eats orders for a chosen restaurant
POST	/v1/delivery/order/{order_id}/accept	[Identifier is Enclosed in {} or <> or Starts with :]	Allows Acceptance of an Uber Eats Order for timing of pickup to be updated for the customer or courier.
POST	/v1/delivery/order/{order_id}/deny	[Identifier is Enclosed in {} or <> or Starts with :]	Allows an Uber Eats Order to be denied. You must supply a denial reason and can optionally supply a free form text to provide Uber further context as to why the order was unable to be accepted.
POST	/v1/delivery/order/{order_id}/cancel	[Identifier is Enclosed in {} or <> or Starts with :]	Allows cancellation of an Uber Eats Order
POST	/v1/delivery/order/{order_id}/ready	[Identifier is Enclosed in {} or <> or Starts with :]	Mark an order as ready for pickup. Merchants can call this endpoint when done preparing an order.
POST	/v1/delivery/order/{order_id}/adjust-price	[Identifier is Enclosed in {} or <> or Starts with :]	Adjusts the price of an order of an active order for an Eater and awaits confirmation from the customer.
POST	/v1/delivery/order/{order_id}/update-ready-time	[Identifier is Enclosed in {} or <> or Starts with :]	Allows updating the time that an Eats Order will be ready to be picked up by a delivery partner. This can only be called when the Order is in the Accepted State and has not been marked as READY_TO_HANDOFF in the preparation_status. This endpoint will error out if can_adjust_ready_for_pickup_time is false.
POST	/v1/delivery/order/{order_id}/resolve-fulfillment-issues	[Identifier is Enclosed in {} or <> or Starts with :]	Allows merchants to resolve fulfillment issues (e.g. out of item, cannot fulfill special instructions etc.) for a Uber Delivery Order. If successful, a customer can select to accept or adjust the cart for item, or cancel. Execution of this endpoint will be followed with order.fulfillment_issues.resolved or order.failed webhook.
POST	/v1/delivery/order/{order_id}/delivery-partner-feedback	[Identifier is Enclosed in {} or <> or Starts with :]	This endpoint allows the partner to submit delivery partner feedback.
POST	/v1/delivery/stores/{store_id}/promotion	[Identifier is Enclosed in {} or <> or Starts with :]	Create a promotion
POST	/v1/delivery/promotions/{promotion_id}/revoke	[Identifier is Enclosed in {} or <> or Starts with :]	Revoke promotion by specifying the promotion ID
GET	v1/delivery/promotions/{promotion_id}	[Identifier is Enclosed in {} or <> or Starts with :]	Get single promotion metadata by specifying the promotion ID.
POST	/v1/delivery/stores/{store_id}/promotions	[Identifier is Enclosed in {} or <> or Starts with :]	Provides a list of all promotions existing on a store filtered on state and time range.
GET	/v2/eats/stores/{store_id}/menus	[Identifier is Enclosed in {} or <> or Starts with :]	This Get Menu endpoint allows a developer pull the entire menu for a specific store. Note, this response may be very large.
PUT	/v2/eats/stores/{store_id}/menus	[Identifier is Enclosed in {} or <> or Starts with :]	This Upload Menu endpoint allows a developer to create or override the entire menu for a specific store.
POST	/v2/eats/stores/{store_id}/menus/items/{item_id}	[Identifier is Enclosed in {} or <> or Starts with :]	This Update Item endpoint updates an individual item within a menu. This allows you to make smaller edits without needing to send the entire menu. This endpoint performs sparse updates, meaning that it will only update a field if it is specified.
POST	/v2/eats/stores/{store_id}/menus/items/{item_id}	[Identifier is Enclosed in {} or <> or Starts with :]	This Update Item endpoint updates an individual item within a menu. This allows you to make smaller edits without needing to send the entire menu. This endpoint performs sparse updates, meaning that it will only update a field if it is specified.
POST	/v1/eats/report	[Regular Endpoints]	This endpoint will allow a developer to request standardized batch reports (e.g. Payment Details Report) to be generated by Uber Eats.
POST	/v1/eats/byoc/restaurants/orders/event/location	[Regular Endpoints]	This endpoint handles the ingestion of live location of the courier for BYOC partner.
GET	/v2/eats/order/{order_id}	[Identifier is Enclosed in {} or <> or Starts with :]	This endpoint retrieves all details for a single order on Uber Eats.
GET	/v1/eats/stores/{store_id}/created-orders	[Identifier is Enclosed in {} or <> or Starts with :]	This endpoint allows a developer to retrieve all orders for a given restaurant that are in the CREATED state.
GET	/v1/eats/stores/{store_id}/canceled-orders	[Identifier is Enclosed in {} or <> or Starts with :]	This endpoint allows a developer to retrieve all orders for a given restaurant that are in the CANCELED state within the last 2 hours.
POST	/v1/eats/orders/{order_id}/accept_pos_order	[Identifier is Enclosed in {} or <> or Starts with :]	This endpoint allows a developer to accept an order on behalf of a merchant. You must be the store's nominated order manager app to call this endpoint.
POST	/v1/eats/orders/{order_id}/deny_pos_order	[Identifier is Enclosed in {} or <> or Starts with :]	This endpoint allows a developer to reject an order coming from Uber on behalf of a merchant.
POST	/v1/eats/orders/{order_id}/cancel	[Identifier is Enclosed in {} or <> or Starts with :]	This endpoint allows a developer to cancel live orders by their UUID.
PATCH	/v2/eats/orders/{order_id}/cart	[Identifier is Enclosed in {} or <> or Starts with :]	This Patch Cart endpoint allows a developer to update the shopping cart for an order.
POST	/v1/eats/orders/{order_id}/restaurantdelivery/status	[Identifier is Enclosed in {} or <> or Starts with :]	For orders that are delivered by merchant-coordinated couriers, the Update Delivery Status endpoint allows a developer to mark the delivery status of an order as 'started', 'arriving', or 'delivered'.
GET	/v1/eats/stores/{store_id}	[Identifier is Enclosed in {} or <> or Starts with :]	This Get Store Details endpoint allows a developer pull the metadata about a specific store.
GET	/v1/eats/stores	[Regular Endpoints]	This endpoint allows a partner to enumerate the stores that this access token is authorized against.
GET	/v1/eats/store/{store_id}/status	[Identifier is Enclosed in {} or <> or Starts with :]	This Get Restaurant Status endpoint retrieves the online status of a restaurant.
POST	/v1/eats/store/{store_id}/status	[Identifier is Enclosed in {} or <> or Starts with :]	This Set Restaurant Status endpoint sets the online status of a restaurant.
GET	/v1/eats/stores/{store_id}/holiday-hours	[Identifier is Enclosed in {} or <> or Starts with :]	This endpoint allows a developer to retrieve the holiday hours for a given restaurant.
POST	/v1/eats/stores/{store_id}/holiday-hours	[Identifier is Enclosed in {} or <> or Starts with :]	store_idstring Unique identifying string for a restaurant on Uber Eats, provided by Uber.
