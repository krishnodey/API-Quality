HTTP Verb,Name,Description,Arguments
POST,/queries/codeOfConduct,Look up a code of conduct by its key.,key: The code of conduct's key.
POST,/queries/codesOfConduct,Look up a code of conduct by its key.,
POST,/queries/enterprise,Look up an enterprise by URL slug.,"invitationToken: The enterprise invitation token., slug: The enterprise URL slug."
POST,/queries/enterpriseAdministratorInvitation,"Look up a pending enterprise administrator invitation by invitee, enterprise and role.","enterpriseSlug: The slug of the enterprise the user was invited to join., role: The role for the business member invitation., userLogin: The login of the user invited to join the business."
POST,/queries/enterpriseAdministratorInvitationByToken,Look up a pending enterprise administrator invitation by invitation token.,invitationToken: The invitation token sent with the invitation email.
POST,/queries/license,Look up an open source license by its key.,key: The license's downcased SPDX ID.
POST,/queries/licenses,Return a list of known open source licenses.,
POST,/queries/marketplaceCategories,Get alphabetically sorted list of Marketplace categories.,"excludeEmpty: Exclude categories with no listings., excludeSubcategories: Returns top level categories only, excluding any subcategories., includeCategories: Return only the specified categories."
POST,/queries/marketplaceCategory,Look up a Marketplace category by its slug.,"slug: The URL slug of the category., useTopicAliases: Also check topic aliases for the category slug."
POST,/queries/marketplaceListing,Look up a single Marketplace listing.,slug: Select the listing that matches this slug. It's the short name of the listing used in its URL.
POST,/queries/marketplaceListings,Look up Marketplace listings.,"adminId: Select listings that can be administered by the specified user., after: Returns the elements in the list that come after the specified cursor., allStates: Select listings visible to the viewer even if they are not approved. If omitted or
false, only approved listings will be returned., before: Returns the elements in the list that come before the specified cursor., categorySlug: Select only listings with the given category., first: Returns the first n elements from the list., last: Returns the last n elements from the list., organizationId: Select listings for products owned by the specified organization., primaryCategoryOnly: Select only listings where the primary category matches the given category slug., slugs: Select the listings with these slugs, if they are visible to the viewer., useTopicAliases: Also check topic aliases for the category slug., viewerCanAdmin: Select listings to which user has admin access. If omitted, listings visible to the
viewer are returned., withFreeTrialsOnly: Select only listings that offer a free trial."
POST,/queries/meta,Return information about the GitHub instance.,
POST,/queries/node,Fetches an object given its ID.,id: ID of the object.
POST,/queries/nodes,Lookup nodes by a list of IDs.,ids: The list of node IDs.
POST,/queries/organization,Lookup a organization by login.,login: The organization's login.
POST,/queries/rateLimit,The client's rate limit information.,"dryRun: If true, calculate the cost for the query without evaluating it."
POST,/queries/relay,"Workaround for re-exposing the root query object. (Refer to
https://github.com/facebook/relay/issues/112 for more information.).",
POST,/queries/repository,Lookup a given repository by the owner and repository name.,"followRenames: Follow repository renames. If disabled, a repository referenced by its old name will return an error., name: The name of the repository., owner: The login field of a user or organization."
POST,/queries/repositoryOwner,Lookup a repository owner (ie. either a User or an Organization) by login.,login: The username to lookup the owner by.
POST,/queries/resource,Lookup resource by a URL.,url: The URL.
POST,/queries/search,"Perform a search across resources, returning a maximum of 1,000 results.","after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., first: Returns the first n elements from the list., last: Returns the last n elements from the list., query: The search string to look for., type: The types of search items to search within."
POST,/queries/securityAdvisories,GitHub Security Advisories.,"after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., classifications: A list of classifications to filter advisories by., first: Returns the first n elements from the list., identifier: Filter advisories by identifier, e.g. GHSA or CVE., last: Returns the last n elements from the list., orderBy: Ordering options for the returned topics., publishedSince: Filter advisories to those published since a time in the past., updatedSince: Filter advisories to those updated since a time in the past."
POST,/queries/securityAdvisory,Fetch a Security Advisory by its GHSA ID.,ghsaId: GitHub Security Advisory ID.
POST,/queries/securityVulnerabilities,Software Vulnerabilities documented by GitHub Security Advisories.,"after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., classifications: A list of advisory classifications to filter vulnerabilities by., ecosystem: An ecosystem to filter vulnerabilities by., first: Returns the first n elements from the list., last: Returns the last n elements from the list., orderBy: Ordering options for the returned topics., package: A package name to filter vulnerabilities by., severities: A list of severities to filter vulnerabilities by."
POST,/queries/sponsorables,Users and organizations who can be sponsored via GitHub Sponsors.,"after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., dependencyEcosystem: Optional filter for which dependencies should be checked for sponsorable
owners. Only sponsorable owners of dependencies in this ecosystem will be
included. Used when onlyDependencies = true.
Upcoming Change on 2022-07-01 UTC
Description: dependencyEcosystem will be removed. Use the ecosystem argument instead.
Reason: The type is switching from SecurityAdvisoryEcosystem to DependencyGraphEcosystem., ecosystem: Optional filter for which dependencies should be checked for sponsorable
owners. Only sponsorable owners of dependencies in this ecosystem will be
included. Used when onlyDependencies = true., first: Returns the first n elements from the list., last: Returns the last n elements from the list., onlyDependencies: Whether only sponsorables who own the viewer's dependencies will be
returned. Must be authenticated to use. Can check an organization instead
for their dependencies owned by sponsorables by passing
orgLoginForDependencies., orderBy: Ordering options for users and organizations returned from the connection., orgLoginForDependencies: Optional organization username for whose dependencies should be checked.
Used when onlyDependencies = true. Omit to check your own dependencies. If
you are not an administrator of the organization, only dependencies from its
public repositories will be considered."
POST,/queries/topic,Look up a topic by name.,name: The topic's name.
POST,/queries/user,Lookup a user by login.,login: The user's login.
POST,/queries/viewer,The currently authenticated user.,
