DELETE >> /v2/users/:id/bookmarks/:tweet_id >> Allows a user or authenticated user ID to remove a Bookmark of a Tweet. >> id REQUIRED 	string	The user ID of an authenticated user who you are removing a Bookmark of a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. tweet_id REQUIRED 	string	The ID of the Tweet that you would like the id to remove a Bookmark of.
GET >> /v2/users/:id/bookmarks>> Allows you to get an authenticated user's 800 most recent bookmarked Tweets.>> id REQUIRED 	string	User ID of an authenticated user to request bookmarked Tweets for.
POST >> /v2/users/:id/bookmarks>> Causes the user ID of an authenticated user identified in the path parameter to Bookmark the target Tweet provided in the request body.>>id REQUIRED 	string	The user ID of an authenticated user who you are bookmarking a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Token associated with the user ID when authenticating your request. tweet_id REQUIRED 	string	The ID of the Tweet that you would like an id to Bookmark.
GET >> /v2/tweets/search/stream>>Streams Tweets in real-time that match the rules that you added to the stream using the POST /tweets/search/stream/rules endpoint. If you haven't added any rules to your stream, you will not receive any Tweets.>>n/a
POST >>/v2/tweets/search/stream/rules >> Add or delete rules to your stream. Once you've added a rule or rules to your stream, you can retrieve all of the Tweets that match these rules by using the 
GET >> /tweets/search/stream endpoint.>>Return either a single rule, or a list of rules that have been added to the stream. >> delete_all OPTIONAL 	boolean	Set to true to delete all existing rules. dry_run OPTIONAL 	boolean	Set to true to test the syntax of your rule without submitting it. This is useful if you want to check the syntax of a rule before removing one or more of your existing rules. delete_all OPTIONAL 	boolean	Set to true to delete all existing rules. dry_run OPTIONAL 	boolean	Set to true to test the syntax of your rule without submitting it. This is useful if you want to check the syntax of a rule before removing one or more of your existing rules.>> ids OPTIONAL 	string	Comma-separated list of rule IDs. If omitted, all rules are returned.
PUT >> /v2/tweets/:id/hidden >> Hides or unhides a reply to a Tweet.>>id REQUIRED 	string	Unique identifier of the Tweet to hide or unhide. The Tweet must belong to a conversation initiated by the authenticating user.
DELETE>> /v2/users/:id/likes/:tweet_id >> Allows a user or authenticated user ID to unlike a Tweet.>> id Required 	string	The user ID who you are removing a Like of a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. tweet_id Required 	string	The ID of the Tweet that you would like the id to unlike.
GET >> /v2/tweets/:id/liking_users >> Allows you to get information about a Tweet’s liking users.>> id REQUIRED 	string	Tweet ID of the Tweet to request liking users of.
GET >> /v2/users/:id/liked_tweets >> Allows you to get information about a user’s liked Tweets >> id REQUIRED 	string	User ID of the user to request liked Tweets for.
POST >> /v2/users/:id/likes >> Causes the user ID identified in the path parameter to Like the target Tweet. >> POST /2/users/:id/likes Causes the user ID identified in the path parameter to Like the target Tweet.
DELETE>> /v2/tweets/:id >> Allows a user or authenticated user ID to delete a Tweet.>>id REQUIRED 	string	The Tweet ID you are deleting.
POST >> /v2/tweets >> Creates a Tweet on behalf of an authenticated user. >> direct_message_deep_link OPTIONAL 	string	Tweets a link directly to a Direct Message conversation with an account. Example: {"text": "Tweeting a DM deep link!", "direct_message_deep_link": "https://twitter.com/messages/compose?recipient_id=2244994945"} for_super_followers_only OPTIONAL 	boolean	Allows you to Tweet exclusively for Super Followers. Example: {"text": "Hello World!", "for_super_followers_only": true} geo OPTIONAL 	object	A JSON object that contains location information for a Tweet. You can only add a location to Tweets if you have geo enabled in your profile settings. If you don't have geo enabled, you can still add a location parameter in your request body, but it won't get attached to your Tweet geo.place_id OPTIONAL 	string	Place ID being attached to the Tweet for geo location. Example: {"text": "Tweeting with geo!","geo": {"place_id": "5a110d312052166f"}} media OPTIONAL 	object	A JSON object that contains media information being attached to created Tweet. This is mutually exclusive from Quote Tweet ID and Poll. media.media_ids OPTIONAL 	array	A list of Media IDs being attached to the Tweet. This is only required if the request includes the tagged_user_ids. Example: {"text": "Tweeting with media!", "media": {"media_ids": ["1455952740635586573"]}} media.tagged_user_ids OPTIONAL 	array	A list of User IDs being tagged in the Tweet with Media. If the user you're tagging doesn't have photo-tagging enabled, their names won't show up in the list of tagged users even though the Tweet is successfully created. Example: {"text": "Tagging users in images!", "media": {"media_ids": ["1455952740635586573"], "tagged_user_ids": ["2244994945","6253282"]}} poll OPTIONAL 	object	A JSON object that contains options for a Tweet with a poll. This is mutually exclusive from Media and Quote Tweet ID. poll.duration_minutes OPTIONAL 	number	Duration of the poll in minutes for a Tweet with a poll. This is only required if the request includes poll.options. Example: {"text": "Tweeting with polls!", "poll": {"options": ["yes", "maybe", "no"], "duration_minutes": 120}} poll.options OPTIONAL 	array	A list of poll options for a Tweet with a poll. For the request to be successful it must also include duration_minutes too. Example: {"text": "Tweeting with polls!", "poll": {"options": ["yes", "maybe", "no"], "duration_minutes": 120}}" quote_tweet_id OPTIONAL 	string	Link to the Tweet being quoted. Example: {"text": "Yay!", "quote_tweet_id": "1455953449422516226"} reply OPTIONAL 	object	A JSON object that contains information of the Tweet being replied to. reply.exclude_reply_user_ids OPTIONAL 	array	A list of User IDs to be excluded from the reply Tweet thus removing a user from a thread. Example: {"text": "Yay!", "reply": {"in_reply_to_tweet_id": "1455953449422516226", "exclude_reply_user_ids": ["6253282"]}} reply.in_reply_to_tweet_id OPTIONAL 	string	Tweet ID of the Tweet being replied to. Please note that in_reply_to_tweet_id needs to be in the request if exclude_reply_user_ids is present. Example: {"text": "Excited!", "reply": {"in_reply_to_tweet_id": "1455953449422516226"}} reply_settings OPTIONAL 	string	Settings to indicate who can reply to the Tweet. Options include "mentionedUsers" and "following". If the field isn’t specified, it will default to everyone. Example:{"text": "Tweeting with reply settings!", "reply_settings": "mentionedUsers"} text OPTIONAL 	string	Text of the Tweet being created. This field is required if media.media_ids is not present. Example: {"text": "Hello World!"}
GET >> /2/tweets/:id/quote_tweets >> Returns Quote Tweets for a Tweet specified by the requested Tweet ID. >> id REQUIRED 	string	Unique identifier of the Tweet to request