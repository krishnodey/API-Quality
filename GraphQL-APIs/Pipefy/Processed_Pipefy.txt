{"http_verb": "GET ", "uri": " /allCards ", "processed_uri": ["cards"], "description": " Fetches all pipe cards based on arguments ", "parameter": " n/a\n", "processed_des_para": ["fetch", "pipe", "card", "base", "argument"]}
{"http_verb": "GET ", "uri": " /autoFillFields ", "processed_uri": ["auto", "fill", "fields"], "description": " Lookup the values that will automatically fill the child-card's start form fields", "parameter": " n/a\n", "processed_des_para": ["lookup", "value", "automatically", "fill", "child", "card", "start", "form", "field"]}
{"http_verb": "GET ", "uri": " /card ", "processed_uri": ["card"], "description": "Lookup a card by its ID ", "parameter": " n/a\n", "processed_des_para": ["lookup", "card"]}
{"http_verb": "GET ", "uri": " /cards", "processed_uri": ["cards"], "description": "Fetches a group of cards based on arguments", "parameter": "n/a\n", "processed_des_para": ["fetch", "group", "card", "base", "argument"]}
{"http_verb": "GET", "uri": " /cardsImportations/{pipeId}", "processed_uri": ["cards", "importations", "pipe", "identification"], "description": "Lookup the cards importer history by the pipe ID", "parameter": "pipeId: ID!\tRequired. The pipe ID\n", "processed_des_para": ["lookup", "card", "importer", "history", "pipe", "pipe", "identification", "pipe", "identification"]}
{"http_verb": "GET ", "uri": " /findCards/{pipeId} ", "processed_uri": ["find", "cards", "pipe", "identification"], "description": " Fetch cards based on fields' inputs ", "parameter": " pipeId: ID!\tRequired. The pipe ID\n", "processed_des_para": ["fetch", "card", "base", "field", "input", "pipe", "identification", "pipe", "identification"]}
{"http_verb": "GET ", "uri": " /findCards/{tableId}", "processed_uri": ["find", "cards", "table", "identification"], "description": " Fetch records based on fields' inputs", "parameter": "tableId: String!\tRequired. The table ID\n", "processed_des_para": ["fetch", "record", "base", "field", "input", "table", "identification", "table", "identification"]}
{"http_verb": "GET ", "uri": " /inbox_emails/card_id ", "processed_uri": ["inbox", "emails", "card", "identification"], "description": " Lookup the card's emails by its ID", "parameter": "card_id: ID!\tRequired. The card ID\n", "processed_des_para": ["lookup", "card", "email", "card", "identification", "card", "identification"]}
{"http_verb": "GET ", "uri": " /me ", "processed_uri": [], "description": "Returns informations of the current authenticated user", "parameter": "n/a\n", "processed_des_para": ["return", "information", "current", "authenticate", "user"]}
{"http_verb": "GET ", "uri": " /organization/{id} ", "processed_uri": ["organization", "identification"], "description": " Lookup an organization by its ID", "parameter": "id: ID!\tRequired. The organization ID\n", "processed_des_para": ["lookup", "organization", "identification", "organization", "identification"]}
{"http_verb": "GET ", "uri": " /organizations/{ids} ", "processed_uri": ["organizations", "identifications"], "description": " Lookup organizations by their ID", "parameter": " ids: [ID]\tThe organizations IDs\n", "processed_des_para": ["lookup", "organization", "identification", "organization", "ds"]}
{"http_verb": "GET ", "uri": " /phase/{id} ", "processed_uri": ["phase", "identification"], "description": " Lookup a phase by its ID ", "parameter": " id: ID!\tRequired. The phase ID\n", "processed_des_para": ["lookup", "phase", "identification", "phase", "identification"]}
{"http_verb": "GET ", "uri": " /pipe/{id} ", "processed_uri": ["pipe", "identification"], "description": " Lookup a pipe by its ID", "parameter": " id: ID!\tRequired. The pipe ID\n", "processed_des_para": ["lookup", "pipe", "identification", "pipe", "identification"]}
{"http_verb": "GET", "uri": " /pipeReportExport/{id}", "processed_uri": ["pipe", "report", "export", "identification"], "description": "Lookup a pipe report export by its ID", "parameter": "id: ID!\tRequired. The export ID\n", "processed_des_para": ["lookup", "pipe", "report", "export", "identification", "export", "identification"]}
{"http_verb": "GET ", "uri": " /pipe/{ids} ", "processed_uri": ["pipe", "identifications"], "description": " Lookup a pipe by their ID", "parameter": " ids: ID!\tRequired. The pipes ID\n", "processed_des_para": ["lookup", "pipe", "identification", "pipe", "identification"]}
{"http_verb": "GET ", "uri": " /pipe_relations/{id} ", "processed_uri": ["pipe", "relations", "identification"], "description": "Lookup pipe relations by their ID", "parameter": "ids: [ID]!\tRequired. The pipe relation ID\n", "processed_des_para": ["lookup", "pipe", "relation", "identification", "pipe", "relation", "identification"]}
{"http_verb": "GET ", "uri": " /pipe_templates ", "processed_uri": ["pipe", "templates"], "description": " Lookup all pipe templates available on Pipefy", "parameter": "n/a\n", "processed_des_para": ["lookup", "pipe", "template", "available", "pipefy"]}
{"http_verb": "GET ", "uri": " /recordsImportations/{tableID} ", "processed_uri": ["records", "importations", "table"], "description": " Lookup the records importer history by the table ID", "parameter": "tableId: ID!\tRequired. The table ID\n", "processed_des_para": ["lookup", "record", "importer", "history", "table", "table", "identification", "table", "identification"]}
{"http_verb": "GET ", "uri": " /table/{id}", "processed_uri": ["table", "identification"], "description": "Lookup a database table by its ID ", "parameter": " id: ID!\tRequired. The table ID\n", "processed_des_para": ["lookup", "database", "table", "identification", "table", "identification"]}
{"http_verb": "GET ", "uri": " /table/{ids}", "processed_uri": ["table", "identifications"], "description": "Lookup a database tables by their ID ", "parameter": " ids: ID!\tRequired. The table ID\n", "processed_des_para": ["lookup", "database", "table", "identification", "table", "identification"]}
{"http_verb": "GET ", "uri": " /table_record/{id} ", "processed_uri": ["table", "record", "identification"], "description": " Lookup a record by its ID ", "parameter": " id: ID!\tRequired. The record ID\n", "processed_des_para": ["lookup", "record", "identification", "record", "identification"]}
{"http_verb": "GET ", "uri": " /table_records/{table_id} ", "processed_uri": ["table", "records", "table", "identification"], "description": " Fetches a group of records based on arguments", "parameter": "table_id: ID!\tRequired. The table ID\n", "processed_des_para": ["fetch", "group", "record", "base", "argument", "table", "identification", "table", "identification"]}
{"http_verb": "GET ", "uri": " /table_relations/{ids} ", "processed_uri": ["table", "relations", "identifications"], "description": "Lookup table relations by their ID", "parameter": "ids: [ID]!\tRequired. The table relation ID\n", "processed_des_para": ["lookup", "table", "relation", "identification", "table", "relation", "identification"]}
{"http_verb": "POST ", "uri": " /clonePipes ", "processed_uri": ["clone", "pipes"], "description": " Clones a pipe ", "parameter": " n/a\n", "processed_des_para": ["clone", "pipe"]}
{"http_verb": "POST ", "uri": " /createCard  ", "processed_uri": ["create", "card"], "description": "Creates a card", "parameter": "n/a\n", "processed_des_para": ["create", "card"]}
{"http_verb": "POST ", "uri": " /createCardRelation ", "processed_uri": ["create", "card", "relation"], "description": " Creates a card relation", "parameter": "n/a\n", "processed_des_para": ["create", "card", "relation"]}
{"http_verb": "POST ", "uri": " /createComment", "processed_uri": ["create", "comment"], "description": " Creates a comment ", "parameter": " n/a\n", "processed_des_para": ["create", "comment"]}
{"http_verb": "POST ", "uri": " /createFieldCondition", "processed_uri": ["create", "field", "condition"], "description": "Creates a field condition", "parameter": "n/a\n", "processed_des_para": ["create", "field", "condition"]}
{"http_verb": "POST ", "uri": " /createInboxEmail ", "processed_uri": ["create", "inbox", "email"], "description": " Creates an email", "parameter": "n/a\n", "processed_des_para": ["create", "email"]}
{"http_verb": "POST ", "uri": " /createLabel ", "processed_uri": ["create", "label"], "description": " Creates a label ", "parameter": "n/a\n", "processed_des_para": ["create", "label"]}
{"http_verb": "POST ", "uri": " /createOrganization", "processed_uri": ["create", "organization"], "description": " Creates an organization", "parameter": "n/a\n", "processed_des_para": ["create", "organization"]}
{"http_verb": "POST ", "uri": " /createOrganizationWebhook ", "processed_uri": ["create", "organization", "webhook"], "description": " Creates an organization-level webhook", "parameter": "n/a\n", "processed_des_para": ["create", "organization", "level", "webhook"]}
{"http_verb": "POST ", "uri": " /createPhase ", "processed_uri": ["create", "phase"], "description": "Creates a phase", "parameter": "n/a\n", "processed_des_para": ["create", "phase"]}
{"http_verb": "POST ", "uri": " /createPhaseField ", "processed_uri": ["create", "phase", "field"], "description": "Creates a phase field", "parameter": "n/a\n", "processed_des_para": ["create", "phase", "field"]}
{"http_verb": "POST ", "uri": "/createPipe ", "processed_uri": ["create", "pipe"], "description": " Creates a pipe", "parameter": "n/a\n", "processed_des_para": ["create", "pipe"]}
{"http_verb": "POST ", "uri": "/createPipeRelation ", "processed_uri": ["create", "pipe", "relation"], "description": " Creates a pipe relation ", "parameter": "n/a\n", "processed_des_para": ["create", "pipe", "relation"]}
{"http_verb": "POST ", "uri": " /createPresignedUrl ", "processed_uri": ["create", "presigned", "url"], "description": " Returns a temporary S3 presigned url to upload a file", "parameter": "n/a\n", "processed_des_para": ["return", "temporary", "presigned", "url", "upload", "file"]}
{"http_verb": "POST ", "uri": " /createPresignedUrlForPipePdfTemplate ", "processed_uri": ["create", "presigned", "url", "pipe", "pdf", "template"], "description": " Returns a temporary S3 presigned url to upload a pdf template image", "parameter": "n/a\n", "processed_des_para": ["return", "temporary", "presigned", "url", "upload", "pdf", "template", "image"]}
{"http_verb": "POST ", "uri": " /createTable ", "processed_uri": ["create", "table"], "description": " Creates a table", "parameter": "n/a\n", "processed_des_para": ["create", "table"]}
{"http_verb": "POST ", "uri": " /createTableField ", "processed_uri": ["create", "table", "field"], "description": " Creates a table field", "parameter": "n/a\n", "processed_des_para": ["create", "table", "field"]}
{"http_verb": "POST ", "uri": " /createTableRecord ", "processed_uri": ["create", "table", "record"], "description": " Creates a record ", "parameter": "n/a\n", "processed_des_para": ["create", "record"]}
{"http_verb": "POST ", "uri": " /createTableRecordInRestrictedTable ", "processed_uri": ["create", "table", "record", "restricted", "table"], "description": " Creates a record in a private table", "parameter": "n/a\n", "processed_des_para": ["create", "record", "private", "table"]}
{"http_verb": "POST ", "uri": " /deleteFieldCondition ", "processed_uri": ["delete", "field", "condition"], "description": " Deletes a field condition", "parameter": "n/a\n", "processed_des_para": ["delete", "field", "condition"]}
{"http_verb": "POST ", "uri": " /deleteInboxEmail ", "processed_uri": ["delete", "inbox", "email"], "description": " Deletes an email", "parameter": "n/a\n", "processed_des_para": ["delete", "email"]}
{"http_verb": "POST ", "uri": " /deleteLabel ", "processed_uri": ["delete", "label"], "description": " Deletes a label", "parameter": "n/a\n", "processed_des_para": ["delete", "label"]}
{"http_verb": "POST ", "uri": " /deleteOrganization ", "processed_uri": ["delete", "organization"], "description": " Deletes an organization", "parameter": "n/a\n", "processed_des_para": ["delete", "organization"]}
{"http_verb": "POST ", "uri": " /deleteOrganizationWebhook ", "processed_uri": ["delete", "organization", "webhook"], "description": " Deletes a webhook", "parameter": "n/a\n", "processed_des_para": ["delete", "webhook"]}
{"http_verb": "POST ", "uri": " /deletePhaseField ", "processed_uri": ["delete", "phase", "field"], "description": "Deletes a phase field", "parameter": "n/a\n", "processed_des_para": ["delete", "phase", "field"]}
{"http_verb": "POST ", "uri": " /deletePipe ", "processed_uri": ["delete", "pipe"], "description": "Deletes a pipe", "parameter": "n/a\n", "processed_des_para": ["delete", "pipe"]}
{"http_verb": "POST ", "uri": " /deletePipeRelation ", "processed_uri": ["delete", "pipe", "relation"], "description": " Deletes a pipe relation", "parameter": "n/a\n", "processed_des_para": ["delete", "pipe", "relation"]}
{"http_verb": "POST ", "uri": " /deleteTable ", "processed_uri": ["delete", "table"], "description": " Deletes a table ", "parameter": "n/a\n", "processed_des_para": ["delete", "table"]}
{"http_verb": "POST ", "uri": " /deleteTableField ", "processed_uri": ["delete", "table", "field"], "description": " Deletes a table field ", "parameter": "n/a\n", "processed_des_para": ["delete", "table", "field"]}
{"http_verb": "POST ", "uri": " /deleteTableRecord ", "processed_uri": ["delete", "table", "record"], "description": " Deletes a record", "parameter": "n/a\n", "processed_des_para": ["delete", "record"]}
{"http_verb": "POST ", "uri": " /deleteTableRelation ", "processed_uri": ["delete", "table", "relation"], "description": " Deletes a table relation ", "parameter": "n/a\n", "processed_des_para": ["delete", "table", "relation"]}
{"http_verb": "POST ", "uri": " /deleteWebhook ", "processed_uri": ["delete", "webhook"], "description": " Deletes a webhook (pipe or table level) ", "parameter": "n/a\n", "processed_des_para": ["delete", "webhook", "pipe", "table", "level"]}
{"http_verb": "POST ", "uri": " /exportPipeReport", "processed_uri": ["export", "pipe", "report"], "description": " Exports a pipe report ", "parameter": "n/a\n", "processed_des_para": ["export", "pipe", "report"]}
{"http_verb": "POST ", "uri": " /createTableRelation ", "processed_uri": ["create", "table", "relation"], "description": " Creates a table relation ", "parameter": "n/a\n", "processed_des_para": ["create", "table", "relation"]}
{"http_verb": "POST ", "uri": " /createWebhook ", "processed_uri": ["create", "webhook"], "description": " Creates a webhook at a pipe or table level ", "parameter": "n/a\n", "processed_des_para": ["create", "webhook", "pipe", "table", "level"]}
{"http_verb": "POST ", "uri": " /deleteCard ", "processed_uri": ["delete", "card"], "description": " Deletes a card ", "parameter": "n/a\n", "processed_des_para": ["delete", "card"]}
{"http_verb": "POST ", "uri": " /deleteComment ", "processed_uri": ["delete", "comment"], "description": " Deletes a comment ", "parameter": "n/a\n", "processed_des_para": ["delete", "comment"]}
{"http_verb": "POST ", "uri": " /deletePipe", "processed_uri": ["delete", "pipe"], "description": "Deletes a pipe ", "parameter": "n/a\n", "processed_des_para": ["delete", "pipe"]}
{"http_verb": "POST ", "uri": " /interfaceEmbedCreat", "processed_uri": ["interface", "embed", "creat"], "description": " Create a new Interface ", "parameter": "n/a\n", "processed_des_para": ["create", "new", "interface"]}
{"http_verb": "POST ", "uri": " /inviteMembers ", "processed_uri": ["invite", "members"], "description": " Invites new members for the organization ", "parameter": "n/a\n", "processed_des_para": ["invite", "new", "member", "organization"]}
{"http_verb": "POST ", "uri": " /moveCardToPhase ", "processed_uri": ["move", "card", "phase"], "description": " Moves a card to another phase ", "parameter": "n/a\n", "processed_des_para": ["move", "card", "another", "phase"]}
{"http_verb": "POST ", "uri": " /recordsImporter ", "processed_uri": ["records", "importer"], "description": " Create new records from a xlsx file ", "parameter": "n/a\n", "processed_des_para": ["create", "new", "record", "xlsx", "file"]}
{"http_verb": "POST ", "uri": " /removeUserFromOrg ", "processed_uri": ["remove", "user", "organization"], "description": " Remove a user from an organization ", "parameter": "n/a\n", "processed_des_para": ["remove", "user", "organization"]}
{"http_verb": "POST ", "uri": " /removeUserFromPipe ", "processed_uri": ["remove", "user", "pipe"], "description": " Removes a user from pipe ", "parameter": "n/a\n", "processed_des_para": ["remove", "user", "pipe"]}
{"http_verb": "POST ", "uri": " /removeUserFromTable ", "processed_uri": ["remove", "user", "table"], "description": " Removes a user from table ", "parameter": "n/a\n", "processed_des_para": ["remove", "user", "table"]}
{"http_verb": "POST ", "uri": " /sendInboxEmail ", "processed_uri": ["send", "inbox", "email"], "description": " Sends an email ", "parameter": "n/a\n", "processed_des_para": ["send", "email"]}
{"http_verb": "POST ", "uri": " /setFieldConditionOrder ", "processed_uri": ["set", "field", "condition", "order"], "description": " Sets field condition order ", "parameter": "n/a\n", "processed_des_para": ["set", "field", "condition", "order"]}
{"http_verb": "POST ", "uri": " /setRole ", "processed_uri": ["set", "role"], "description": " Sets the role of a user ", "parameter": "n/a\n", "processed_des_para": ["set", "role", "user"]}
{"http_verb": "POST ", "uri": " /setRoles ", "processed_uri": ["set", "roles"], "description": " Sets role of multiple users ", "parameter": "n/a\n", "processed_des_para": ["set", "role", "multiple", "user"]}
{"http_verb": "POST ", "uri": " /setSummaryAttributes ", "processed_uri": ["set", "summary", "attributes"], "description": " Sets summary attributes", "parameter": "n/a\n", "processed_des_para": ["set", "summary", "attribute"]}
{"http_verb": "POST ", "uri": " /setTableFieldOrder", "processed_uri": ["set", "table", "field", "order"], "description": " Sets table field order ", "parameter": "n/a\n", "processed_des_para": ["set", "table", "field", "order"]}
{"http_verb": "POST ", "uri": " /setTableRecordFieldValue", "processed_uri": ["set", "table", "record", "field", "value"], "description": "Sets record field value ", "parameter": "n/a\n", "processed_des_para": ["set", "record", "field", "value"]}
{"http_verb": "POST ", "uri": " /updateCard ", "processed_uri": ["update", "card"], "description": " Updates an existing card ", "parameter": "n/a\n", "processed_des_para": ["update", "exist", "card"]}
{"http_verb": "POST ", "uri": " /updateCardField ", "processed_uri": ["update", "card", "field"], "description": " Updates an existing card field ", "parameter": "n/a\n", "processed_des_para": ["update", "exist", "card", "field"]}
{"http_verb": "POST ", "uri": " /updateComment", "processed_uri": ["update", "comment"], "description": "Updates an existing comment ", "parameter": "n/a\n", "processed_des_para": ["update", "exist", "comment"]}
{"http_verb": "POST ", "uri": " /updateFieldsValues ", "processed_uri": ["update", "fields", "values"], "description": " Update one or many values of fields inside a Card or Table record. ", "parameter": "n/a\n", "processed_des_para": ["update", "one", "many", "value", "field", "inside", "card", "table", "record"]}
{"http_verb": "POST ", "uri": " /updateLabel ", "processed_uri": ["update", "label"], "description": " Updates an existing label ", "parameter": "n/a\n", "processed_des_para": ["update", "exist", "label"]}
{"http_verb": "POST ", "uri": " /updateOrganization ", "processed_uri": ["update", "organization"], "description": " Updates an existing organization ", "parameter": "n/a\n", "processed_des_para": ["update", "exist", "organization"]}
{"http_verb": "POST ", "uri": " /updateOrganizationWebhook ", "processed_uri": ["update", "organization", "webhook"], "description": " Updates an existing organization-level webhook", "parameter": "n/a\n", "processed_des_para": ["update", "exist", "organization", "level", "webhook"]}
{"http_verb": "POST ", "uri": " /updatePhase", "processed_uri": ["update", "phase"], "description": "Updates an existing phase ", "parameter": "n/a\n", "processed_des_para": ["update", "exist", "phase"]}
{"http_verb": "POST ", "uri": " /updatePhaseField ", "processed_uri": ["update", "phase", "field"], "description": " Updates an existing phase field ", "parameter": " n/a\n", "processed_des_para": ["update", "exist", "phase", "field"]}
{"http_verb": "POST ", "uri": " /updatePipe ", "processed_uri": ["update", "pipe"], "description": " Updates an existing pipe ", "parameter": " n/a\n", "processed_des_para": ["update", "exist", "pipe"]}
{"http_verb": "POST ", "uri": " /updatePipeRelation ", "processed_uri": ["update", "pipe", "relation"], "description": " Updates an existing pipe relation ", "parameter": " n/a\n", "processed_des_para": ["update", "exist", "pipe", "relation"]}
{"http_verb": "POST ", "uri": " /updateTable ", "processed_uri": ["update", "table"], "description": " Updates an existing table ", "parameter": " n/a\n", "processed_des_para": ["update", "exist", "table"]}
{"http_verb": "POST ", "uri": " /updateTableField ", "processed_uri": ["update", "table", "field"], "description": " Updates an existing table field ", "parameter": " n/a\n", "processed_des_para": ["update", "exist", "table", "field"]}
{"http_verb": "POST ", "uri": " /updateTableRecord ", "processed_uri": ["update", "table", "record"], "description": " Updates an existing record ", "parameter": " n/a\n", "processed_des_para": ["update", "exist", "record"]}
{"http_verb": "POST ", "uri": " /updateWebhook", "processed_uri": ["update", "webhook"], "description": " Updates an existing webhook (pipe or table level) ", "parameter": " n/a", "processed_des_para": ["update", "exist", "webhook", "pipe", "table", "level"]}
