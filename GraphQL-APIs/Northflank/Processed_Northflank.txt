{"http_verb": "GET ", "uri": " /v1/projects ", "processed_uri": ["projects"], "description": " Lists projects for the authenticated user or team. ", "parameter": "\n", "processed_des_para": ["list", "project", "authenticate", "user", "team"]}
{"http_verb": "POST ", "uri": " /v1/projects ", "processed_uri": ["projects"], "description": " Creates a new project. ", "parameter": "\n", "processed_des_para": ["create", "new", "project"]}
{"http_verb": "PUT ", "uri": " /v1/projects ", "processed_uri": ["projects"], "description": " Create or update project ", "parameter": " \n", "processed_des_para": ["create", "update", "project"]}
{"http_verb": "PATCH ", "uri": " /v1/projects/{projectId}", "processed_uri": ["projects", "project", "identifer"], "description": " Updates a project. ", "parameter": " \n", "processed_des_para": ["update", "project"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId} ", "processed_uri": ["projects", "project", "identifer"], "description": " Get information about the given project ", "parameter": "\n", "processed_des_para": ["get", "information", "give", "project"]}
{"http_verb": "DELETE ", "uri": " /v1/projects/{projectId} ", "processed_uri": ["projects", "project", "identifer"], "description": " Delete the given project. Fails if the project isn't empty. ", "parameter": " \n", "processed_des_para": ["delete", "give", "project", "fail", "project", "be", "not", "empty"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services ", "processed_uri": ["projects", "project", "identifer", "services"], "description": " Gets a list of services belonging to the project ", "parameter": "\n", "processed_des_para": ["get", "list", "service", "belong", "project"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/build ", "processed_uri": ["projects", "project", "identifer", "services", "build"], "description": " Creates a new build service.", "parameter": "\n", "processed_des_para": ["create", "new", "build", "service"]}
{"http_verb": "PUT ", "uri": " /v1/projects/{projectId}/services/build ", "processed_uri": ["projects", "project", "identifer", "services", "build"], "description": " Creates or updates a build service. ", "parameter": " \n", "processed_des_para": ["create", "update", "build", "service"]}
{"http_verb": "PATCH ", "uri": " /v1/projects/{projectId}/services/build/{serviceId} ", "processed_uri": ["projects", "project", "identifer", "services", "build", "service", "identifer"], "description": " Updates a build service. ", "parameter": "\n", "processed_des_para": ["update", "build", "service"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/combined ", "processed_uri": ["projects", "project", "identifer", "services", "combined"], "description": " Creates a new combined service. ", "parameter": "\n", "processed_des_para": ["create", "new", "combine", "service"]}
{"http_verb": "PUT ", "uri": " /v1/projects/{projectId}/services/combined ", "processed_uri": ["projects", "project", "identifer", "services", "combined"], "description": " Creates or updates a combined service. ", "parameter": "\n", "processed_des_para": ["create", "update", "combine", "service"]}
{"http_verb": "PATCH ", "uri": " /v1/projects/{projectId}/services/combined/{serviceId} ", "processed_uri": ["projects", "project", "identifer", "services", "combined", "service", "identifer"], "description": " Updates a combined service. ", "parameter": " \n", "processed_des_para": ["update", "combine", "service"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/deployment ", "processed_uri": ["projects", "project", "identifer", "services", "deployment"], "description": " Creates a new deployment service.", "parameter": "\n", "processed_des_para": ["create", "new", "deployment", "service"]}
{"http_verb": "PUT ", "uri": " /v1/projects/{projectId}/services/deployment ", "processed_uri": ["projects", "project", "identifer", "services", "deployment"], "description": " Creates or updates a deployment service. ", "parameter": "\n", "processed_des_para": ["create", "update", "deployment", "service"]}
{"http_verb": "PATCH ", "uri": " /v1/projects/{projectId}/services/deployment/{serviceId} ", "processed_uri": ["projects", "project", "identifer", "services", "deployment", "service", "identifer"], "description": " Updates a deployment service.\n", "parameter": "", "processed_des_para": ["update", "deployment", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId} ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer"], "description": " Gets information about the given service. ", "parameter": " \n", "processed_des_para": ["get", "information", "give", "service"]}
{"http_verb": "DELETE ", "uri": " /v1/projects/{projectId}/services/{serviceId} ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer"], "description": " Deletes the given service.", "parameter": "\n", "processed_des_para": ["delete", "give", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/branches ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "branches"], "description": " Gets information about the branches of the given service. ", "parameter": " \n", "processed_des_para": ["get", "information", "branch", "give", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/build ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "build"], "description": " Lists the builds for the service\n", "parameter": "", "processed_des_para": ["list", "build", "service"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/build  ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "build"], "description": " Start a new build for the given combined or build service. If given a commit sha, it will build that commit. Otherwise, the most recent relevant commit will be built. If the service provided is a build service, a branch name or pull request to build from is required.\n", "parameter": "", "processed_des_para": ["start", "new", "build", "give", "combined", "build", "service", "give", "commit", "sha", "build", "commit", "otherwise", "recent", "relevant", "commit", "build", "service", "provide", "build", "service", "branch", "name", "pull", "request", "build", "require"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/build-arguments ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "build", "arguments"], "description": " Gets the build arguments of the given service. If the API key does not have the permission 'Project > Secrets > General > Read', secrets inherited from secret groups will not be displayed. ", "parameter": "\n", "processed_des_para": ["get", "build", "argument", "give", "service", "ap", "key", "permission", "project", "secret", "general", "read", "secret", "inherit", "secret", "group", "display"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/build-arguments ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "build", "arguments"], "description": " Sets the build arguments for the given service. ", "parameter": " \n", "processed_des_para": ["set", "build", "argument", "give", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/build-arguments/details ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "build", "arguments", "details"], "description": " Get details about the build arguments accessible by the given service. ", "parameter": "\n", "processed_des_para": ["get", "detail", "build", "argument", "accessible", "give", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/build-logs ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "build", "logs"], "description": " Get logs for a service build ", "parameter": "\n", "processed_des_para": ["get", "log", "service", "build"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/build-metrics ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "build", "metrics"], "description": " Get metrics for a service build ", "parameter": "\n", "processed_des_para": ["get", "metric", "service", "build"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/build-options ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "build", "options"], "description": " Updates the build options for a given service.", "parameter": "\n", "processed_des_para": ["update", "build", "option", "give", "service"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/build-source ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "build", "source"], "description": " Updates the version control source for a given build or combined service.", "parameter": "\n", "processed_des_para": ["update", "version", "control", "source", "give", "build", "combine", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/build/{buildId} ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "build", "build", "identifer"], "description": " Gets information about a build for the service ", "parameter": "\n", "processed_des_para": ["get", "information", "build", "service"]}
{"http_verb": "DELETE ", "uri": " /v1/projects/{projectId}/services/{serviceId}/build/{buildId} ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "build", "build", "identifer"], "description": " Aborts the given service build ", "parameter": "\n", "processed_des_para": ["abort", "give", "service", "build"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/containers ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "containers"], "description": " Gets a list of containers for the given service. ", "parameter": "\n", "processed_des_para": ["get", "list", "container", "give", "service"]}
{"http_verb": "GET  ", "uri": " /v1/projects/{projectId}/services/{serviceId}/deployment ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "deployment"], "description": " Gets information about the deployment of the given service. ", "parameter": "\n", "processed_des_para": ["get", "information", "deployment", "give", "service"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/deployment ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "deployment"], "description": " Updates the deployment settings of the given service. ", "parameter": " \n", "processed_des_para": ["update", "deployment", "setting", "give", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/health-checks ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "health", "checks"], "description": " Lists the health checks for the given service. ", "parameter": "\n", "processed_des_para": ["list", "health", "check", "give", "service"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/health-checks ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "health", "checks"], "description": " Updates health checks for the given service. ", "parameter": " \n", "processed_des_para": ["update", "health", "check", "give", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/logs ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "logs"], "description": " Get logs for a service ", "parameter": " \n", "processed_des_para": ["get", "log", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/metrics ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "metrics"], "description": " Get metrics for a service ", "parameter": " \n", "processed_des_para": ["get", "metric", "service"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/pause ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "pause"], "description": " Pause the given service. ", "parameter": "\n", "processed_des_para": ["pause", "give", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/ports ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "ports"], "description": " Lists the ports for the given service. ", "parameter": "\n", "processed_des_para": ["list", "port", "give", "service"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/ports ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "ports"], "description": " Updates the list of ports for the given service. ", "parameter": "\n", "processed_des_para": ["update", "list", "port", "give", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/pull-requests ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "pull", "requests"], "description": " Gets information about the pull-requests of the given service. ", "parameter": "\n", "processed_des_para": ["get", "information", "pull", "request", "give", "service"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/restart ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "restart"], "description": " Restarts the given service. ", "parameter": "\n", "processed_des_para": ["restart", "give", "service"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/resume ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "resume"], "description": " Resumes the given service. Optionally takes several arguments to override resumed settings. ", "parameter": "\n", "processed_des_para": ["resume", "give", "service", "optionally", "take", "several", "argument", "override", "resume", "setting"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/runtime-environment ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "runtime", "environment"], "description": " \n", "parameter": "", "processed_des_para": []}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/runtime-environment ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "runtime", "environment"], "description": "  Sets the runtime environment for the given service. ", "parameter": "\n", "processed_des_para": ["set", "runtime", "environment", "give", "service"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/services/{serviceId}/runtime-environment/details ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "runtime", "environment", "details"], "description": " Get details about the runtime environment accessible by the given service. Also requires the permission 'Project > Secrets > General > Read' ", "parameter": "\n", "processed_des_para": ["get", "detail", "runtime", "environment", "accessible", "give", "service", "also", "require", "permission", "project", "secret", "general", "read"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/services/{serviceId}/scale ", "processed_uri": ["projects", "project", "identifer", "services", "service", "identifer", "scale"], "description": " Modifies the scaling settings for the given service. ", "parameter": " \n", "processed_des_para": ["modify", "scale", "setting", "give", "service"]}
{"http_verb": "GET ", "uri": " /v1/domains ", "processed_uri": ["domains"], "description": " Lists available domains ", "parameter": " \n", "processed_des_para": ["list", "available", "domain"]}
{"http_verb": "POST ", "uri": " /v1/domains ", "processed_uri": ["domains"], "description": " Registers a new domain ", "parameter": " \n", "processed_des_para": ["register", "new", "domain"]}
{"http_verb": "GET ", "uri": " /v1/domains/{domain} ", "processed_uri": ["domains", "domain"], "description": " Get domain ", "parameter": " domain string required Name of the domain\n", "processed_des_para": ["get", "domain", "domain", "string", "require", "name", "domain"]}
{"http_verb": "DELETE ", "uri": " /v1/domains/{domain} ", "processed_uri": ["domains", "domain"], "description": " Deletes a domain and each of its registered subdomains.", "parameter": " domain string required Name of the domain\n", "processed_des_para": ["delete", "domain", "register", "subdomain", "domain", "string", "require", "name", "domain"]}
{"http_verb": "POST  ", "uri": " /v1/domains/{domain}/import ", "processed_uri": ["domains", "domain", "import"], "description": " Import a certificate for the domain ", "parameter": "  domain string required Name of the domain\n", "processed_des_para": ["import", "certificate", "domain", "domain", "string", "require", "name", "domain"]}
{"http_verb": "POST ", "uri": " /v1/domains/{domain}/subdomains ", "processed_uri": ["domains", "domain", "subdomains"], "description": " Adds a new subdomain to the domain. ", "parameter": " domain string required Name of the domain\n", "processed_des_para": ["add", "new", "subdomain", "domain", "domain", "string", "require", "name", "domain"]}
{"http_verb": "GET ", "uri": " /v1/domains/{domain}/subdomains/{subdomain} ", "processed_uri": ["domains", "domain", "subdomains", "subdomain"], "description": " Gets details about the given subdomain ", "parameter": " domain string required Name of the domain subdomain string required Name of the domain string required Name of the domain subdomain string required Name of the subdomain\n", "processed_des_para": ["get", "detail", "give", "subdomain", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain"]}
{"http_verb": "DELETE ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}", "processed_uri": ["domains", "domain", "subdomains", "subdomain"], "description": " Removes a subdomain from a domain.", "parameter": " domain string required Name of the domain subdomain string required Name of the domain string required Name of the domain subdomain string required Name of the subdomain\n", "processed_des_para": ["remove", "subdomain", "domain", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain"]}
{"http_verb": "POST ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}/assign ", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "assign"], "description": " Assigns a service port to the given subdomain ", "parameter": " domain string required Name of the domain subdomain string required Name of the domain string required Name of the domain subdomain string required Name of the subdomain\n", "processed_des_para": ["assign", "service", "port", "give", "subdomain", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain"]}
{"http_verb": "DELETE ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}/assign", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "assign"], "description": " Removes a subdomain from its assigned service ", "parameter": " domain string required Name of the domain subdomain string required Name of the domain string required Name of the domain subdomain string required Name of the subdomain\n", "processed_des_para": ["remove", "subdomain", "assign", "service", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain"]}
{"http_verb": "POST ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}/cdn/disable ", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "cdn", "disable"], "description": " Removes the CDN integration from the given subdomain ", "parameter": " domain string required Name of the domain subdomain string required Name of the domain string required Name of the domain subdomain string required Name of the subdomain\n", "processed_des_para": ["remove", "cd", "integration", "give", "subdomain", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain"]}
{"http_verb": "POST ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}/cdn/enable ", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "cdn", "enable"], "description": " Enables a CDN integration on the given subdomain", "parameter": " domain string required Name of the domain subdomain string required Name of the domain string required Name of the domain subdomain string required Name of the subdomain\n", "processed_des_para": ["enable", "cd", "integration", "give", "subdomain", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain"]}
{"http_verb": "POST ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}/paths ", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "paths"], "description": " Adds a new path to the subdomain. ", "parameter": " domain string required Name of the domain subdomain string required Name of the domain string required Name of the domain subdomain string required Name of the subdomain\n", "processed_des_para": ["add", "new", "path", "subdomain", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain"]}
{"http_verb": "GET ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}/paths", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "paths"], "description": " List paths for a given subdomain.", "parameter": " domain string required Name of the domain subdomain string required Name of the domain string required Name of the domain subdomain string required Name of the subdomain\n", "processed_des_para": ["list", "path", "give", "subdomain", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain"]}
{"http_verb": "GET ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}/paths/{subdomainPath}", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "paths", "subdomain", "path"], "description": " Get subdomain path details.", "parameter": " domain string required Name of the domain subdomain string required Name of the subdomain subdomainPath string required Name of the path\n", "processed_des_para": ["get", "subdomain", "path", "detail", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain", "subdomain", "path", "string", "require", "name", "path"]}
{"http_verb": "DELETE ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}/paths/{subdomainPath}", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "paths", "subdomain", "path"], "description": " Delete a path. ", "parameter": " domain string required Name of the domain subdomain string required Name of the subdomain subdomainPath string required Name of the path\n", "processed_des_para": ["delete", "path", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain", "subdomain", "path", "string", "require", "name", "path"]}
{"http_verb": "POST ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}/paths/{subdomainPath} ", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "paths", "subdomain", "path"], "description": " Update a subdomain path. ", "parameter": " domain string required Name of the domain subdomain string required Name of the subdomain subdomainPath string required Name of the path\n", "processed_des_para": ["update", "subdomain", "path", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain", "subdomain", "path", "string", "require", "name", "path"]}
{"http_verb": "POST ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}/paths/{subdomainPath}/assign", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "paths", "subdomain", "path", "assign"], "description": " Assign a subdomain path to a port. ", "parameter": " domain string required Name of the domain subdomain string required Name of the subdomain subdomainPath string required Name of the path\n", "processed_des_para": ["assign", "subdomain", "path", "port", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain", "subdomain", "path", "string", "require", "name", "path"]}
{"http_verb": "DELETE ", "uri": "  /v1/domains/{domain}/subdomains/{subdomain}/paths/{subdomainPath}/assign ", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "paths", "subdomain", "path", "assign"], "description": " Unassign a subdomain path to a port.", "parameter": " domain string required Name of the domain subdomain string required Name of the subdomain subdomainPath string required Name of the path\n", "processed_des_para": ["unassign", "subdomain", "path", "port", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain", "subdomain", "path", "string", "require", "name", "path"]}
{"http_verb": "POST ", "uri": " /v1/domains/{domain}/subdomains/{subdomain}/verify ", "processed_uri": ["domains", "domain", "subdomains", "subdomain", "verify"], "description": " Gets details about the given subdomain ", "parameter": " domain string required Name of the domain subdomain string required Name of the subdomain\n", "processed_des_para": ["get", "detail", "give", "subdomain", "domain", "string", "require", "name", "domain", "subdomain", "string", "require", "name", "subdomain"]}
{"http_verb": "POST ", "uri": " /v1/domains/{domain}/verify ", "processed_uri": ["domains", "domain", "verify"], "description": " Attempts to verify the domain ", "parameter": " domain string required Name of the domain \n", "processed_des_para": ["attempt", "verify", "domain", "domain", "string", "require", "name", "domain"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs ", "processed_uri": ["projects", "project", "identifer", "jobs"], "description": " Gets a list of jobs belonging to the project ", "parameter": " projectId string required ID of the projec\n", "processed_des_para": ["get", "list", "job", "belong", "project", "project", "identifer", "string", "require", "projec"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/cron ", "processed_uri": ["projects", "project", "identifer", "jobs", "cron"], "description": " Creates a new cron job ", "parameter": " projectId string required ID of the project\n", "processed_des_para": ["create", "new", "cron", "job", "project", "identifer", "string", "require", "project"]}
{"http_verb": "PUT ", "uri": " /v1/projects/{projectId}/jobs/cron ", "processed_uri": ["projects", "project", "identifer", "jobs", "cron"], "description": " Creates or updates a cron job ", "parameter": " projectId string required ID of the project\n", "processed_des_para": ["create", "update", "cron", "job", "project", "identifer", "string", "require", "project"]}
{"http_verb": "PATCH ", "uri": " /v1/projects/{projectId}/jobs/cron/{jobId} ", "processed_uri": ["projects", "project", "identifer", "jobs", "cron", "job", "identifer"], "description": " Updates a cron job ", "parameter": " projectId string required ID of the project\n", "processed_des_para": ["update", "cron", "job", "project", "identifer", "string", "require", "project"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/manual ", "processed_uri": ["projects", "project", "identifer", "jobs", "manual"], "description": " Creates a new manual job that only runs when initiated via the UI, CLI, API or JS client.", "parameter": " projectId string required ID of the project\n", "processed_des_para": ["create", "new", "manual", "job", "run", "initiate", "via", "cl", "ap", "client", "project", "identifer", "string", "require", "project"]}
{"http_verb": "PUT ", "uri": " /v1/projects/{projectId}/jobs/manual ", "processed_uri": ["projects", "project", "identifer", "jobs", "manual"], "description": " Creates or updates a new manual job that only runs when initiated via the UI, CLI, API or JS client.", "parameter": " projectId string required ID of the project\n", "processed_des_para": ["create", "update", "new", "manual", "job", "run", "initiate", "via", "cl", "ap", "client", "project", "identifer", "string", "require", "project"]}
{"http_verb": "PATCH ", "uri": " /v1/projects/{projectId}/jobs/manual/{jobId} ", "processed_uri": ["projects", "project", "identifer", "jobs", "manual", "job", "identifer"], "description": " Updates a new manual job that only runs when initiated via the UI, CLI, API or JS client.", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["update", "new", "manual", "job", "run", "initiate", "via", "cl", "ap", "client", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId} ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer"], "description": " Gets information about the given job ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "information", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "DELETE ", "uri": " /v1/projects/{projectId}/jobs/{jobId} ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer"], "description": " Deletes the given job.", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["delete", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/branches ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "branches"], "description": " Gets information about the branches of the given job.", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "information", "branch", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/build ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "build"], "description": " Lists builds for the given job. ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["list", "build", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/build ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "build"], "description": " Start a new build for the given job. Given a commit sha, it will build that commit.", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["start", "new", "build", "give", "job", "give", "commit", "sha", "build", "commit", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/build-arguments ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "build", "arguments"], "description": " Gets the build arguments of the given job.", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "build", "argument", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/build-arguments ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "build", "arguments"], "description": " Sets build arguments for the given job. ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["set", "build", "argument", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/build-arguments/details ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "build", "arguments", "details"], "description": " Get details about the build arguments accessible by the given job.", "parameter": " projectId string required ID of the project jobId string requir\n", "processed_des_para": ["get", "detail", "build", "argument", "accessible", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "requir"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/build-logs ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "build", "logs"], "description": " Get logs for a job build ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "log", "job", "build", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/build-metrics ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "build", "metrics"], "description": " Get metrics for a job build ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "metric", "job", "build", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/build-options ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "build", "options"], "description": " Updates the build options for a given job. ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["update", "build", "option", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/build-source ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "build", "source"], "description": " Updates the version control source for a given job. ", "parameter": " projectId string required ID of the project jobId\n", "processed_des_para": ["update", "version", "control", "source", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/build/{buildId}", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "build", "build", "identifer"], "description": " Gets information about a build for the job ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "information", "build", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "DELETE ", "uri": "  /v1/projects/{projectId}/jobs/{jobId}/build/{buildId} ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "build", "build", "identifer"], "description": " Aborts the given job build ", "parameter": " projectId string required ID of the project jobId string required ID of the job buildId string required ID of the job build\n", "processed_des_para": ["abort", "give", "job", "build", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job", "build", "identifer", "string", "require", "job", "build"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/containers ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "containers"], "description": " Gets a list of containers for the given job. ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "list", "container", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/deployment ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "deployment"], "description": " Gets information about the deployment of the given job. ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "information", "deployment", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/deployment", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "deployment"], "description": " Updates the deployment settings of the given job.", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["update", "deployment", "setting", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/health-checks ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "health", "checks"], "description": " Lists the health checks for the given job.", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["list", "health", "check", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/health-checks ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "health", "checks"], "description": " Updates health checks for the given job.", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["update", "health", "check", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/logs ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "logs"], "description": " Get logs for a job", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "log", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/metrics ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "metrics"], "description": " Get metrics for a job", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "metric", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/pause ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "pause"], "description": " Pause the given job. ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["pause", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/pull-requests ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "pull", "requests"], "description": " Gets information about the pull-requests of the given job. ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "information", "pull", "request", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/resume ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "resume"], "description": " Resumes the given job. ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["resume", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/runs ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "runs"], "description": " Fetches run history for the given job ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["fetch", "run", "history", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/runs ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "runs"], "description": " Starts a new job run for the given job ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["start", "new", "job", "run", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/runs/{runId} ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "runs", "run", "identifer"], "description": " Returns data about the given job run", "parameter": " projectId string required ID of the project jobId string required ID of the job runId string required ID of the job run\n", "processed_des_para": ["return", "datum", "give", "job", "run", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job", "run", "identifer", "string", "require", "job", "run"]}
{"http_verb": "DELETE ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/runs/{runId} ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "runs", "run", "identifer"], "description": " Aborts the given job run ", "parameter": " projectId string required ID of the project jobId string required ID of the job runId string required ID of the job run\n", "processed_des_para": ["abort", "give", "job", "run", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job", "run", "identifer", "string", "require", "job", "run"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/runtime-environment ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "runtime", "environment"], "description": " Returns the runtime environment for the given job ", "parameter": " projectId string required ID of the project jobId string required ID of the job \n", "processed_des_para": ["return", "runtime", "environment", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/runtime-environment ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "runtime", "environment"], "description": " Sets the runtime environment for the given job. ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["set", "runtime", "environment", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/runtime-environment/details ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "runtime", "environment", "details"], "description": " Get details about the runtime environment accessible by the given job. ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["get", "detail", "runtime", "environment", "accessible", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/scale ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "scale"], "description": " Modifies the scaling settings for the given job.", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["modify", "scale", "setting", "give", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/settings ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "settings"], "description": " Updates settings for the job ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["update", "setting", "job", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/jobs/{jobId}/suspend ", "processed_uri": ["projects", "project", "identifer", "jobs", "job", "identifer", "suspend"], "description": " Modify cron job to toggle suspending of its schedule. ", "parameter": " projectId string required ID of the project jobId string required ID of the job\n", "processed_des_para": ["modify", "cron", "job", "toggle", "suspend", "schedule", "project", "identifer", "string", "require", "project", "job", "identifer", "string", "require", "job"]}
{"http_verb": "GET ", "uri": " /v1/addon-types ", "processed_uri": ["add", "types"], "description": " Gets information about the available addon types ", "parameter": " \n", "processed_des_para": ["get", "information", "available", "add", "type"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons ", "processed_uri": ["projects", "project", "identifer", "addons"], "description": " Gets a list of addons belonging to the project ", "parameter": " projectId string required ID of the project\n", "processed_des_para": ["get", "list", "addon", "belong", "project", "project", "identifer", "string", "require", "project"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons ", "processed_uri": ["projects", "project", "identifer", "addons"], "description": " Creates a new addon ", "parameter": " projectId string required ID of the project\n", "processed_des_para": ["create", "new", "add", "project", "identifer", "string", "require", "project"]}
{"http_verb": "PUT ", "uri": " /v1/projects/{projectId}/addons ", "processed_uri": ["projects", "project", "identifer", "addons"], "description": " Creates or updates an addon ", "parameter": " projectId string required ID of the project\n", "processed_des_para": ["create", "update", "add", "project", "identifer", "string", "require", "project"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId} ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer"], "description": " projectId string required ID of the project addonId string required ID of the addon\n", "parameter": "", "processed_des_para": ["project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "PATCH ", "uri": " /v1/projects/{projectId}/addons/{addonId} ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer"], "description": " Updates an addon ", "parameter": " projectId string required ID of the project addonId string required ID of the addon\n", "processed_des_para": ["update", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "DELETE ", "uri": " /v1/projects/{projectId}/addons/{addonId} ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer"], "description": " Deletes the given addon.", "parameter": " projectId string required ID of the project addonId string required ID of the addon\n", "processed_des_para": ["delete", "given", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backup-schedules ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backup", "schedules"], "description": " Gets details about an addon's backup schedules", "parameter": " projectId string required ID of the project addonId string required ID of the addon\n", "processed_des_para": ["get", "detail", "addon", "backup", "schedule", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backup-schedules ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backup", "schedules"], "description": " Create a new backup schedule for an addon.", "parameter": " projectId string required ID of the project addonId string required ID of the addon\n", "processed_des_para": ["create", "new", "backup", "schedule", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "DELETE ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backup-schedules/{scheduleId} ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backup", "schedules", "schedule", "identifer"], "description": " Deletes a backup schedule for an addon.", "parameter": " projectId string required ID of the project addonId string required ID of the addon scheduleId string required ID of the backup schedule\n", "processed_des_para": ["delete", "backup", "schedule", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add", "schedule", "identifer", "string", "require", "backup", "schedule"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups"], "description": " Returns a list of backups for the given addon. ", "parameter": " projectId string required ID of the project addonId string required ID of the addon\n", "processed_des_para": ["return", "list", "backup", "given", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups"], "description": " Initiates a backup for the given addon ", "parameter": " projectId string required ID of the project addonId string required ID of the addon\n", "processed_des_para": ["initiate", "backup", "given", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups/{backupId} ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups", "backup", "identifer"], "description": " Gets details about a given backup. ", "parameter": " projectId string required ID of the project addonId string required ID of the addon  backupId string required ID of the backup\n", "processed_des_para": ["get", "detail", "give", "backup", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add", "backup", "identifer", "string", "require", "backup"]}
{"http_verb": "DELETE ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups/{backupId} ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups", "backup", "identifer"], "description": " Deletes a given backup ", "parameter": " projectId string required ID of the project addonId string required ID of the addon  backupId string required ID of the backup\n", "processed_des_para": ["delete", "give", "backup", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add", "backup", "identifer", "string", "require", "backup"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups/{backupId}/abort ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups", "backup", "identifer", "abort"], "description": " Aborts the in progress backup. ", "parameter": " projectId string required ID of the project addonId string required ID of the addon  backupId string required ID of the backup\n", "processed_des_para": ["abort", "progress", "backup", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add", "backup", "identifer", "string", "require", "backup"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups/{backupId}/abort-restore ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups", "backup", "identifer", "abort", "restore"], "description": " Aborts an in-progress backup restore.", "parameter": " projectId string required ID of the project addonId string required ID of the addon  backupId string required ID of the backup\n", "processed_des_para": ["abort", "progress", "backup", "restore", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add", "backup", "identifer", "string", "require", "backup"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups/{backupId}/download-link ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups", "backup", "identifer", "download", "link"], "description": " Generates a temporary download link for downloading the given backup. ", "parameter": " projectId string required ID of the project addonId string required ID of the addon  backupId string required ID of the backup\n", "processed_des_para": ["generate", "temporary", "download", "downloading", "give", "backup", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add", "backup", "identifer", "string", "require", "backup"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups/{backupId}/logs ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups", "backup", "identifer", "logs"], "description": " Get logs for an addon backup ", "parameter": " projectId string required ID of the project addonId string required ID of the addon  backupId string required ID of the backup\n", "processed_des_para": ["get", "log", "add", "backup", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add", "backup", "identifer", "string", "require", "backup"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups/{backupId}/restore ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups", "backup", "identifer", "restore"], "description": " Restores the given addon to the given backup state. ", "parameter": " projectId string required ID of the project addonId string required ID of the addon  backupId string required ID of the backup\n", "processed_des_para": ["restore", "give", "add", "give", "backup", "state", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add", "backup", "identifer", "string", "require", "backup"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups/{backupId}/restores ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups", "backup", "identifer", "restores"], "description": " Gets a list of restores for the given backup.", "parameter": " projectId string required ID of the project addonId string required ID of the addon  backupId string required ID of the backup\n", "processed_des_para": ["get", "list", "restore", "give", "backup", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add", "backup", "identifer", "string", "require", "backup"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups/{backupId}/restores/{restoreId}/logs ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups", "backup", "identifer", "restores", "restore", "identifer", "logs"], "description": " Get logs for an addon restore ", "parameter": " projectId string required ID of the project addonId string required ID of the addon  backupId string required ID of the backup restoreId string required ID of the restore\n", "processed_des_para": ["get", "log", "add", "restore", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add", "backup", "identifer", "string", "require", "backup", "restore", "identifer", "string", "require", "restore"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons/{addonId}/backups/{backupId}/retain ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "backups", "backup", "identifer", "retain"], "description": " Flags a temporary backup generated by a backup schedule to be retained indefinitely rather than being deleted after the expiry date. ", "parameter": " projectId string required ID of the project addonId string required ID of the addon  backupId string required ID of the backup \n", "processed_des_para": ["flag", "temporary", "backup", "generate", "backup", "schedule", "retain", "indefinitely", "rather", "delete", "expiry", "date", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add", "backup", "identifer", "string", "require", "backup"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/containers ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "containers"], "description": " Gets a list of containers for the given addon. ", "parameter": " projectId string required ID of the project addonId string required ID of the addon\n", "processed_des_para": ["get", "list", "container", "give", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/credentials", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "credentials"], "description": "  Returns the credentials for connecting to the given addon.", "parameter": " projectId string required ID of the project addonId string required ID of the addon \n", "processed_des_para": ["return", "credential", "connect", "given", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons/{addonId}/import ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "import"], "description": " Imports a database from an external archive or existing live database.", "parameter": " projectId string required ID of the project addonId string required ID of the addon \n", "processed_des_para": ["import", "database", "external", "archive", "exist", "live", "database", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/logs ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "logs"], "description": " Get logs for an addon", "parameter": " projectId string required ID of the project addonId string required ID of the addon \n", "processed_des_para": ["get", "log", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/metrics ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "metrics"], "description": " Get metrics for an addon ", "parameter": " projectId string required ID of the project addonId string required ID of the addon \n", "processed_des_para": ["get", "metric", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons/{addonId}/network-settings ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "network", "settings"], "description": " Updates the network settings for the addon. ", "parameter": " projectId string required ID of the project addonId string required ID of the addon \n", "processed_des_para": ["update", "network", "setting", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons/{addonId}/pause ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "pause"], "description": " Pause the given addon.", "parameter": " projectId string required ID of the project addonId string required ID of the addon \n", "processed_des_para": ["pause", "given", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons/{addonId}/pitr ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "point", "time", "restore"], "description": " Restores an addon to a specific point in time. ", "parameter": " projectId string required ID of the project addonId string required ID of the addon \n", "processed_des_para": ["restore", "add", "specific", "point", "time", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/addons/{addonId}/pitr-window ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "point", "time", "restore", "window"], "description": " Gets the valid window for performing a point-in-time restore (PITR) on this addon.", "parameter": " projectId string required ID of the project addonId string required ID of the addon \n", "processed_des_para": ["get", "valid", "window", "performing", "point", "time", "restore", "pit", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/addons/{addonId}/reset ", "processed_uri": ["projects", "project", "identifer", "addons", "add", "identifer", "reset"], "description": " Reset the given addon. ", "parameter": " projectId string required ID of the project addonId string required ID of the addon \n", "processed_des_para": ["reset", "given", "add", "project", "identifer", "string", "require", "project", "add", "identifer", "string", "require", "add"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/secrets/{secretId} ", "processed_uri": ["projects", "project", "identifer", "secrets", "secret", "identifer"], "description": " Update a secret ", "parameter": " projectId string required ID of the project secretId string required ID of the secret\n", "processed_des_para": ["update", "secret", "project", "identifer", "string", "require", "project", "secret", "identifer", "string", "require", "secret"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/secrets/{secretId}/addons/{addonId} ", "processed_uri": ["projects", "project", "identifer", "secrets", "secret", "identifer", "addons", "add", "identifer"], "description": " Link an addon to the secret group or edit the settings of the linked addon. ", "parameter": " projectId string required ID of the project secretId string required ID of the secret addonId string required ID of the addon\n", "processed_des_para": ["link", "add", "secret", "group", "edit", "setting", "link", "add", "project", "identifer", "string", "require", "project", "secret", "identifer", "string", "require", "secret", "add", "identifer", "string", "require", "add"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/secrets/{secretId}/addons/{addonId} ", "processed_uri": ["projects", "project", "identifer", "secrets", "secret", "identifer", "addons", "add", "identifer"], "description": " Get details about a given addon link.", "parameter": " projectId string required ID of the project secretId string required ID of the secret addonId string required ID of the addon\n", "processed_des_para": ["get", "detail", "given", "add", "project", "identifer", "string", "require", "project", "secret", "identifer", "string", "require", "secret", "add", "identifer", "string", "require", "add"]}
{"http_verb": "DELETE ", "uri": " /v1/projects/{projectId}/secrets/{secretId}/addons/{addonId} ", "processed_uri": ["projects", "project", "identifer", "secrets", "secret", "identifer", "addons", "add", "identifer"], "description": " Unlinks an addon from the secret group. ", "parameter": " projectId string required ID of the project secretId string required ID of the secret addonId string required ID of the addon\n", "processed_des_para": ["unlink", "add", "secret", "group", "project", "identifer", "string", "require", "project", "secret", "identifer", "string", "require", "secret", "add", "identifer", "string", "require", "add"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/secrets/{secretId}/details ", "processed_uri": ["projects", "project", "identifer", "secrets", "secret", "identifer", "details"], "description": " View a secret with details about its linked addons ", "parameter": " projectId string required ID of the project secretId string required ID of the secret\n", "processed_des_para": ["view", "secret", "detail", "link", "addon", "project", "identifer", "string", "require", "project", "secret", "identifer", "string", "require", "secret"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/volumes ", "processed_uri": ["projects", "project", "identifer", "volumes"], "description": " Gets a list of volumes belonging to the project ", "parameter": " projectId string required ID of the project\n", "processed_des_para": ["get", "list", "volume", "belong", "project", "project", "identifer", "string", "require", "project"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/volumes ", "processed_uri": ["projects", "project", "identifer", "volumes"], "description": " Creates a volume with the specified payload ", "parameter": " projectId string required ID of the project\n", "processed_des_para": ["create", "volume", "specify", "payload", "project", "identifer", "string", "require", "project"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/volumes/{volumeId} ", "processed_uri": ["projects", "project", "identifer", "volumes", "volume", "identifer"], "description": " Retrieve a volume ", "parameter": " projectId string required ID of the project volumeId string required ID of the volume\n", "processed_des_para": ["retrieve", "volume", "project", "identifer", "string", "require", "project", "volume", "identifer", "string", "require", "volume"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/volumes/{volumeId} ", "processed_uri": ["projects", "project", "identifer", "volumes", "volume", "identifer"], "description": " Update volume mounts and storage size ", "parameter": " projectId string required ID of the project volumeId string required ID of the volume\n", "processed_des_para": ["update", "volume", "mount", "storage", "size", "project", "identifer", "string", "require", "project", "volume", "identifer", "string", "require", "volume"]}
{"http_verb": "DELETE ", "uri": " /v1/projects/{projectId}/volumes/{volumeId} ", "processed_uri": ["projects", "project", "identifer", "volumes", "volume", "identifer"], "description": " Deletes this volume and its associated data.", "parameter": " projectId string required ID of the project volumeId string required ID of the volume\n", "processed_des_para": ["delete", "volume", "associate", "datum", "project", "identifer", "string", "require", "project", "volume", "identifer", "string", "require", "volume"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/volumes/{volumeId}/attach ", "processed_uri": ["projects", "project", "identifer", "volumes", "volume", "identifer", "attach"], "description": "Attach a volume", "parameter": " projectId string required ID of the project volumeId string required ID of the volume\n", "processed_des_para": ["attach", "volume", "project", "identifer", "string", "require", "project", "volume", "identifer", "string", "require", "volume"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/volumes/{volumeId}/detach", "processed_uri": ["projects", "project", "identifer", "volumes", "volume", "identifer", "detach"], "description": " Detach a volume ", "parameter": " projectId string required ID of the project volumeId string required ID of the volume\n", "processed_des_para": ["detach", "volume", "project", "identifer", "string", "require", "project", "volume", "identifer", "string", "require", "volume"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/pipelines ", "processed_uri": ["projects", "project", "identifer", "pipelines"], "description": " Lists all pipelines for a project ", "parameter": " projectId string required ID of the project \n", "processed_des_para": ["list", "pipeline", "project", "project", "identifer", "string", "require", "project"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId} ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer"], "description": " Get details about a pipeline ", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline\n", "processed_des_para": ["get", "detail", "pipeline", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/preview-envs ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "preview", "envs"], "description": " Get information about the given preview template. ", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline\n", "processed_des_para": ["get", "information", "give", "preview", "template", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/preview-envs ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "preview", "envs"], "description": " Update a given preview template.", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline\n", "processed_des_para": ["update", "give", "preview", "template", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/preview-envs/previews ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "preview", "envs", "previews"], "description": " Get a list of active preview environments for a template ", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline\n", "processed_des_para": ["get", "list", "active", "preview", "environment", "template", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline"]}
{"http_verb": "DELETE ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/preview-envs/previews/{previewId} ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "preview", "envs", "previews", "preview", "identifer"], "description": " Delete a preview environment generated by a preview template. ", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline previewId string required ID of the preview environment\n", "processed_des_para": ["delete", "preview", "environment", "generate", "preview", "template", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline", "preview", "identifer", "string", "require", "preview", "environment"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/preview-envs/runs ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "preview", "envs", "runs"], "description": " Get a list of preview template runs", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline \n", "processed_des_para": ["get", "list", "preview", "template", "run", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/preview-envs/runs/{templateRunId} ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "preview", "envs", "runs", "template", "run", "identifer"], "description": " Get information about the given preview template run. ", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline templateRunId string required ID of the template run\n", "processed_des_para": ["get", "information", "give", "preview", "template", "run", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline", "template", "run", "identifer", "string", "require", "template", "run"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/release-flows/{stage} ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "release", "flows", "stage"], "description": " Gets details about a release flow", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline stage string required Stage of the pipeline\n", "processed_des_para": ["get", "detail", "release", "flow", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline", "stage", "string", "require", "stage", "pipeline"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/release-flows/{stage} ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "release", "flows", "stage"], "description": " Updates a release flow ", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline stage string required Stage of the pipeline\n", "processed_des_para": ["update", "release", "flow", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline", "stage", "string", "require", "stage", "pipeline"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/release-flows/{stage}/runs ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "release", "flows", "stage", "runs"], "description": " Runs a given release flow with given arguments. This endpoint can be used as part of a CI pipeline to automatically trigger a release process. ", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline stage string required Stage of the pipeline\n", "processed_des_para": ["run", "give", "release", "flow", "give", "argument", "endpoint", "use", "part", "pipeline", "automatically", "trigger", "release", "process", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline", "stage", "string", "require", "stage", "pipeline"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/release-flows/{stage}/runs ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "release", "flows", "stage", "runs"], "description": " Lists runs of a release flow ", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline stage string required Stage of the pipeline\n", "processed_des_para": ["list", "run", "release", "flow", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline", "stage", "string", "require", "stage", "pipeline"]}
{"http_verb": "GET ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/release-flows/{stage}/runs/{runId} ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "release", "flows", "stage", "runs", "run", "identifer"], "description": " Get information about the given release flow run ", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline stage string required Stage of the pipeline runId string required ID of the release flow run\n", "processed_des_para": ["get", "information", "give", "release", "flow", "run", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline", "stage", "string", "require", "stage", "pipeline", "run", "identifer", "string", "require", "release", "flow", "run"]}
{"http_verb": "POST ", "uri": " /v1/projects/{projectId}/pipelines/{pipelineId}/release-flows/{stage}/runs/{runId}/abort ", "processed_uri": ["projects", "project", "identifer", "pipelines", "pipeline", "identifer", "release", "flows", "stage", "runs", "run", "identifer", "abort"], "description": " Abort the given release flow run ", "parameter": " projectId string required ID of the project  pipelineId string required ID of the pipeline stage string required Stage of the pipeline runId string required ID of the release flow run\n", "processed_des_para": ["abort", "give", "release", "flow", "run", "project", "identifer", "string", "require", "project", "pipeline", "identifer", "string", "require", "pipeline", "stage", "string", "require", "stage", "pipeline", "run", "identifer", "string", "require", "release", "flow", "run"]}
{"http_verb": "GET ", "uri": " /v1/templates ", "processed_uri": ["templates"], "description": " Get a list of templates ", "parameter": " \n", "processed_des_para": ["get", "list", "template"]}
{"http_verb": "POST ", "uri": " /v1/templates ", "processed_uri": ["templates"], "description": " Create a template ", "parameter": " \n", "processed_des_para": ["create", "template"]}
{"http_verb": "GET ", "uri": " /v1/templates/{templateId} ", "processed_uri": ["templates", "template", "identifer"], "description": " Get information about the given template. ", "parameter": " templateId string required ID of the template \n", "processed_des_para": ["get", "information", "give", "template", "template", "identifer", "string", "require", "template"]}
{"http_verb": "POST ", "uri": " /v1/templates/{templateId} ", "processed_uri": ["templates", "template", "identifer"], "description": " Update a template ", "parameter": " templateId string required ID of the template\n", "processed_des_para": ["update", "template", "template", "identifer", "string", "require", "template"]}
{"http_verb": "DELETE ", "uri": " /v1/templates/{templateId} ", "processed_uri": ["templates", "template", "identifer"], "description": " Delete a template", "parameter": " templateId string required ID of the template\n", "processed_des_para": ["delete", "template", "template", "identifer", "string", "require", "template"]}
{"http_verb": "POST ", "uri": " /v1/templates/{templateId}/runs ", "processed_uri": ["templates", "template", "identifer", "runs"], "description": " Run a template ", "parameter": " templateId string required ID of the template\n", "processed_des_para": ["run", "template", "template", "identifer", "string", "require", "template"]}
{"http_verb": "GET ", "uri": " /v1/templates/{templateId}/runs ", "processed_uri": ["templates", "template", "identifer", "runs"], "description": " Get a list of template runs ", "parameter": " templateId string required ID of the template\n", "processed_des_para": ["get", "list", "template", "run", "template", "identifer", "string", "require", "template"]}
{"http_verb": "GET ", "uri": " /v1/templates/{templateId}/runs/{templateRunId} ", "processed_uri": ["templates", "template", "identifer", "runs", "template", "run", "identifer"], "description": " Get information about the given template run. ", "parameter": " templateId string required ID of the template templateRunId string required ID of the template run\n", "processed_des_para": ["get", "information", "give", "template", "run", "template", "identifer", "string", "require", "template", "template", "run", "identifer", "string", "require", "template", "run"]}
{"http_verb": "POST ", "uri": " /v1/templates/{templateId}/runs/{templateRunId}/abort ", "processed_uri": ["templates", "template", "identifer", "runs", "template", "run", "identifer", "abort"], "description": " Abort the given template run. ", "parameter": " templateId string required ID of the template templateRunId string required ID of the template run\n", "processed_des_para": ["abort", "give", "template", "run", "template", "identifer", "string", "require", "template", "template", "run", "identifer", "string", "require", "template", "run"]}
{"http_verb": "GET ", "uri": " /v1/integrations/log-sinks ", "processed_uri": ["integrations", "log", "sinks"], "description": " Gets a list of log sinks added to this account. ", "parameter": " \n", "processed_des_para": ["get", "list", "log", "sink", "add", "account"]}
{"http_verb": "POST ", "uri": " /v1/integrations/log-sinks ", "processed_uri": ["integrations", "log", "sinks"], "description": " Creates a new log sink. ", "parameter": " \n", "processed_des_para": ["create", "new", "log", "sink"]}
{"http_verb": "GET ", "uri": " /v1/integrations/log-sinks/{logSinkId} ", "processed_uri": ["integrations", "log", "sinks", "log", "sink", "identifer"], "description": " Gets details about a given log sink. ", "parameter": " logSinkId string required ID of the log sink\n", "processed_des_para": ["get", "detail", "give", "log", "sink", "log", "sink", "identifer", "string", "require", "log", "sink"]}
{"http_verb": "DELETE ", "uri": " /v1/integrations/log-sinks/{logSinkId}", "processed_uri": ["integrations", "log", "sinks", "log", "sink", "identifer"], "description": " Deletes a log sink. ", "parameter": " logSinkId string required ID of the log sink\n", "processed_des_para": ["delete", "log", "sink", "log", "sink", "identifer", "string", "require", "log", "sink"]}
{"http_verb": "POST ", "uri": " /v1/integrations/log-sinks/{logSinkId}/pause ", "processed_uri": ["integrations", "log", "sinks", "log", "sink", "identifer", "pause"], "description": " Pauses a given log sink. ", "parameter": " logSinkId string required ID of the log sink\n", "processed_des_para": ["pauses", "give", "log", "sink", "log", "sink", "identifer", "string", "require", "log", "sink"]}
{"http_verb": "POST ", "uri": " /v1/integrations/log-sinks/{logSinkId}/resume ", "processed_uri": ["integrations", "log", "sinks", "log", "sink", "identifer", "resume"], "description": " Resumes a paused log sink. ", "parameter": " logSinkId string required ID of the log sink\n", "processed_des_para": ["resume", "pause", "log", "sink", "log", "sink", "identifer", "string", "require", "log", "sink"]}
{"http_verb": "POST ", "uri": " /v1/integrations/log-sinks/{logSinkId}/settings ", "processed_uri": ["integrations", "log", "sinks", "log", "sink", "identifer", "settings"], "description": " Updates the settings for a log sink. ", "parameter": " logSinkId string required ID of the log sink\n", "processed_des_para": ["update", "setting", "log", "sink", "log", "sink", "identifer", "string", "require", "log", "sink"]}
{"http_verb": "GET ", "uri": " /v1/integrations/notifications ", "processed_uri": ["integrations", "notifications"], "description": " Lists notification integrations for the authenticated user or team. ", "parameter": "\n", "processed_des_para": ["list", "notification", "integration", "authenticate", "user", "team"]}
{"http_verb": "POST ", "uri": " /v1/integrations/notifications ", "processed_uri": ["integrations", "notifications"], "description": " Create a new notification integration. ", "parameter": " notificationId string required ID of the notification integration\n", "processed_des_para": ["create", "new", "notification", "integration", "notification", "identifer", "string", "require", "notification", "integration"]}
{"http_verb": "GET ", "uri": " /v1/integrations/notifications/{notificationId} ", "processed_uri": ["integrations", "notifications", "notification", "identifer"], "description": " Get details about a notification integration. ", "parameter": " notificationId string required ID of the notification integration\n", "processed_des_para": ["get", "detail", "notification", "integration", "notification", "identifer", "string", "require", "notification", "integration"]}
{"http_verb": "POST ", "uri": " /v1/integrations/notifications/{notificationId} ", "processed_uri": ["integrations", "notifications", "notification", "identifer"], "description": " Updates a notification integration ", "parameter": " notificationId string required ID of the notification integration\n", "processed_des_para": ["update", "notification", "integration", "notification", "identifer", "string", "require", "notification", "integration"]}
{"http_verb": "DELETE ", "uri": " /v1/integrations/notifications/{notificationId} ", "processed_uri": ["integrations", "notifications", "notification", "identifer"], "description": " Deletes a notification integration ", "parameter": " notificationId string required ID of the notification integration\n", "processed_des_para": ["delete", "notification", "integration", "notification", "identifer", "string", "require", "notification", "integration"]}
{"http_verb": "GET ", "uri": " /v1/integrations/registries ", "processed_uri": ["integrations", "registries"], "description": " Lists the container registry credentials saved to this account. Does not display secrets.", "parameter": " \n", "processed_des_para": ["list", "container", "registry", "credential", "save", "account", "display", "secret"]}
{"http_verb": "POST ", "uri": " /v1/integrations/registries ", "processed_uri": ["integrations", "registries"], "description": " Adds a new set of container registry credentials to this account. ", "parameter": " \n", "processed_des_para": ["add", "new", "set", "container", "registry", "credential", "account"]}
{"http_verb": "GET ", "uri": " /v1/integrations/registries/{credentialId} ", "processed_uri": ["integrations", "registries", "credential", "identifer"], "description": " Views a set of registry credential data. ", "parameter": " credentialId string required ID of the registry credential\n", "processed_des_para": ["view", "set", "registry", "credential", "data", "credential", "identifer", "string", "require", "registry", "credential"]}
{"http_verb": "DELETE ", "uri": " /v1/integrations/registries/{credentialId} ", "processed_uri": ["integrations", "registries", "credential", "identifer"], "description": " Deletes a set of registry credential data.", "parameter": " credentialId string required ID of the registry credential\n", "processed_des_para": ["delete", "set", "registry", "credential", "data", "credential", "identifer", "string", "require", "registry", "credential"]}
{"http_verb": "POST ", "uri": " /v1/integrations/registries/{credentialId}/modify ", "processed_uri": ["integrations", "registries", "credential", "identifer", "modify"], "description": " Updates a set of registry credential data.", "parameter": " credentialId string required ID of the registry credential\n", "processed_des_para": ["update", "set", "registry", "credential", "data", "credential", "identifer", "string", "require", "registry", "credential"]}
{"http_verb": "GET ", "uri": " /v1/integrations/vcs Lists linked version control providers ", "processed_uri": ["integrations", "version", "control", "providers", "lists", "linked", "version", "control", "providers"], "description": " \n", "parameter": "", "processed_des_para": []}
{"http_verb": "POST ", "uri": " /v1/integrations/vcs/custom/{customVCSId}/token/{vcsLinkId} ", "processed_uri": ["integrations", "version", "control", "providers", "custom", "custom", "version", "control", "providers", "identifer", "token", "version", "control", "providers", "link", "identifer"], "description": " Generate a token for a specific VCS link. ", "parameter": " customVCSId string required ID of the custom VCS vcsLinkId string required ID of the version control link\n", "processed_des_para": ["generate", "token", "specific", "vc", "custom", "version", "control", "provider", "identifer", "string", "require", "custom", "vc", "version", "control", "provider", "link", "identifer", "string", "require", "version", "control"]}
{"http_verb": "GET ", "uri": " /v1/integrations/vcs/repos ", "processed_uri": ["integrations", "version", "control", "providers", "repositories"], "description": " Gets a list of repositories accessible to this account ", "parameter": " \n", "processed_des_para": ["get", "list", "repository", "accessible", "account"]}
{"http_verb": "GET ", "uri": " /v1/integrations/vcs/repos/{vcsService}/{repositoryOwner}/{repositoryName}/branches ", "processed_uri": ["integrations", "version", "control", "providers", "repositories", "version", "control", "providers", "service", "repository", "owner", "repository", "name", "branches"], "description": " Gets a list of branches for the repo ", "parameter": " \n", "processed_des_para": ["get", "list", "branch", "repository"]}
{"http_verb": "GET ", "uri": " /v1/cloud-providers ", "processed_uri": ["cloud", "providers"], "description": " Lists supported cloud providers ", "parameter": "  \n", "processed_des_para": ["list", "support", "cloud", "provider"]}
{"http_verb": "GET ", "uri": " /v1/cloud-providers/clusters ", "processed_uri": ["cloud", "providers", "clusters"], "description": " Lists clusters for the authenticated user or team. ", "parameter": " \n", "processed_des_para": ["list", "cluster", "authenticate", "user", "team"]}
{"http_verb": "POST ", "uri": " /v1/cloud-providers/clusters ", "processed_uri": ["cloud", "providers", "clusters"], "description": " Creates a new cluster. ", "parameter": " \n", "processed_des_para": ["create", "new", "cluster"]}
{"http_verb": "GET ", "uri": " /v1/cloud-providers/clusters/{clusterId} << Get information about the given cluster ", "processed_uri": ["cloud", "providers", "clusters", "cluster", "identifer", "get", "information", "given", "cluster"], "description": " clusterId string required ID of the cluster \n", "parameter": "", "processed_des_para": ["cluster", "identifer", "string", "require", "cluster"]}
{"http_verb": "POST ", "uri": " /v1/cloud-providers/clusters/{clusterId} ", "processed_uri": ["cloud", "providers", "clusters", "cluster", "identifer"], "description": " Update an existing cluster. ", "parameter": " clusterId string required ID of the cluster \n", "processed_des_para": ["update", "exist", "cluster", "cluster", "identifer", "string", "require", "cluster"]}
{"http_verb": "DELETE ", "uri": " /v1/cloud-providers/clusters/{clusterId} ", "processed_uri": ["cloud", "providers", "clusters", "cluster", "identifer"], "description": " Delete the given cluster. Fails if the cluster has associated projects.", "parameter": " clusterId string required ID of the cluster \n", "processed_des_para": ["delete", "give", "cluster", "fail", "cluster", "associate", "project", "cluster", "identifer", "string", "require", "cluster"]}
{"http_verb": "GET ", "uri": " /v1/cloud-providers/clusters/{clusterId}/nodes ", "processed_uri": ["cloud", "providers", "clusters", "cluster", "identifer", "nodes"], "description": " Get a list of nodes for the given cluster ", "parameter": " clusterId string required ID of the cluster \n", "processed_des_para": ["get", "list", "node", "give", "cluster", "cluster", "identifer", "string", "require", "cluster"]}
{"http_verb": "POST ", "uri": " /v1/cloud-providers/clusters/{clusterId}/nodes/{nodeId}/cordon ", "processed_uri": ["cloud", "providers", "clusters", "cluster", "identifer", "nodes", "node", "identifer", "cordon"], "description": " Cordon a node on the cluster to prevent new pods from scheduling on it. ", "parameter": " clusterId string required ID of the cluster nodeId string required ID of the node\n", "processed_des_para": ["cordon", "node", "cluster", "prevent", "new", "pod", "scheduling", "cluster", "identifer", "string", "require", "cluster", "node", "identifer", "string", "require", "node"]}
{"http_verb": "POST ", "uri": " /v1/cloud-providers/clusters/{clusterId}/nodes/{nodeId}/drain ", "processed_uri": ["cloud", "providers", "clusters", "cluster", "identifer", "nodes", "node", "identifer", "drain"], "description": " Drain a node by evicting all running pods. ", "parameter": " clusterId string required ID of the cluster nodeId string required ID of the node\n", "processed_des_para": ["drain", "node", "evict", "run", "pod", "cluster", "identifer", "string", "require", "cluster", "node", "identifer", "string", "require", "node"]}
{"http_verb": "GET ", "uri": " /v1/cloud-providers/docker-registries ", "processed_uri": ["cloud", "providers", "docker", "registries"], "description": " Lists docker registries for the authenticated user or team. \n", "parameter": "", "processed_des_para": ["list", "docker", "registry", "authenticate", "user", "team"]}
{"http_verb": "POST ", "uri": " /v1/cloud-providers/docker-registries ", "processed_uri": ["cloud", "providers", "docker", "registries"], "description": " Creates a new docker registry. ", "parameter": " \n", "processed_des_para": ["create", "new", "docker", "registry"]}
{"http_verb": "GET ", "uri": " /v1/cloud-providers/docker-registries/{registryId} ", "processed_uri": ["cloud", "providers", "docker", "registries", "registry", "identifer"], "description": " Get information about the given docker registry ", "parameter": " registryId string required ID of the docker registry\n", "processed_des_para": ["get", "information", "give", "docker", "registry", "registry", "identifer", "string", "require", "docker", "registry"]}
{"http_verb": "DELETE ", "uri": " /v1/cloud-providers/docker-registries/{registryId} ", "processed_uri": ["cloud", "providers", "docker", "registries", "registry", "identifer"], "description": " Delete the given docker registry. Fails if the docker registry is associated with existing clusters. ", "parameter": " registryId string required ID of the docker registry\n", "processed_des_para": ["delete", "give", "docker", "registry", "fail", "docker", "registry", "associate", "exist", "cluster", "registry", "identifer", "string", "require", "docker", "registry"]}
{"http_verb": "GET ", "uri": " /v1/cloud-providers/integrations ", "processed_uri": ["cloud", "providers", "integrations"], "description": " Lists integrations for the authenticated user or team. ", "parameter": " \n", "processed_des_para": ["list", "integration", "authenticate", "user", "team"]}
{"http_verb": "POST ", "uri": " /v1/cloud-providers/integrations ", "processed_uri": ["cloud", "providers", "integrations"], "description": " Creates a new integration. ", "parameter": " \n", "processed_des_para": ["create", "new", "integration"]}
{"http_verb": "GET ", "uri": " /v1/cloud-providers/integrations/{integrationId} ", "processed_uri": ["cloud", "providers", "integrations", "integration", "identifer"], "description": " Get information about the given integration ", "parameter": " integrationId string required ID of the provider integration\n", "processed_des_para": ["get", "information", "give", "integration", "integration", "identifer", "string", "require", "provider", "integration"]}
{"http_verb": "POST ", "uri": " /v1/cloud-providers/integrations/{integrationId} ", "processed_uri": ["cloud", "providers", "integrations", "integration", "identifer"], "description": " Update information about the given integration ", "parameter": " integrationId string required ID of the provider integration\n", "processed_des_para": ["update", "information", "give", "integration", "integration", "identifer", "string", "require", "provider", "integration"]}
{"http_verb": "DELETE ", "uri": " /v1/cloud-providers/integrations/{integrationId} ", "processed_uri": ["cloud", "providers", "integrations", "integration", "identifer"], "description": " Delete the given integration. Fails if the integration is associated with existing clusters. ", "parameter": " integrationId string required ID of the provider integration\n", "processed_des_para": ["delete", "give", "integration", "fail", "integration", "associate", "exist", "cluster", "integration", "identifer", "string", "require", "provider", "integration"]}
{"http_verb": "GET ", "uri": " /v1/cloud-providers/node-types ", "processed_uri": ["cloud", "providers", "node", "types"], "description": " Lists supported cloud provider node types ", "parameter": " \n", "processed_des_para": ["list", "support", "cloud", "provider", "node", "type"]}
{"http_verb": "GET ", "uri": " /v1/cloud-providers/regions ", "processed_uri": ["cloud", "providers", "regions"], "description": " Lists supported cloud provider regions ", "parameter": " \n", "processed_des_para": ["list", "support", "cloud", "provider", "region"]}
{"http_verb": "GET ", "uri": " /v1/tags ", "processed_uri": ["tags"], "description": " List the resource tags for this entity. ", "parameter": " \n", "processed_des_para": ["list", "resource", "tag", "entity"]}
{"http_verb": "POST ", "uri": " /v1/tags ", "processed_uri": ["tags"], "description": " Add a new resource tag for this entity. ", "parameter": " \n", "processed_des_para": ["add", "new", "resource", "tag", "entity"]}
{"http_verb": "PUT ", "uri": " /v1/tags ", "processed_uri": ["tags"], "description": " Update or create a resource tag. ", "parameter": " resourceTagId string required ID of the tag\n", "processed_des_para": ["update", "create", "resource", "tag", "resource", "tag", "identifer", "string", "require", "tag"]}
{"http_verb": "GET ", "uri": " /v1/tags/{resourceTagId} ", "processed_uri": ["tags", "resource", "tag", "identifer"], "description": " View details for a given resource tag. ", "parameter": " resourceTagId string required ID of the tag\n", "processed_des_para": ["view", "detail", "give", "resource", "tag", "resource", "tag", "identifer", "string", "require", "tag"]}
{"http_verb": "PATCH ", "uri": " /v1/tags/{resourceTagId} ", "processed_uri": ["tags", "resource", "tag", "identifer"], "description": "  Patch a resource tag. ", "parameter": " resourceTagId string required ID of the tag\n", "processed_des_para": ["patch", "resource", "tag", "resource", "tag", "identifer", "string", "require", "tag"]}
{"http_verb": "DELETE ", "uri": " /v1/tags/{resourceTagId} ", "processed_uri": ["tags", "resource", "tag", "identifer"], "description": " Delete a resource tag. ", "parameter": " resourceTagId string required ID of the tag\n", "processed_des_para": ["delete", "resource", "tag", "resource", "tag", "identifer", "string", "require", "tag"]}
{"http_verb": "GET ", "uri": " /v1/billing/invoices ", "processed_uri": ["billing", "invoices"], "description": " Get a list of past invoices ", "parameter": " \n", "processed_des_para": ["get", "list", "past", "invoice"]}
{"http_verb": "GET ", "uri": " /v1/billing/invoices/details ", "processed_uri": ["billing", "invoices", "details"], "description": " Get details about an invoice. ", "parameter": " ", "processed_des_para": ["get", "detail", "invoice"]}
