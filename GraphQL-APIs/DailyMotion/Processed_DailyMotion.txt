{"http_verb": "GET ", "uri": " /Metrics\t", "processed_uri": ["metrics"], "description": " Measurements related to activity", "parameter": " \n", "processed_des_para": ["measurement", "relate", "activity"]}
{"http_verb": "GET ", "uri": " /Dimensions ", "processed_uri": ["dimensions"], "description": " Organize metrics across common criteria", "parameter": "\n", "processed_des_para": ["organize", "metric", "across", "common", "criterion"]}
{"http_verb": "POST ", "uri": " /Filters ", "processed_uri": ["filters"], "description": " Scope down the result set ", "parameter": "\n", "processed_des_para": ["scope", "result", "set"]}
{"http_verb": "GET ", "uri": " Product\t", "processed_uri": ["product"], "description": " Targets a specific product usage. On Dailymotion, data is collected and attributed against three different kinds of product usage: data generated on your content, on your embeds or on your claims. ", "parameter": " \n", "processed_des_para": ["target", "specific", "product", "usage", "dailymotion", "datum", "collect", "attribute", "three", "different", "kind", "product", "usage", "datum", "generate", "content", "embed", "claim"]}
{"http_verb": "GET ", "uri": " /METRICS/VIEWS ", "processed_uri": ["metrics", "view"], "description": " Number of views ", "parameter": " \n", "processed_des_para": ["number", "view"]}
{"http_verb": "GET ", "uri": " /METRICS/TIME_WATCHED_SECONDS ", "processed_uri": ["metrics", "tim", "watche", "second"], "description": " Time watched in seconds", "parameter": " \n", "processed_des_para": ["time", "watch", "second"]}
{"http_verb": "GET ", "uri": " /METRICS/VIEW_THROUGH_RATE ", "processed_uri": ["metrics", "vie", "throug", "rat"], "description": " Video view through rate", "parameter": " \n", "processed_des_para": ["video", "view", "rate"]}
{"http_verb": "GET ", "uri": " /METRICS/UPLOADS\t", "processed_uri": ["metrics", "upload"], "description": " Number of videos uploaded", "parameter": " \n", "processed_des_para": ["number", "video", "upload"]}
{"http_verb": "GET ", "uri": " /METRICS/LIVE_VIEWERS ", "processed_uri": ["metrics", "liv", "viewer"], "description": " Live viewers", "parameter": " \n", "processed_des_para": ["live", "viewer"]}
{"http_verb": "GET ", "uri": " /METRICS/LIVE_TIME_WATCHED_SECONDS ", "processed_uri": ["metrics", "liv", "tim", "watche", "second"], "description": " Live time watched", "parameter": " \n", "processed_des_para": ["live", "time", "watch"]}
{"http_verb": "GET ", "uri": " /METRICS/ESTIMATED_EARNINGS_USD\t", "processed_uri": ["metrics", "estimate", "earning", "us"], "description": " Estimated earnings in USD", "parameter": " \n", "processed_des_para": ["estimate", "earning", "we"]}
{"http_verb": "GET ", "uri": " /METRICS/ESTIMATED_EARNINGS_EUR\t", "processed_uri": ["metrics", "estimate", "earning", "eu"], "description": " Estimated earnings in EUR", "parameter": " \n", "processed_des_para": ["estimate", "earning", "eu"]}
{"http_verb": "GET ", "uri": " /METRICS/TOTAL_INVENTORY\t", "processed_uri": ["metrics", "tota", "inventor"], "description": " Total ad opportunities generated by your content or your embeds", "parameter": " \n", "processed_des_para": ["total", "ad", "opportunity", "generate", "content", "embed"]}
{"http_verb": "GET ", "uri": " /METRICS/NO_ADS\t", "processed_uri": ["metrics", "ad"], "description": " Ad opportunities identified to be not eligible for monetization", "parameter": " \n", "processed_des_para": ["ad", "opportunity", "identify", "eligible", "monetization"]}
{"http_verb": "GET ", "uri": " /METRICS/NO_AD_RATE ", "processed_uri": ["metrics", "rat"], "description": " Share of ad opportunities not eligible for monetizationNo ad rate = No ads / Total inventory", "parameter": " \n", "processed_des_para": ["share", "ad", "opportunity", "eligible", "monetization", "ad", "rate", "ad", "total", "inventory"]}
{"http_verb": "GET ", "uri": " /METRICS/SELLABLE_INVENTORY ", "processed_uri": ["metrics", "sellabl", "inventor"], "description": " Ad opportunities available for monetization", "parameter": " \n", "processed_des_para": ["ad", "opportunity", "available", "monetization"]}
{"http_verb": "GET ", "uri": " /METRICS/NB_IMPRESSION ", "processed_uri": ["metrics", "impressio"], "description": " Total number of ads displayed", "parameter": " \n", "processed_des_para": ["total", "number", "ad", "display"]}
{"http_verb": "GET ", "uri": " /METRICS/FILL_RATE ", "processed_uri": ["metrics", "fil", "rat"], "description": " Share of sellable inventories filled with an ad impression Fill rate = Ad impressions / Sellable inventory", "parameter": " \n", "processed_des_para": ["share", "sellable", "inventory", "fill", "ad", "impression", "fill", "rate", "ad", "impression", "sellable", "inventory"]}
{"http_verb": "GET ", "uri": " /METRICS/NB_MISSED_IMPRESSION ", "processed_uri": ["metrics", "misse", "impressio"], "description": " Monetizable ad opportunities that were not filled with an ad impression. It includes ad errors, timeouts and nofills ", "parameter": "  Missed impressions = Sellable inventory – impressions\n", "processed_des_para": ["monetizable", "ad", "opportunity", "fill", "ad", "impression", "include", "ad", "error", "timeout", "nofill", "miss", "impression", "sellable", "inventory", "impression"]}
{"http_verb": "GET ", "uri": " /METRICS/VIEWABILITY_SCORE ", "processed_uri": ["metrics", "viewabilit", "scor"], "description": " Share of ad impressions with high viewability ", "parameter": " Viewability score = Ad impressions with high viewability / Ad impressions\n", "processed_des_para": ["share", "ad", "impression", "high", "viewability", "viewability", "score", "ad", "impression", "high", "viewability", "ad", "impression"]}
{"http_verb": "GET ", "uri": " /METRICS/GDPR_FULL_CONSENT_SCORE\t", "processed_uri": ["metrics", "gdp", "ful", "consen", "scor"], "description": " Share of users who granted their full consent for the processing of their personal data ", "parameter": " GDPR full consent score = GDPR full consent / Ad impressions\n", "processed_des_para": ["share", "user", "grant", "full", "consent", "process", "personal", "datum", "gdp", "full", "consent", "score", "gdp", "full", "consent", "ad", "impression"]}
{"http_verb": "GET ", "uri": " /METRICS/VTR_SCORE ", "processed_uri": ["metrics", "vt", "scor"], "description": " Share of users who watched a full ad ", "parameter": " VTR score = Ad view completed / Ad impressions\n", "processed_des_para": ["share", "user", "watch", "full", "ad", "vt", "score", "ad", "view", "complete", "ad", "impression"]}
{"http_verb": "GET ", "uri": " /DIMENSION/CHANNEL_SLUG ", "processed_uri": ["dimension", "channe", "slu"], "description": " Channel owner’s channel URL Slug ", "parameter": " Note: value is case sensitive – make sure to input accurate lower and upper cases\n", "processed_des_para": ["channel", "owner", "channel", "ur", "slug", "note", "value", "case", "sensitive", "make", "sure", "input", "accurate", "low", "upper", "case"]}
{"http_verb": "GET ", "uri": " /DIMENSION/VIDEO_OWNER_CHANNEL_SLUG\tContent owner’s channel URL Slug ", "processed_uri": ["dimension", "vide", "owne", "channe", "slu", "content", "owners", "channel", "ur", "slug"], "description": " Note: value is case sensitive – make sure to input accurate lower and upper cases\n", "parameter": "", "processed_des_para": ["note", "value", "case", "sensitive", "make", "sure", "input", "accurate", "low", "upper", "case"]}
{"http_verb": "GET ", "uri": " /DIMENSION/VIDEO_ID\t", "processed_uri": ["dimension", "vide"], "description": " Video ID", "parameter": "\n", "processed_des_para": ["video"]}
{"http_verb": "GET ", "uri": " /DIMENSION/VIDEO_TITLE", "processed_uri": ["dimension", "vide", "title"], "description": " Title of the video ", "parameter": "\n", "processed_des_para": ["title", "video"]}
{"http_verb": "GET ", "uri": " /DIMENSION/MEDIA_TYPE\t", "processed_uri": ["dimension", "medi", "typ"], "description": " Type of video: LIVE or VIDEO", "parameter": "\n", "processed_des_para": ["type", "video", "liv", "vide"]}
{"http_verb": "GET ", "uri": " /DIMENSION/VISITOR_DOMAIN_GROUP\t", "processed_uri": ["dimension", "visito", "domai", "grou"], "description": " Visitor domain", "parameter": "\n", "processed_des_para": ["visitor", "domain"]}
{"http_verb": "GET ", "uri": " /DIMENSION/VISITOR_SUBDOMAIN ", "processed_uri": ["dimension", "visito", "subdomai"], "description": " Visitor subdomain ", "parameter": " \n", "processed_des_para": ["visitor", "subdomain"]}
{"http_verb": "GET ", "uri": " /DIMENSION/VISITOR_PAGE_URL ", "processed_uri": ["dimension", "visito", "pag", "ur"], "description": " Visitor page URL ", "parameter": " \n", "processed_des_para": ["visitor", "page", "ur"]}
{"http_verb": "GET ", "uri": " /DIMENSION/VISITOR_COUNTRY ", "processed_uri": ["dimension", "visito", "countr"], "description": " Visitor country ", "parameter": " \n", "processed_des_para": ["visitor", "country"]}
{"http_verb": "GET ", "uri": " /DIMENSION/VISITOR_DEVICE_TYPE ", "processed_uri": ["dimension", "visito", "devic", "typ"], "description": " Visitor device type ", "parameter": " \n", "processed_des_para": ["visitor", "device", "type"]}
{"http_verb": "GET ", "uri": " /DIMENSION/MONETIZATION_TYPE ", "processed_uri": ["dimension", "monetizatio", "typ"], "description": " Monetization category: video or website ", "parameter": " \n", "processed_des_para": ["monetization", "category", "video", "website"]}
{"http_verb": "GET ", "uri": " /DIMENSION/INVENTORY_POSITION ", "processed_uri": ["dimension", "inventor", "positio"], "description": " Position of the ad opportunity. Usually one of the following – preroll, midroll, postroll, ivv ", "parameter": " \n", "processed_des_para": ["position", "ad", "opportunity", "usually", "one", "follow", "preroll", "midroll", "postroll", "ivv"]}
{"http_verb": "GET ", "uri": " /DIMENSION/OUTCOME ", "processed_uri": ["dimension", "outcom"], "description": " Breakdown of missed impression by category ", "parameter": " \n", "processed_des_para": ["break", "miss", "impression", "category"]}
{"http_verb": "GET ", "uri": " /DIMENSION/NOAD_REASON_READABLE ", "processed_uri": ["dimension", "noa", "reaso", "readabl"], "description": " No ads grouped by why they were not available for monetization. ", "parameter": " Click here to learn more about no ad reason\n", "processed_des_para": ["ad", "group", "available", "monetization", "click", "learn", "ad", "reason"]}
{"http_verb": "GET ", "uri": " /DIMENSION/AD_ERROR_READABLE\t", "processed_uri": ["dimension", "erro", "readabl"], "description": " Ad errors returned by our advertising system for the selected metric ", "parameter": " \n", "processed_des_para": ["ad", "error", "return", "advertising", "system", "select", "metric"]}
{"http_verb": "GET ", "uri": " /DIMENSION/AD_ERROR_CODE\t", "processed_uri": ["dimension", "erro", "cod"], "description": " Ad error code returned by our advertising system for the selected metric ", "parameter": " \n", "processed_des_para": ["ad", "error", "code", "return", "advertising", "system", "select", "metric"]}
{"http_verb": "GET ", "uri": " /DIMENSION/BUYER\t", "processed_uri": ["dimension", "buye"], "description": " Potential and actual buyers of the inventory ", "parameter": " \n", "processed_des_para": ["potential", "actual", "buyer", "inventory"]}
{"http_verb": "GET ", "uri": " /DIMENSION/BUYER_TYPE\t ", "processed_uri": ["dimension", "buye", "typ"], "description": " Type of buyer of the inventory. Usually either P1 or Dailymotion ", "parameter": " \n", "processed_des_para": ["type", "buyer", "inventory", "usually", "either", "dailymotion"]}
{"http_verb": "GET ", "uri": " /DIMENSION/ACTION\t ", "processed_uri": ["dimension", "actio"], "description": " Action defines how a view or inventory was generated by clarifying the stakeholders involved ", "parameter": " \n", "processed_des_para": ["action", "define", "view", "inventory", "generate", "clarify", "stakeholder", "involve"]}
{"http_verb": "GET ", "uri": " /DIMENSION/PLAYER_ID\t", "processed_uri": ["dimension", "playe"], "description": " ID(s) of the player(s) used to play your content. The ID(s) listed can be yours or from third parties. ", "parameter": " \n", "processed_des_para": ["ds", "player", "use", "play", "content", "ds", "list", "third", "party"]}
{"http_verb": "GET ", "uri": " /DIMENSION/PLAYER_TITLE\t", "processed_uri": ["dimension", "playe", "titl"], "description": " Title(s) of the player(s) used to play your content. The title(s) listed can be yours or from third parties. ", "parameter": " \n", "processed_des_para": ["title", "player", "use", "play", "content", "title", "list", "third", "party"]}
{"http_verb": "GET ", "uri": " /DIMENSION/PLAYLIST_ID\t", "processed_uri": ["dimension", "playlis"], "description": " ID(s) of the playlist(s) used to play your content. The ID(s) listed can be yours or from third parties. ", "parameter": " \n", "processed_des_para": ["ds", "playlist", "use", "play", "content", "ds", "list", "third", "party"]}
{"http_verb": "GET ", "uri": " /DIMENSION/PLAYLIST_TITLE\t", "processed_uri": ["dimension", "playlis", "titl"], "description": " Title(s) of the playlist(s) used to play your content. The title(s) listed can be yours or from third parties. ", "parameter": " \n", "processed_des_para": ["title", "playlist", "use", "play", "content", "title", "list", "third", "party"]}
{"http_verb": "GET ", "uri": " /DIMENSION/VIDEO_POSITION\t", "processed_uri": ["dimension", "vide", "positio"], "description": " Position of the video within a playlist CONTENT_TAG\tBreakdown the data by each tag specified on content. ", "parameter": "\n", "processed_des_para": ["position", "video", "within", "playlist", "conten", "ta", "break", "data", "tag", "specify", "content"]}
{"http_verb": "GET ", "uri": " /DIMENSION/CONTENT_TAG_LIST\t", "processed_uri": ["dimension", "conten", "ta", "lis"], "description": " Comma separated list of tags specified on content ", "parameter": "\n", "processed_des_para": ["comma", "separate", "list", "tag", "specify", "content"]}
{"http_verb": "GET ", "uri": " /filters/channelSlug\t", "processed_uri": ["filters", "channel", "slug"], "description": " Limits the result set to a specific channel ", "parameter": " \n", "processed_des_para": ["limit", "result", "set", "specific", "channel"]}
{"http_verb": "GET ", "uri": " /filters/videoOwnerChannelSlug ", "processed_uri": ["filters", "video", "owner", "channel", "slug"], "description": " Limits the result set to a specific video owner channel ", "parameter": "\n", "processed_des_para": ["limit", "result", "set", "specific", "video", "owner", "channel"]}
{"http_verb": "GET ", "uri": " /filtersrs/mediaType\t", "processed_uri": ["filtersrs", "media", "type"], "description": " Limits the result set to a specific media type: LIVE or VIDEO ", "parameter": " \t\n", "processed_des_para": ["limit", "result", "set", "specific", "medium", "type", "liv", "vide"]}
{"http_verb": "GET ", "uri": " /filters/visitorDomainGroup ", "processed_uri": ["filters", "visitor", "domain", "group"], "description": " Limits the result set to a specific visitor domain group ", "parameter": " \n", "processed_des_para": ["limit", "result", "set", "specific", "visitor", "domain", "group"]}
{"http_verb": "GET ", "uri": " /filters/monetizationType ", "processed_uri": ["filters", "monetization", "type"], "description": " Limits the monetization category to either Video Monetization or Website Monetization\t", "parameter": " \n", "processed_des_para": ["limit", "monetization", "category", "either", "video", "monetization", "website", "monetization"]}
{"http_verb": "GET ", "uri": " /PRODUCTS/CONTENT > This is the Default value if product is not specified. ", "processed_uri": ["products", "conten", "default", "value", "product", "specified"], "description": " \n", "parameter": "", "processed_des_para": []}
{"http_verb": "GET ", "uri": " /PRODUCTS/EMBED\t", "processed_uri": ["products", "embe"], "description": " Get data only for embeds that belong to this Partner account ", "parameter": " \n", "processed_des_para": ["get", "datum", "embed", "belong", "partner", "account"]}
{"http_verb": "GET ", "uri": " /PRODUCTS/CLAIM\t", "processed_uri": ["products", "clai"], "description": " Get data only for claims that belong to this Partner account ", "parameter": " \n", "processed_des_para": ["get", "data", "claim", "belong", "partner", "account"]}
{"http_verb": "GET ", "uri": " /PRODUCTS/ALL ", "processed_uri": ["products", "al"], "description": " Get data only for content, embeds and claims that belong to this Partner account ", "parameter": " ", "processed_des_para": ["get", "datum", "content", "embed", "claim", "belong", "partner", "account"]}
