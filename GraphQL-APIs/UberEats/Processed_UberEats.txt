{"http_verb": "POST ", "uri": " /oauth/v2/token ", "processed_uri": ["authentication", "token"], "description": " The Eats API supports OAuth 2.0. ", "parameter": "\n", "processed_des_para": ["eat", "ap", "support", "authentication"]}
{"http_verb": "POST ", "uri": " v1/eats/stores/{store_id}/pos_data ", "processed_uri": ["eats", "stores", "store", "identification", "pos", "data"], "description": " Link application with a location within Uber's platform. Note that the token for this endpoint requires the eats.pos_provisioning scope. For generating a token with this scope, please refer to the Authentication and Integration Activation Guide for more information. ", "parameter": "store_id required string Example: 1d2b3c4e-5f6a-7890-ab12-c3d4e5f67890 ID of the store \n", "processed_des_para": ["link", "application", "location", "within", "uber", "platform", "note", "token", "endpoint", "require", "eatspos", "provision", "scope", "generate", "token", "scope", "please", "refer", "authentication", "integration", "activation", "guide", "information", "store", "identification", "require", "string", "example", "ab", "store"]}
{"http_verb": "PATCH ", "uri": " v1/eats/stores/{store_id}/pos_data ", "processed_uri": ["eats", "stores", "store", "identification", "pos", "data"], "description": " Update an integration's configuration. Note that the token for this endpoint requires the eats.store scope. Configurations can only be updated for locations which you are already associated. ", "parameter": " store_id required string Example: 1d2b3c4e-5f6a-7890-ab12-c3d4e5f67890 ID of the store\n", "processed_des_para": ["update", "integration", "configuration", "note", "token", "endpoint", "require", "eatsstore", "scope", "configuration", "update", "location", "already", "associate", "store", "identification", "require", "string", "example", "ab", "store"]}
{"http_verb": "GET ", "uri": " /v1/eats/stores/{store_id}/pos_data ", "processed_uri": ["eats", "stores", "store", "identification", "pos", "data"], "description": " Retrieves a location configuration that is pertinent to your application. ", "parameter": " store_id required string Example: 1d2b3c4e-5f6a-7890-ab12-c3d4e5f67890 ID of the store \n", "processed_des_para": ["retrieve", "location", "configuration", "pertinent", "application", "store", "identification", "require", "string", "example", "ab", "store"]}
{"http_verb": "DELETE ", "uri": " /v1/eats/stores/{store_id}/pos_data ", "processed_uri": ["eats", "stores", "store", "identification", "pos", "data"], "description": " Removes your application configuration from a store and removes access for your developer token. ", "parameter": " store_id required string Example: 1d2b3c4e-5f6a-7890-ab12-c3d4e5f67890 ID of the store\n", "processed_des_para": ["remove", "application", "configuration", "store", "remove", "access", "developer", "token", "store", "identification", "require", "string", "example", "ab", "store"]}
{"http_verb": "GET ", "uri": " /v1/delivery/stores ", "processed_uri": ["delivery", "stores"], "description": " This endpoint allows a partner to enumerate the stores that this token is authorized against. Tokens generated via client_credentials grant will return stores linked to your client ID. Tokens generated via authorization_code grant will return stores linked to the user authorizing the client ID. ", "parameter": " \n", "processed_des_para": ["endpoint", "allow", "partner", "enumerate", "store", "token", "authorize", "token", "generate", "via", "client", "credential", "grant", "return", "store", "link", "client", "token", "generate", "via", "authorization", "code", "grant", "return", "store", "link", "user", "authorize", "client"]}
{"http_verb": "GET ", "uri": " /v1/delivery/store/{store_id} ", "processed_uri": ["delivery", "store", "store", "identification"], "description": " Retrieves the details of a single location. ", "parameter": " store_id required string ID of the store to retrieve\n", "processed_des_para": ["retrieve", "detail", "single", "location", "store", "identification", "require", "string", "store", "retrieve"]}
{"http_verb": "POST ", "uri": " /v1/delivery/store/{store_id} ", "processed_uri": ["delivery", "store", "store", "identification"], "description": " Allows application to update the metadata for a unique location. Only \"Contact\", \"Location\", and \"Pickup Instructions\" can be updated. ", "parameter": " store_id required string ID of the store to retrieve\n", "processed_des_para": ["allow", "application", "update", "metadata", "unique", "location", "contact", "location", "pickup", "instruction", "update", "store", "identification", "require", "string", "store", "retrieve"]}
{"http_verb": "GET ", "uri": " /v1/delivery/store/{store_id}/status ", "processed_uri": ["delivery", "store", "store", "identification", "status"], "description": "The Get Store Status endpoint retrieves the orderability status of a location. ", "parameter": " store_id required string ID of the store to get status\n", "processed_des_para": ["get", "store", "status", "endpoint", "retrieve", "orderability", "status", "location", "store", "identification", "require", "string", "store", "get", "status"]}
{"http_verb": "POST ", "uri": " /v1/delivery/store/{store_id}/update-store-status ", "processed_uri": ["delivery", "store", "store", "identification", "update", "store", "status"], "description": " The Set Restaurant Status endpoint sets the online status of a restaurant. ", "parameter": " store_id required string ID of the store to get status\n", "processed_des_para": ["set", "restaurant", "status", "endpoint", "set", "online", "status", "restaurant", "store", "identification", "require", "string", "store", "get", "status"]}
{"http_verb": "PSOT ", "uri": " /v1/delivery/store/{store_id}/update-store-prep-time ", "processed_uri": ["delivery", "store", "store", "identification", "update", "store", "prep", "time"], "description": "Updates the preptime of a given store ", "parameter": " store_id required string A unique identifier for a store. This is the identifier that is expected to be quoted for support queries and is otherwise known as the 'store id'. \n", "processed_des_para": ["update", "preptime", "give", "store", "store", "identification", "require", "string", "unique", "identifier", "store", "identifier", "expect", "quote", "support", "query", "otherwise", "know", "store", "identification"]}
{"http_verb": "GET ", "uri": " /v1/delivery/order/{order_id} ", "processed_uri": ["delivery", "order", "order", "identification"], "description": " Provides detailed information regarding an Uber Eats active order that can be expanded to provide additional order information. ", "parameter": " order_id required string A unique identifier for a given order. This is the identifier that is expected to be quoted for support queries and is otherwise known as the 'order id'.\n", "processed_des_para": ["provide", "detailed", "information", "regard", "uber", "eat", "active", "order", "expand", "provide", "additional", "order", "information", "order", "identification", "require", "string", "unique", "identifier", "give", "order", "identifier", "expect", "quote", "support", "query", "otherwise", "know", "order", "identification"]}
{"http_verb": "GET ", "uri": " /v1/delivery/store/{store_id}/orders ", "processed_uri": ["delivery", "store", "store", "identification", "orders"], "description": " A list with detailed information regarding Uber Eats orders for a chosen restaurant ", "parameter": " store_id required string A unique identifier for a given restaurant. This is the identifier that is expected to be quoted for support queries and is otherwise known as the 'store_id'. \n", "processed_des_para": ["list", "detailed", "information", "regard", "uber", "eat", "order", "choose", "restaurant", "store", "identification", "require", "string", "unique", "identifier", "give", "restaurant", "identifier", "expect", "quote", "support", "query", "otherwise", "know", "store", "identification"]}
{"http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/accept ", "processed_uri": ["delivery", "order", "order", "identification", "accept"], "description": " Allows Acceptance of an Uber Eats Order for timing of pickup to be updated for the customer or courier. ", "parameter": " order_id required string Unique identifier of the order.\n", "processed_des_para": ["allow", "acceptance", "uber", "eat", "order", "timing", "pickup", "update", "customer", "courier", "order", "identification", "require", "string", "unique", "identifier", "order"]}
{"http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/deny ", "processed_uri": ["delivery", "order", "order", "identification", "deny"], "description": " Allows an Uber Eats Order to be denied. You must supply a denial reason and can optionally supply a free form text to provide Uber further context as to why the order was unable to be accepted. ", "parameter": " order_id required string A unique identifier of the order. \n", "processed_des_para": ["allow", "uber", "eat", "order", "deny", "must", "supply", "denial", "reason", "optionally", "supply", "free", "form", "text", "provide", "uber", "context", "order", "unable", "accept", "order", "identification", "require", "string", "unique", "identifier", "order"]}
{"http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/cancel ", "processed_uri": ["delivery", "order", "order", "identification", "cancel"], "description": " Allows cancellation of an Uber Eats Order ", "parameter": " order_id required string A unique identifier of the order.\n", "processed_des_para": ["allow", "cancellation", "uber", "eat", "order", "order", "identification", "require", "string", "unique", "identifier", "order"]}
{"http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/ready ", "processed_uri": ["delivery", "order", "order", "identification", "ready"], "description": " Mark an order as ready for pickup. Merchants can call this endpoint when done preparing an order. ", "parameter": " order_id required string A unique identifier of the order.\n", "processed_des_para": ["mark", "order", "ready", "pickup", "merchant", "call", "endpoint", "do", "prepare", "order", "order", "identification", "require", "string", "unique", "identifier", "order"]}
{"http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/adjust-price ", "processed_uri": ["delivery", "order", "order", "identification", "adjust", "price"], "description": " Adjusts the price of an order of an active order for an Eater and awaits confirmation from the customer. ", "parameter": " order_id required string A unique identifier of the order.\n", "processed_des_para": ["adjust", "price", "order", "active", "order", "eater", "await", "confirmation", "customer", "order", "identification", "require", "string", "unique", "identifier", "order"]}
{"http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/update-ready-time ", "processed_uri": ["delivery", "order", "order", "identification", "update", "ready", "time"], "description": " Allows updating the time that an Eats Order will be ready to be picked up by a delivery partner. This can only be called when the Order is in the Accepted State and has not been marked as READY_TO_HANDOFF in the preparation_status. This endpoint will error out if can_adjust_ready_for_pickup_time is false. ", "parameter": " order_id required string A unique identifier of the order. \n", "processed_des_para": ["allow", "update", "time", "eat", "order", "ready", "pick", "delivery", "partner", "call", "order", "accept", "state", "mark", "read", "handof", "preparation", "status", "endpoint", "error", "adjust", "ready", "pickup", "time", "order", "identification", "require", "string", "unique", "identifier", "order"]}
{"http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/resolve-fulfillment-issues ", "processed_uri": ["delivery", "order", "order", "identification", "resolve", "fulfillment", "issues"], "description": " Allows merchants to resolve fulfillment issues (e.g. out of item, cannot fulfill special instructions etc.) for a Uber Delivery Order. If successful, a customer can select to accept or adjust the cart for item, or cancel. Execution of this endpoint will be followed with order.fulfillment_issues.resolved or order.failed webhook. ", "parameter": " order_id required string A unique identifier of the order.\n", "processed_des_para": ["allow", "merchant", "resolve", "fulfillment", "issue", "eg", "item", "fulfill", "special", "instruction", "etc", "uber", "delivery", "order", "successful", "customer", "select", "accept", "adjust", "cart", "item", "cancel", "execution", "endpoint", "follow", "orderfulfillment", "issuesresolve", "orderfailed", "webhook", "order", "identification", "require", "string", "unique", "identifier", "order"]}
{"http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/delivery-partner-feedback ", "processed_uri": ["delivery", "order", "order", "identification", "delivery", "partner", "feedback"], "description": " This endpoint allows the partner to submit delivery partner feedback. ", "parameter": " order_id required string A unique identifier of the order. \n", "processed_des_para": ["endpoint", "allow", "partner", "submit", "delivery", "partner", "feedback", "order", "identification", "require", "string", "unique", "identifier", "order"]}
{"http_verb": "POST ", "uri": " /v1/delivery/stores/{store_id}/promotion ", "processed_uri": ["delivery", "stores", "store", "identification", "promotion"], "description": " Create a promotion ", "parameter": " store_id required string Create single promotion by specifying the store ID (Uber UUID) \n", "processed_des_para": ["create", "promotion", "store", "identification", "require", "string", "create", "single", "promotion", "specify", "store", "uber", "uui"]}
{"http_verb": "POST ", "uri": " /v1/delivery/promotions/{promotion_id}/revoke ", "processed_uri": ["delivery", "promotions", "promotion", "identification", "revoke"], "description": " Revoke promotion by specifying the promotion ID ", "parameter": " promotion_id required string Revoke single promotion by specifying the promotion ID\n", "processed_des_para": ["revoke", "promotion", "specify", "promotion", "promotion", "identification", "require", "string", "revoke", "single", "promotion", "specify", "promotion", "identification"]}
{"http_verb": "GET ", "uri": " v1/delivery/promotions/{promotion_id} ", "processed_uri": ["delivery", "promotions", "promotion", "identification"], "description": " Get single promotion metadata by specifying the promotion ID. ", "parameter": " promotion_id required string Revoke single promotion by specifying the promotion ID \n", "processed_des_para": ["get", "single", "promotion", "metadata", "specify", "promotion", "promotion", "identification", "require", "string", "revoke", "single", "promotion", "specify", "promotion"]}
{"http_verb": "POST ", "uri": " /v1/delivery/stores/{store_id}/promotions ", "processed_uri": ["delivery", "stores", "store", "identification", "promotions"], "description": " Provides a list of all promotions existing on a store filtered on state and time range. ", "parameter": " store_id required string Example: 12345f91-c8b1-42a3-bbb5-e1739325f637 A unique identifier for a given store. This is the identifier that is expected to be quoted for support queries and is otherwise known as the 'store id'.\n", "processed_des_para": ["provide", "list", "promotion", "exist", "store", "filter", "state", "time", "range", "store", "identification", "require", "string", "example", "bbb", "unique", "identifier", "give", "store", "identifier", "expect", "quote", "support", "query", "otherwise", "know", "store", "identification"]}
{"http_verb": "GET ", "uri": " /v2/eats/stores/{store_id}/menus ", "processed_uri": ["eats", "stores", "store", "identification", "menus"], "description": " This Get Menu endpoint allows a developer pull the entire menu for a specific store. Note, this response may be very large. ", "parameter": " store_id string Unique identifier representing a store.\n", "processed_des_para": ["get", "menu", "endpoint", "allow", "developer", "pull", "entire", "menu", "specific", "store", "note", "response", "large", "store", "identification", "string", "unique", "identifier", "represent", "store"]}
{"http_verb": "PUT ", "uri": " /v2/eats/stores/{store_id}/menus ", "processed_uri": ["eats", "stores", "store", "identification", "menus"], "description": " This Upload Menu endpoint allows a developer to create or override the entire menu for a specific store. ", "parameter": " store_id string Unique identifying string for a restaurant on Uber Eats, provided by Uber.\n", "processed_des_para": ["upload", "menu", "endpoint", "allow", "developer", "create", "override", "entire", "menu", "specific", "store", "store", "identification", "string", "unique", "identify", "string", "restaurant", "uber", "eat", "provide", "uber"]}
{"http_verb": "POST ", "uri": " /v2/eats/stores/{store_id}/menus/items/{item_id} ", "processed_uri": ["eats", "stores", "store", "identification", "menus", "items", "item", "identification"], "description": " This Update Item endpoint updates an individual item within a menu. This allows you to make smaller edits without needing to send the entire menu. This endpoint performs sparse updates, meaning that it will only update a field if it is specified. ", "parameter": " store_id string Unique identifier representing a store. item_id\tstring\tUnique identifier representing an item.\n", "processed_des_para": ["update", "item", "endpoint", "update", "individual", "item", "within", "menu", "allow", "make", "small", "edit", "without", "need", "send", "entire", "menu", "endpoint", "perform", "sparse", "update", "mean", "update", "field", "specify", "store", "identification", "string", "unique", "identifier", "represent", "store", "item", "identification", "string", "unique", "identifier", "represent", "item"]}
{"http_verb": "POST ", "uri": " /v1/eats/report ", "processed_uri": ["eats", "report"], "description": " This endpoint will allow a developer to request standardized batch reports (e.g. Payment Details Report) to be generated by Uber Eats. ", "parameter": " \n", "processed_des_para": ["endpoint", "allow", "developer", "request", "standardized", "batch", "report", "eg", "payment", "detail", "report", "generate", "uber", "eat"]}
{"http_verb": "POST ", "uri": " /v1/eats/byoc/restaurants/orders/event/location ", "processed_uri": ["eats", "byoc", "restaurants", "orders", "event", "location"], "description": " This endpoint handles the ingestion of live location of the courier for BYOC partner. ", "parameter": " \n", "processed_des_para": ["endpoint", "handle", "ingestion", "live", "location", "courier", "byo", "partner"]}
{"http_verb": "GET ", "uri": " /v2/eats/order/{order_id} ", "processed_uri": ["eats", "order", "order", "identification"], "description": " This endpoint retrieves all details for a single order on Uber Eats. ", "parameter": " order_id UUID Unique identifying string for an order on Uber Eats. Provide this id when inquiring about a specific order. \n", "processed_des_para": ["endpoint", "retrieve", "detail", "single", "order", "uber", "eat", "order", "identification", "uui", "unique", "identify", "string", "order", "uber", "eats", "provide", "identification", "inquire", "specific", "order"]}
{"http_verb": "GET ", "uri": " /v1/eats/stores/{store_id}/created-orders ", "processed_uri": ["eats", "stores", "store", "identification", "created", "orders"], "description": " This endpoint allows a developer to retrieve all orders for a given restaurant that are in the CREATED state.", "parameter": "", "processed_des_para": ["endpoint", "allow", "developer", "retrieve", "order", "give", "restaurant", "create", "state"]}
{"http_verb": "GET ", "uri": " /v1/eats/stores/{store_id}/canceled-orders ", "processed_uri": ["eats", "stores", "store", "identification", "canceled", "orders"], "description": " This endpoint allows a developer to retrieve all orders for a given restaurant that are in the CANCELED state within the last 2 hours. ", "parameter": " store_id string Unique identifying string for a restaurant on Uber Eats, provided by Uber. \n", "processed_des_para": ["endpoint", "allow", "developer", "retrieve", "order", "give", "restaurant", "cancele", "state", "within", "last", "hour", "store", "identification", "string", "unique", "identify", "string", "restaurant", "uber", "eat", "provide", "uber"]}
{"http_verb": "POST ", "uri": " /v1/eats/orders/{order_id}/accept_pos_order ", "processed_uri": ["eats", "orders", "order", "identification", "accept", "pos", "order"], "description": " This endpoint allows a developer to accept an order on behalf of a merchant. You must be the store's nominated order manager app to call this endpoint. ", "parameter": " order_id UUID Unique identifier representing an order on Uber Eats. \n", "processed_des_para": ["endpoint", "allow", "developer", "accept", "order", "behalf", "merchant", "must", "store", "nominate", "order", "manager", "application", "call", "endpoint", "order", "identification", "uui", "unique", "identifier", "represent", "order", "uber", "eat"]}
{"http_verb": "POST ", "uri": " /v1/eats/orders/{order_id}/deny_pos_order ", "processed_uri": ["eats", "orders", "order", "identification", "deny", "pos", "order"], "description": " This endpoint allows a developer to reject an order coming from Uber on behalf of a merchant.", "parameter": " order_id string Unique identifier representing an order on Uber Eats. \n", "processed_des_para": ["endpoint", "allow", "developer", "reject", "order", "come", "uber", "behalf", "merchant", "order", "identification", "string", "unique", "identifier", "represent", "order", "uber", "eat"]}
{"http_verb": "POST ", "uri": " /v1/eats/orders/{order_id}/cancel ", "processed_uri": ["eats", "orders", "order", "identification", "cancel"], "description": " This endpoint allows a developer to cancel live orders by their UUID. ", "parameter": " order_id string Unique identifying string for an order on Uber Eats \n", "processed_des_para": ["endpoint", "allow", "developer", "cancel", "live", "order", "uui", "order", "identification", "string", "unique", "identify", "string", "order", "uber", "eat"]}
{"http_verb": "PATCH ", "uri": " /v2/eats/orders/{order_id}/cart ", "processed_uri": ["eats", "orders", "order", "identification", "cart"], "description": " This Patch Cart endpoint allows a developer to update the shopping cart for an order. ", "parameter": " order_id string Unique identifying string for an order on Uber Eats. Typically referred to as the \"Order UUID\". Provide this id when inquiring about a specific order.\n", "processed_des_para": ["patch", "cart", "endpoint", "allow", "developer", "update", "shopping", "cart", "order", "order", "identification", "string", "unique", "identify", "string", "order", "uber", "eat", "typically", "refer", "order", "uui", "provide", "identification", "inquire", "specific", "order"]}
{"http_verb": "POST ", "uri": " /v1/eats/orders/{order_id}/restaurantdelivery/status ", "processed_uri": ["eats", "orders", "order", "identification", "restaurantdelivery", "status"], "description": " For orders that are delivered by merchant-coordinated couriers, the Update Delivery Status endpoint allows a developer to mark the delivery status of an order as 'started', 'arriving', or 'delivered'.", "parameter": " order_id string Unique identifier representing an order on Uber Eats. \n", "processed_des_para": ["order", "deliver", "merchant", "coordinate", "courier", "update", "delivery", "status", "endpoint", "allow", "developer", "mark", "delivery", "status", "order", "start", "arrive", "deliver", "order", "identification", "string", "unique", "identifier", "represent", "order", "uber", "eat"]}
{"http_verb": "GET ", "uri": " /v1/eats/stores/{store_id} ", "processed_uri": ["eats", "stores", "store", "identification"], "description": " This Get Store Details endpoint allows a developer pull the metadata about a specific store. ", "parameter": " store_id string Unique identifier representing a store.\n", "processed_des_para": ["get", "store", "detail", "endpoint", "allow", "developer", "pull", "metadata", "specific", "store", "store", "identification", "string", "unique", "identifier", "represent", "store"]}
{"http_verb": "GET ", "uri": " /v1/eats/stores ", "processed_uri": ["eats", "stores"], "description": " This endpoint allows a partner to enumerate the stores that this access token is authorized against.", "parameter": " \n", "processed_des_para": ["endpoint", "allow", "partner", "enumerate", "store", "access", "token", "authorize"]}
{"http_verb": "GET ", "uri": " /v1/eats/store/{store_id}/status ", "processed_uri": ["eats", "store", "store", "identification", "status"], "description": " This Get Restaurant Status endpoint retrieves the online status of a restaurant. ", "parameter": " store_id string Unique identifier representing a store. \n", "processed_des_para": ["get", "restaurant", "status", "endpoint", "retrieve", "online", "status", "restaurant", "store", "identification", "string", "unique", "identifier", "represent", "store"]}
{"http_verb": "POST ", "uri": " /v1/eats/store/{store_id}/status ", "processed_uri": ["eats", "store", "store", "identification", "status"], "description": " This Set Restaurant Status endpoint sets the online status of a restaurant. ", "parameter": " store_id string Unique identifier representing a store.\n", "processed_des_para": ["set", "restaurant", "status", "endpoint", "set", "online", "status", "restaurant", "store", "identification", "string", "unique", "identifier", "represent", "store"]}
{"http_verb": "GET ", "uri": " /v1/eats/stores/{store_id}/holiday-hours ", "processed_uri": ["eats", "stores", "store", "identification", "holiday", "hours"], "description": " This endpoint allows a developer to retrieve the holiday hours for a given restaurant. ", "parameter": " store_id string Unique identifying string for a restaurant on Uber Eats, provided by Uber. \n", "processed_des_para": ["endpoint", "allow", "developer", "retrieve", "holiday", "hour", "give", "restaurant", "store", "identification", "string", "unique", "identify", "string", "restaurant", "uber", "eat", "provide", "uber"]}
{"http_verb": "POST ", "uri": " /v1/eats/stores/{store_id}/holiday-hours ", "processed_uri": ["eats", "stores", "store", "identification", "holiday", "hours"], "description": " store_idstring Unique identifying string for a restaurant on Uber Eats, provided by Uber.", "parameter": "", "processed_des_para": ["store", "idstre", "unique", "identify", "string", "restaurant", "uber", "eat", "provide", "uber"]}
