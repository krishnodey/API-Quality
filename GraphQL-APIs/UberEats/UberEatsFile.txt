GET >> /v1/delivery/order/{order_id} >> Provides detailed information regarding an Uber Eats active order that can be expanded to provide additional order information. >> order_id required string A unique identifier for a given order. This is the identifier that is expected to be quoted for support queries and is otherwise known as the ‘order id’.
GET >> /v1/delivery/store/{store_id}/orders >> A list with detailed information regarding Uber Eats orders for a chosen restaurant >> store_id required string A unique identifier for a given restaurant. This is the identifier that is expected to be quoted for support queries and is otherwise known as the ‘store_id’.
GET >> /v1/delivery/order/{order_id}/accept >> Allows Acceptance of an Uber Eats Order for timing of pickup to be updated for the customer or courier. >> order_id required string Unique identifier of the order.
GET >> /v1/delivery/order/{order_id}/deny >> Allows an Uber Eats Order to be denied. You must supply a denial reason and can optionally supply a free form text to provide Uber further context as to why the order was unable to be accepted. >> order_id required string A unique identifier of the order.
GET >> /v1/delivery/order/{order_id}/cancel >> Allows cancellation of an Uber Eats Order >> order_id required string Unique identifier of the order.
GET >> /v1/delivery/order/{order_id}/ready >> Mark an order as ready for pickup. Merchants can call this endpoint when done preparing an order.>> order_id required string Unique identifier of the order.
GET >> /v1/delivery/order/{order_id}/adjust-price >> Adjusts the price of an order of an active order for an Eater and awaits confirmation from the customer. >> order_id required string Unique identifier of the order.
GET >> /v1/delivery/order/{order_id}/update-ready-time >> Allows updating the time that an Eats Order will be ready to be picked up by a delivery partner. This can only be called when the Order is in the Accepted State and has not been marked as READY_TO_HANDOFF in the preparation_status. This endpoint will error out if can_adjust_ready_for_pickup_time is false. >> order_id required string A unique identifier of the order.
GET >> /v1/delivery/order/{order_id}/resolve-fulfillment-issues >> Allows merchants to resolve fulfillment issues (e.g. out of item, cannot fulfill special instructions etc.) for a Uber Delivery Order. If successful, a customer can select to accept or adjust the cart for item, or cancel. Execution of this endpoint will be followed with order.fulfillment_issues.resolved or order.failed webhook. >> order_id required string A unique identifier of the order.
GET >> /v1/delivery/order/{order_id}/delivery-partner-feedback >> This endpoint allows the partner to submit delivery partner feedback. >> order_id required string Unique identifier of the order.
GET >> /v1/plc/health >> The Service Status endpoint returns the general status of Uber PLC. Returns status code 200 if service is up and running.>>
GET >> /v1/plc/payment_codes/{payment_code} >> Validate Payment Code using unique identifier of the branch >> payment_code required string Payment code provided by the courier to the merchant
POST >> /v1/plc/charges >> Create Order Charge by merchant to Uber. >> n/a
GET >> /v1/plc/charges >> Retrieve List of charges. Supports pagination. This means that all objects returned are sorted and grouped in pages (and you can navigate over those pages). Objects are sorted in a descending way based on the date of creation of the objects. Therefore, the most recent objects come first. All pagination parameters are of type query params. The starting_after and ending_before parameters are mutually exclusive. If both parameters are provided, only the value of the ending_before parameter will be considered >> 
GET >> /v1/plc/charges/{charge_uid} >> Retrieve charge associated with the unique identifier. >> charge_uid required string <uuid> Unique Charge Identifier on Uber side
POST >> /v1/delivery/stores/{store_id}/promotion >> Create a promotion >> store_id required string Create single promotion by specifying the store ID (Uber UUID)
POST >> /v1/delivery/promotions/{promotion_id}/revoke >> Revoke promotion by specifying the promotion ID >> promotion_id required string Revoke single promotion by specifying the promotion ID
GET >> /v1/delivery/promotions/{promotion_id} >> Get single promotion metadata by specifying the promotion ID. >> promotion_id required string Revoke single promotion by specifying the promotion ID 
GET >> /v1/delivery/stores/{store_id}/promotions >> Provides a list of all promotions existing on a store filtered on state and time range. >> store_id required string Example: A unique identifier for a given store. This is the identifier that is expected to be quoted for support queries and is otherwise known as the 'store id'.
GET >> /v2/eats/stores/{store_id}/menus >> This Get Menu endpoint allows a developer pull the entire menu for a specific store. Note, this response may be very large. >> store_id string Unique identifier representing a store.
PUT >> /v2/eats/stores/{store_id}/menus >> This Upload Menu endpoint allows a developer to create or override the entire menu for a specific store. >> store_id string	Unique identifying string for a restaurant on Uber Eats, provided by Uber.
POST >> /v2/eats/stores/{store_id}/menus/items/{item_id} >> This Update Item endpoint updates an individual item within a menu. This allows you to make smaller edits without needing to send the entire menu. This endpoint performs sparse updates, meaning that it will only update a field if it is specified. >> store_id	string	Unique identifier representing a store. item_id	string	Unique identifier representing an item.
POST >> /v1/eats/report >> This endpoint will allow a developer to request standardized batch reports (e.g. Payment Details Report) to be generated by Uber Eats. Once the report has been generated, a eats.report.success webhook notification will be sent to the URL configured in the app dashboard. This webhook notification will contain URL(s) you can use for downloading each section of the report. >> 
POST >> /v1/eats/byoc/restaurants/orders/event/location >> This endpoint handles the ingestion of live location of the courier for BYOC partner. >> 
GET >> /v2/eats/order/{order_id} >> This endpoint retrieves all details for a single order on Uber Eats. >> order_id UUID Unique identifying string for an order on Uber Eats. Provide this id when inquiring about a specific order.
GET >> /v1/eats/stores/{store_id}/created-orders >> This endpoint allows a developer to retrieve all orders for a given restaurant that are in the CREATED state. This state is designated as after an eater places the order, and before a restaurant manipulates the order via the Accept Order API, Deny Order API, or physically accepts it in Uber Eats Orders. Orders are sorted from oldest to most recent in the response body. >> store_id	string	Unique identifying string for a restaurant on Uber Eats, provided by Uber.
GET >> /v1/eats/stores/{store_id}/canceled-orders >> This endpoint allows a developer to retrieve all orders for a given restaurant that are in the CANCELED state within the last 2 hours. This state is reached if a developer cancels the order via the Cancel Order API, manually through Uber Eats Orders, or the order is canceled by a member of the support team for other reasons. Orders are sorted in order of recency in the response body. >> store_id	string	Unique identifying string for a restaurant on Uber Eats, provided by Uber.
POST >> /v1/eats/orders/{order_id}/accept_pos_order >> his endpoint allows a developer to accept an order on behalf of a merchant. You must be the store’s nominated order manager app to call this endpoint. >> order_id	UUID	Unique identifier representing an order on Uber Eats.
POST >> /v1/eats/orders/{order_id}/deny_pos_order >> This endpoint allows a developer to reject an order coming from Uber on behalf of a merchant. This does not necessarily cancel the order immediately, as the store might still want to accept orders on their in-store tablet. You must be the store’s nominated order manager app to call this endpoint. >> order_id	string	Unique identifier representing an order on Uber Eats.
POST >> /v1/eats/orders/{order_id}/cancel >> This endpoint allows a developer to cancel live orders by their UUID. If the order is already in a terminal state, or the order never existed, then this endpoint will return a 404. >> order_id	string	Unique identifying string for an order on Uber Eats
PATCH >> /v2/eats/orders/{order_id}/cart >> This Patch Cart endpoint allows a developer to update the shopping cart for an order. Currently, it’s used to indicate fulfillment issues with particular items. >> order_id	string	Unique identifying string for an order on Uber Eats. Typically referred to as the “Order UUID”. Provide this id when inquiring about a specific order.
POST >> /v1/eats/orders/{order_id}/restaurantdelivery/status >> For orders that are delivered by merchant-coordinated couriers, the Update Delivery Status endpoint allows a developer to mark the delivery status of an order as ‘started’, ‘arriving’, or ‘delivered’. This endpoint is not compatible with Uber-coordinated delivery or pickup orders. >> order_id	string	Unique identifier representing an order on Uber Eats.
GET >> /v1/eats/stores/{store_id} >> This Get Store Details endpoint allows a developer pull the metadata about a specific store. >> store_id string Unique identifier representing a store. 
GET >> /v1/eats/stores >> This endpoint allows a partner to enumerate the stores that this access token is authorized against. >>
GET >> /v1/eats/store/{store_id}/status >> This Get Restaurant Status endpoint retrieves the online status of a restaurant. >> store_id	string	Unique identifier representing a store.
POST >> /v1/eats/store/{store_id}/status >> This Set Restaurant Status endpoint sets the online status of a restaurant. >> store_id	string	Unique identifier representing a store.
GET >> /v1/eats/stores/{store_id}/holiday-hours >> This endpoint allows a developer to retrieve the holiday hours for a given restaurant. Holiday hours are exceptions to the normal operating hours of a restaurant that are applied each day. Results are sorted by day, returned chronologically. >> store_id string	Unique identifying string for a restaurant on Uber Eats, provided by Uber.
POST >> /v1/eats/stores/{store_id}/holiday-hours >> This endpoint allows a developer to set the holiday hours for a given restaurant. Holiday hours are exceptions to the normal operating hours of a restaurant that are applied each day. >>