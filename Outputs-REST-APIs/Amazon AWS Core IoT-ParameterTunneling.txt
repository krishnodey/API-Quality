***Anti-Pattern*** 
Count: 150
PATCH	 /accept-certificate-transfer/certificateId?setAsActive=setAsActive 	Parameter Tunneling	Accepts a pending certificate transfer. The default state of the certificate is INACTIVE. To check for pending certificate transfers, call ListCertificates to enumerate your certificates.
PUT	 /billing-groups/addThingToBillingGroup 	Parameter Tunneling	Adds a thing to a billing group.
PUT	 /thing-groups/addThingToThingGroup 	Parameter Tunneling	Adds a thing to a thing group.
POST	 /jobs/jobId/targets?namespaceId=namespaceId 	Parameter Tunneling	Associates a group with a continuous job. The following criteria must be met: The job must have been created with the targetSelection field set to "CONTINUOUS". The job status must currently be "IN_PROGRESS". The total number of targets associated with a job must not exceed 100.
PUT	 /target-policies/policyName 	Parameter Tunneling	Attaches a policy to the specified target.
PUT	 /security-profiles/securityProfileName/targets?securityProfileTargetArn=securityProfileTargetArn 	Parameter Tunneling	Associates a Device Defender security profile with a thing group or this account. Each thing group or account can have up to five security profiles associated with it.
PATCH	 /jobs/jobId?namespaceId=namespaceId 	Parameter Tunneling	Updates supported fields of the specified job.
POST	 /indexing/config 	Parameter Tunneling	Updates the search configuration.
PATCH	 /dynamic-thing-groups/thingGroupName 	Parameter Tunneling	Updates a dynamic thing group.
PUT	 /domainConfigurations/domainConfigurationName 	Parameter Tunneling	Updates values stored in the domain configuration. Domain configurations for default endpoints can't be updated.
PATCH	 /dimensions/name 	Parameter Tunneling	Updates the definition for a dimension. You cannot change the type of a dimension after it is created (you can delete it and re-create it).
PUT	 /certificates/certificateId?newStatus=newStatus 	Parameter Tunneling	Updates the status of the specified certificate. This operation is idempotent. Certificates must be in the ACTIVE state to authenticate devices that use a certificate to connect to AWS IoT. Within a few minutes of updating a certificate from the ACTIVE state to any other state, AWS IoT disconnects all devices that used that certificate to connect. Devices cannot use a certificate that is not in the ACTIVE state to reconnect.
PATCH	 /billing-groups/billingGroupName 	Parameter Tunneling	Updates information about the billing group.
PUT	 /authorizer/authorizerName 	Parameter Tunneling	Updates an authorizer.
PATCH	 /audit/suppressions/update 	Parameter Tunneling	Updates a Device Defender audit suppression.
PATCH	 /provisioning-templates/templateName 	Parameter Tunneling	Updates a fleet provisioning template.
PUT	 /role-aliases/roleAlias 	Parameter Tunneling	Updates a role alias.
PATCH	 /audit/scheduledaudits/scheduledAuditName 	Parameter Tunneling	Updates a scheduled audit, including which checks are performed and how often the audit takes place.
PATCH	 /security-profiles/securityProfileName?expectedVersion=expectedVersion 	Parameter Tunneling	Updates a Device Defender security profile.
PUT	 /streams/streamId 	Parameter Tunneling	Updates an existing stream. The stream version will be incremented by one.
PATCH	 /things/thingName 	Parameter Tunneling	Updates the data for a thing.
PATCH	 /thing-groups/thingGroupName 	Parameter Tunneling	Update a thing group.
PUT	 /thing-groups/updateThingGroupsForThing 	Parameter Tunneling	Updates the groups to which the thing belongs.
PATCH	 /destinations 	Parameter Tunneling	Updates a topic rule destination. You use this to change the status, endpoint URL, or confirmation URL of the destination.
PATCH	 /transfer-certificate/certificateId?targetAwsAccount=targetAwsAccount 	Parameter Tunneling	Transfers the specified certificate to the specified AWS account. You can cancel the transfer until it is acknowledged by the recipient. No notification is sent to the transfer destination's account. It is up to the caller to notify the transfer target. The certificate being transferred must not be in the ACTIVE state. You can use the UpdateCertificate API to deactivate it. The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy API to detach them.
POST	 /test-authorization?clientId=clientId 	Parameter Tunneling	Tests if a specified principal is authorized to perform an AWS IoT action on a specified resource. Use this to test and debug the authorization behavior of devices that connect to the AWS IoT device gateway.
POST	 /tags 	Parameter Tunneling	Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource.
POST	 /thing-registration-tasks 	Parameter Tunneling	Creates a bulk thing provisioning task.
POST	 /audit/mitigationactions/tasks/taskId 	Parameter Tunneling	Starts a task that applies a set of mitigation actions to the specified target.
PATCH	 /policies/policyName/version/policyVersionId 	Parameter Tunneling	Sets the specified version of the specified policy as the policy's default (operative) version. This action affects all certificates to which the policy is attached. To list the principals the policy is attached to, use the ListPrincipalPolicy API.
PATCH	 /rules/ruleName 	Parameter Tunneling	Replaces the rule. You must specify all parameters for the new rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.
PUT	 /thing-groups/removeThingFromThingGroup 	Parameter Tunneling	Remove the specified thing from the specified group. You must specify either a thingGroupArn or a thingGroupName to identify the thing group and either a thingArn or a thingName to identify the thing to remove from the thing group.
POST	 /cacertificate?allowAutoRegistration=allowAutoRegistration&setAsActive=setAsActive 	Parameter Tunneling	Registers a CA certificate with AWS IoT. This CA certificate can then be used to sign device certificates, which can be then registered with AWS IoT. You can register up to 10 CA certificates per AWS account that have the same subject field. This enables you to have up to 10 certificate authorities sign your device certificates. If you have more than one CA certificate registered, make sure you pass the CA certificate when you register your device certificates with the RegisterCertificate API.
GET	 /violation-events?endTime=endTime&maxResults=maxResults&nextToken=nextToken&securityProfileName=securityProfileName&startTime=startTime&thingName=thingName 	Parameter Tunneling	Lists the Device Defender security profile violations discovered during the given time period. You can use filters to limit the results to those alerts issued for a particular security profile, behavior, or thing (device).
GET	 /v2LoggingLevel?maxResults=maxResults&nextToken=nextToken&targetType=targetType 	Parameter Tunneling	Lists logging levels.
GET	 /rules?maxResults=maxResults&nextToken=nextToken&ruleDisabled=ruleDisabled&topic=topic 	Parameter Tunneling	Lists the rules for the specific topic.
GET	 /destinations?maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	Lists all the topic rule destinations in your AWS account.
GET	 /thing-types?maxResults=maxResults&nextToken=nextToken&thingTypeName=thingTypeName 	Parameter Tunneling	Lists the existing thing types.
GET	 /thing-groups/thingGroupName/things?maxResults=maxResults&nextToken=nextToken&recursive=recursive 	Parameter Tunneling	Lists the things in the specified group.
GET	 /billing-groups/billingGroupName/things?maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	Lists the things you have added to the given billing group.
GET	 /things?attributeName=attributeName&attributeValue=attributeValue&maxResults=maxResults&nextToken=nextToken&thingTypeName=thingTypeName 	Parameter Tunneling	Lists your things. Use the attributeName and attributeValue parameters to filter your things. For example, calling ListThings with attributeName=Color and attributeValue=Red retrieves all things in the registry that contain an attribute Color with the value Red.
GET	 /thing-registration-tasks?maxResults=maxResults&nextToken=nextToken&status=status 	Parameter Tunneling	List bulk thing provisioning tasks.
GET	 /thing-registration-tasks/taskId/reports?maxResults=maxResults&nextToken=nextToken&reportType=reportType 	Parameter Tunneling	Information about the thing registration tasks.
GET	 /things/thingName/principals?maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	Lists the principals associated with the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.
GET	 /things/thingName/thing-groups?maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	List the thing groups to which the specified thing belongs.
GET	 /thing-groups?maxResults=maxResults&namePrefixFilter=namePrefixFilter&nextToken=nextToken&parentGroup=parentGroup&recursive=recursive 	Parameter Tunneling	List the thing groups in your account.
GET	 /security-profiles/securityProfileName/targets?maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	Lists the targets (thing groups) associated with a given Device Defender security profile.
POST	 /policy-targets/policyName?marker=marker&pageSize=pageSize 	Parameter Tunneling	List targets for the specified policy.
GET	 /tags?nextToken=nextToken&resourceArn=resourceArn 	Parameter Tunneling	Lists the tags (metadata) you have assigned to the resource.
GET	 /streams?isAscendingOrder=ascendingOrder&maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	Lists all of the streams in your AWS account.
GET	 /security-profiles-for-target?maxResults=maxResults&nextToken=nextToken&recursive=recursive&securityProfileTargetArn=securityProfileTargetArn 	Parameter Tunneling	Lists the Device Defender security profiles attached to a target (thing group).
GET	 /security-profiles?dimensionName=dimensionName&maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	Lists the Device Defender security profiles you have created. You can use filters to list only those security profiles associated with a thing group or only those associated with your account.
GET	 /audit/scheduledaudits?maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	Lists all of your scheduled audits.
GET	 /role-aliases?isAscendingOrder=ascendingOrder&marker=marker&pageSize=pageSize 	Parameter Tunneling	Lists the role aliases registered in your account.
GET	 /provisioning-templates/templateName/versions?maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	A list of fleet provisioning template versions.
GET	 /provisioning-templates?maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	Lists the fleet provisioning templates in your AWS account.
GET	 /principals/things?maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	Lists the things associated with the specified principal. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.
GET	 /principal-policies?isAscendingOrder=ascendingOrder&marker=marker&pageSize=pageSize 	Parameter Tunneling	Lists the policies attached to the specified principal. If you use an Cognito identity, the ID must be in AmazonCognito Identity format.
GET	 /policies/policyName/version 	Parameter Tunneling	Lists the versions of the specified policy and identifies the default version.
GET	 /policy-principals?isAscendingOrder=ascendingOrder&marker=marker&pageSize=pageSize 	Parameter Tunneling	Lists the principals associated with the specified policy.
GET	 /certificates-out-going?isAscendingOrder=ascendingOrder&marker=marker&pageSize=pageSize 	Parameter Tunneling	Lists certificates that are being transferred but not yet accepted.
GET	 /policies?isAscendingOrder=ascendingOrder&marker=marker&pageSize=pageSize 	Parameter Tunneling	Lists your policies.
GET	 /mitigationactions/actions?actionType=actionType&maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	Gets a list of all mitigation actions that match the specified filter criteria.
GET	 /jobs?maxResults=maxResults&namespaceId=namespaceId&nextToken=nextToken&status=status&targetSelection=targetSelection&thingGroupId=thingGroupId&thingGroupName=thingGroupName 	Parameter Tunneling	Lists jobs.
GET	 /things/thingName/jobs?maxResults=maxResults&namespaceId=namespaceId&nextToken=nextToken&status=status 	Parameter Tunneling	Lists the job executions for the specified thing.
GET	 /jobs/jobId/things?maxResults=maxResults&nextToken=nextToken&status=status 	Parameter Tunneling	Lists the job executions for a job.
GET	 /indices?maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	Lists the search indices.
GET	 /domainConfigurations?marker=marker&pageSize=pageSize&serviceType=serviceType 	Parameter Tunneling	Gets a list of domain configurations for the user. This list is sorted alphabetically by domain configuration name.
GET	 /dimensions?maxResults=maxResults&nextToken=nextToken 	Parameter Tunneling	List the set of dimensions that are defined for your AWS account.
GET	 /certificates-by-ca/caCertificateId?isAscendingOrder=ascendingOrder&marker=marker&pageSize=pageSize 	Parameter Tunneling	List the device certificates signed by the specified CA certificate.
GET	 /certificates?isAscendingOrder=ascendingOrder&marker=marker&pageSize=pageSize 	Parameter Tunneling	Lists the certificates registered in your AWS account. The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.
GET	 /cacertificates?isAscendingOrder=ascendingOrder&marker=marker&pageSize=pageSize 	Parameter Tunneling	Lists the CA certificates registered for your AWS account. The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.
GET	 /billing-groups?maxResults=maxResults&namePrefixFilter=namePrefixFilter&nextToken=nextToken 	Parameter Tunneling	Lists the billing groups you have created.
GET	 /authorizers/?isAscendingOrder=ascendingOrder&marker=marker&pageSize=pageSize&status=status 	Parameter Tunneling	Lists the authorizers registered in your account.
GET	 /audit/tasks?endTime=endTime&maxResults=maxResults&nextToken=nextToken&startTime=startTime&taskStatus=taskStatus&taskType=taskType 	Parameter Tunneling	Lists the Device Defender audits that have been performed during a given time period.
POST	 /audit/suppressions/list 	Parameter Tunneling	Lists your Device Defender audit listings.
POST	 /audit/findings 	Parameter Tunneling	Lists the findings (results) of a Device Defender audit or of the audits performed during a specified time period. (Findings are retained for 90 days.)
GET	 /active-violations?maxResults=maxResults&nextToken=nextToken&securityProfileName=securityProfileName&thingName=thingName 	Parameter Tunneling	Lists the active violations for a given Device Defender security profile.
GET	 /v2LoggingOptions 	Parameter Tunneling	Gets the fine grained logging options.
GET	 /rules/ruleName 	Parameter Tunneling	Gets information about the rule.
POST	 /indices/statistics 	Parameter Tunneling	Returns the count, average, sum, minimum, maximum, sum of squares, variance, and standard deviation for the specified aggregated field. If the aggregation field is of type String, only the count statistic is returned.
GET	 /policies/policyName/version/policyVersionId 	Parameter Tunneling	Gets information about the specified policy version.
GET	 /policies/policyName 	Parameter Tunneling	Gets information about the specified policy with the policy document of the default version.
POST	 /indices/percentiles 	Parameter Tunneling	Groups the aggregated values that match the query into percentile groupings. The default percentile groupings are: 1,5,25,50,75,95,99, although you can specify your own when you call GetPercentiles. This function returns a value for each percentile group specified (or the default percentile groupings). The percentile group "1" contains the aggregated field value that occurs in approximately one percent of the values that match the query. The percentile group "5" contains the aggregated field value that occurs in approximately five percent of the values that match the query, and so on. The result is an approximation, the more values that match the query, the more accurate the percentile values.
GET	 /loggingOptions 	Parameter Tunneling	Gets the logging options. NOTE: use of this command is not recommended. Use GetV2LoggingOptions instead.
GET	 /jobs/jobId/job-document 	Parameter Tunneling	Gets a job document.
GET	 /indexing/config 	Parameter Tunneling	Gets the indexing configuration.
POST	 /effective-policies?thingName=thingName 	Parameter Tunneling	Gets a list of the policies that have an effect on the authorization behavior of the specified device when it connects to the AWS IoT device gateway.
POST	 /indices/cardinality 	Parameter Tunneling	Returns the approximate count of unique values that match the query.
DELETE	 /security-profiles/securityProfileName/targets?securityProfileTargetArn=securityProfileTargetArn 	Parameter Tunneling	Disassociates a Device Defender security profile from a thing group or from this account.
POST	 /target-policies/policyName 	Parameter Tunneling	Detaches a policy from the specified target.
GET	 /thing-types/thingTypeName 	Parameter Tunneling	Gets information about the specified thing type.
GET	 /security-profiles/securityProfileName 	Parameter Tunneling	Gets information about a Device Defender security profile.
GET	 /provisioning-templates/templateName/versions/versionId 	Parameter Tunneling	Returns information about a fleet provisioning template version.
GET	 /provisioning-templates/templateName 	Parameter Tunneling	Returns information about a fleet provisioning template.
GET	 /endpoint?endpointType=endpointType 	Parameter Tunneling	Returns a unique endpoint specific to the AWS account making the call.
GET	 /domainConfigurations/domainConfigurationName 	Parameter Tunneling	Gets summary information about a domain configuration.
GET	 /audit/tasks/taskId 	Parameter Tunneling	Gets information about a Device Defender audit.
POST	 /audit/suppressions/describe 	Parameter Tunneling	Gets information about a Device Defender audit suppression.
GET	 /audit/mitigationactions/tasks/taskId 	Parameter Tunneling	Gets information about an audit mitigation task that is used to apply mitigation actions to a set of audit findings. Properties include the actions being applied, the audit checks to which they're being applied, the task status, and aggregated task statistics.
GET	 /audit/findings/findingId 	Parameter Tunneling	Gets information about a single audit finding. Properties include the reason for noncompliance, the severity of the issue, and when the audit that returned the finding was started.
GET	 /audit/configuration 	Parameter Tunneling	Gets information about the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.
DELETE	 /thing-types/thingTypeName 	Parameter Tunneling	Deletes the specified thing type. You cannot delete a thing type if it has things associated with it. To delete a thing type, first mark it as deprecated by calling DeprecateThingType, then remove any associated things by calling UpdateThing to change the thing type on any associated thing, and finally use DeleteThingType to delete the thing type.
DELETE	 /things/thingName?expectedVersion=expectedVersion 	Parameter Tunneling	Deletes the specified thing. Returns successfully with no error if the deletion is successful or you specify a thing that doesn't exist.
DELETE	 /provisioning-templates/templateName/versions/versionId 	Parameter Tunneling	Deletes a fleet provisioning template version.
DELETE	 /provisioning-templates/templateName 	Parameter Tunneling	Deletes a fleet provisioning template.
DELETE	 /policies/policyName/version/policyVersionId 	Parameter Tunneling	Deletes the specified version of the specified policy. You cannot delete the default version of a policy using this API. To delete the default version of a policy, use DeletePolicy. To find out which version of a policy is marked as the default version, use ListPolicyVersions.
DELETE	 /policies/policyName 	Parameter Tunneling	Deletes the specified policy. A policy cannot be deleted if it has non-default versions or it is attached to any certificate. To delete a policy, use the DeletePolicyVersion API to delete all non-default versions of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate; and then use the DeletePolicy API to delete the policy. When a policy is deleted using DeletePolicy, its default version is deleted with it.
DELETE	 /jobs/jobId?force=force&namespaceId=namespaceId 	Parameter Tunneling	Deletes a job and its related job executions. Deleting a job may take time, depending on the number of job executions created for the job and various other factors. While the job is being deleted, the status of the job will be shown as "DELETION_IN_PROGRESS". Attempting to delete or cancel a job whose status is already "DELETION_IN_PROGRESS" will result in an error. Only 10 jobs may have status "DELETION_IN_PROGRESS" at the same time, or a LimitExceededException will occur.
DELETE	 /certificates/certificateId?forceDelete=forceDelete 	Parameter Tunneling	Deletes the specified certificate. A certificate cannot be deleted if it has a policy or IoT thing attached to it or if its status is set to ACTIVE. To delete a certificate, first use the DetachPrincipalPolicy API to detach all policies. Next, use the UpdateCertificate API to set the certificate to the INACTIVE status.
POST	 /audit/suppressions/delete 	Parameter Tunneling	Deletes a Device Defender audit suppression.
DELETE	 /audit/configuration?deleteScheduledAudits=deleteScheduledAudits 	Parameter Tunneling	Restores the default settings for Device Defender audits for this account. Any configuration data you entered is deleted and all audit checks are reset to disabled.
POST	 /destinations 	Parameter Tunneling	Creates a topic rule destination. The destination must be confirmed prior to use.
POST	 /rules/ruleName 	Parameter Tunneling	Creates a rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.
POST	 /things/thingName 	Parameter Tunneling	Creates a thing record in the registry. If this call is made multiple times using the same thing name and configuration, the call will succeed. If this call is made with the same thing name but different configuration a ResourceAlreadyExistsException is thrown.
POST	 /streams/streamId 	Parameter Tunneling	Creates a stream for delivering one or more large files in chunks over MQTT. A stream transports data bytes in chunks or blocks packaged as MQTT messages from a source like S3. You can have one or more files associated with a stream.
POST	 /provisioning-templates/templateName/versions?setAsDefault=setAsDefault 	Parameter Tunneling	Creates a new version of a fleet provisioning template.
POST	 /policies/policyName/version?setAsDefault=setAsDefault 	Parameter Tunneling	Creates a new version of the specified AWS IoT policy. To update a policy, create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must use DeletePolicyVersion to delete an existing version before you create a new one. Optionally, you can set the new version as the policy's default version. The default version is the operative version (that is, the version that is in effect for the certificates to which the policy is attached).
POST	 /policies/policyName 	Parameter Tunneling	Creates an AWS IoT policy. The created policy is the default version for the policy. This operation creates a policy version with a version identifier of 1 and sets 1 as the policy's default version.
POST	 /mitigationactions/actions/actionName 	Parameter Tunneling	Defines an action that can be applied to audit findings by using StartAuditMitigationActionsTask. Only certain types of mitigation actions can be applied to specific check names. For more information, see Mitigation actions. Each mitigation action can apply only one type of change.
POST	 /keys-and-certificate?setAsActive=setAsActive 	Parameter Tunneling	Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public key. You can also call CreateKeysAndCertificate over MQTT from a device, for more information, see Provisioning MQTT API. This is the only time AWS IoT issues the private key for this certificate, so it is important to keep it in a secure location.
POST	 /dynamic-thing-groups/thingGroupName 	Parameter Tunneling	Creates a dynamic thing group.
POST	 /dimensions/name 	Parameter Tunneling	Create a dimension that you can use to limit the scope of a metric used in a security profile for AWS IoT Device Defender. For example, using a TOPIC_FILTER dimension, you can narrow down the scope of the metric only to MQTT topics whose name match the pattern specified in the dimension.
POST	 /certificates?setAsActive=setAsActive 	Parameter Tunneling	Creates an X.509 certificate using the specified certificate signing request. The CSR must include a public key that is either an RSA key with a length of at least 2048 bits or an ECC key from NIST P-256 or NIST P-384 curves. Reusing the same certificate signing request (CSR) results in a distinct certificate. You can create multiple certificates in a batch by creating a directory, copying multiple .csr files into that directory, and then specifying that directory on the command line. The following commands show how to create a batch of certificates given a batch of CSRs.
POST	 /billing-groups/billingGroupName 	Parameter Tunneling	Creates a billing group.
POST	 /audit/suppressions/create 	Parameter Tunneling	Creates a Device Defender audit suppression.
GET	 /confirmdestination/confirmationToken+ 	Parameter Tunneling	Confirms a topic rule destination. When you create a rule requiring a destination, AWS IoT sends a confirmation message to the endpoint or base address you specify. The message includes a token which you pass back when calling ConfirmTopicRuleDestination to confirm that you own or have access to the endpoint.
PUT	 /things/thingName/jobs/jobId/cancel?force=force 	Parameter Tunneling	Cancels the execution of a job for a given thing.
PUT	 /jobs/jobId/cancel?force=force 	Parameter Tunneling	Cancels a job.
PATCH	 /cancel-certificate-transfer/certificateId 	Parameter Tunneling	Cancels a pending transfer for the specified certificate. Note Only the transfer source account can use this operation to cancel a transfer. (Transfer destinations can use RejectCertificateTransfer instead.) After transfer, AWS IoT returns the certificate to the source account in the INACTIVE state. After the destination account has accepted the transfer, the transfer cannot be cancelled. After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.

***Patterns*** 
Count: 0
PUT	 /principal-policies/policyName 	Parameter Adherence	Attaches the specified policy to the specified principal (certificate or other credential).
PUT	 /things/thingName/principals 	Parameter Adherence	Attaches the specified principal to the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.
PUT	 /audit/mitigationactions/tasks/taskId/cancel 	Parameter Adherence	Cancels a mitigation action task that is in progress. If the task is not in progress, an InvalidRequestException occurs.
PUT	 /audit/tasks/taskId/cancel 	Parameter Adherence	Cancels an audit that is in progress. The audit can be either scheduled or on-demand. If the audit is not in progress, an "InvalidRequestException" occurs.
PATCH	 /audit/configuration 	Parameter Adherence	Configures or reconfigures the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.
POST	 /security-profile-behaviors/validate 	Parameter Adherence	Validates a Device Defender security profile behaviors specification.
POST	 /authorizer/authorizerName/test 	Parameter Adherence	Tests a custom authorization behavior by invoking a specified custom authorizer. Use this to test and debug the custom authorization behavior of devices that connect to the AWS IoT device gateway.
POST	 /audit/tasks 	Parameter Adherence	Starts an on-demand Device Defender audit.
POST	 /loggingOptions 	Parameter Adherence	Sets the logging options. NOTE: use of this command is not recommended. Use SetV2LoggingOptions instead.
POST	 /default-authorizer 	Parameter Adherence	Sets the default authorizer. This will be used if a websocket connection is made without specifying an authorizer.
POST	 /indices/search 	Parameter Adherence	The query search index.
POST	 /rules/ruleName/enable 	Parameter Adherence	Enables the rule.
POST	 /rules/ruleName/disable 	Parameter Adherence	Disables the rule.
DELETE	 /things/thingName/principals 	Parameter Adherence	Detaches the specified principal from the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities. This call is asynchronous. It might take several seconds for the detachment to propagate.
GET	 /thing-registration-tasks/taskId 	Parameter Adherence	Describes a bulk thing provisioning task.
GET	 /thing-groups/thingGroupName 	Parameter Adherence	Describe a thing group.
GET	 /role-aliases/roleAlias 	Parameter Adherence	Describes a role alias.
GET	 /event-configurations 	Parameter Adherence	Describes event configurations.
GET	 /default-authorizer 	Parameter Adherence	Describes the default authorizer.
DELETE	 /default-authorizer 	Parameter Adherence	Clears the default authorizer.
