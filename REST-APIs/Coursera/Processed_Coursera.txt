{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents"], "description": " Returns a paginated list of courses and specializations that are available through your learning programs. If a program has a specialization, we also include the courses within it  ", "parameter": " \n", "processed_des_para": ["return", "paginated", "list", "course", "specialization", "available", "learn", "program", "program", "specialization", "also", "include", "course", "within"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents/{id}\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents", "identifer"], "description": " Returns a list that contains one object.  ", "parameter": " \n", "processed_des_para": ["return", "list", "contain", "one", "object"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/courseGradebookReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "course", "gradebook", "reports"], "description": " Retrieve course item-specific grading information with search criteria  ", "parameter": " \n", "processed_des_para": ["retrieve", "course", "item", "specific", "grade", "information", "search", "criterion"]}
{"http_verb": "GET", "uri": " /api/businesses.v1/{orgId}/enrollmentReports\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "enrollment", "reports"], "description": " Returns a paginated list of course progress summaries for all users that are managed in your account. Each entry in the list represents a single user's progress for a single course. The overall progress is a number between 0 to 100, highlighting percentage of items completed by the learner. It is possible for a learner to have COMPLETED a course but have overall progress < 100, as a learner needs only to pass all graded items in order to complete a course. ", "parameter": " \n", "processed_des_para": ["return", "paginated", "list", "course", "progress", "summarie", "user", "manage", "account", "entry", "list", "represent", "single", "user", "progress", "single", "course", "overall", "progress", "number", "highlight", "percentage", "item", "complete", "learner", "possible", "learner", "complete", "course", "overall", "progress", "learner", "need", "pass", "grade", "item", "order", "complete", "course"]}
{"http_verb": "GET\t", "uri": "/api/businesses.v1/{orgId}/programs", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs"], "description": "\tReturns a paginated list of active learning programs created within your account. ", "parameter": " \n", "processed_des_para": ["return", "paginated", "list", "active", "learn", "program", "create", "within", "account"]}
{"http_verb": "GET\t", "uri": "/api/businesses.v1/{orgId}/programs/{programId}/courseMaterials/{courseId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "course", "materials", "course", "identifer"], "description": " Returns a paginated list of individual course materials for a given course.", "parameter": " \n", "processed_des_para": ["return", "paginated", "list", "individual", "course", "material", "give", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "curriculum", "collections"], "description": " Returns a paginated list of curriculum collections in your program. ", "parameter": " \n", "processed_des_para": ["return", "paginated", "list", "curriculum", "collection", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds a user as an invitee to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request. ", "parameter": "\n", "processed_des_para": ["add", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations?action=multiCreate\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds multiple users as invitees to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request. ", "parameter": " \n", "processed_des_para": ["add", "multiple", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Returns a paginated list of accepted members in your program. ", "parameter": " \n", "processed_des_para": ["return", "paginated", "list", "accept", "member", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Creates a program membership for the user. Note that this will only work if the user already has a Coursera account. ", "parameter": " \n", "processed_des_para": ["create", "program", "membership", "user", "note", "work", "user", "already", "coursera", "account"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId}\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " This checks whether a user is a member of a specified program. The external user id in the request will be set either via SSO, or added when inviting the user.\n", "parameter": "", "processed_des_para": ["check", "whether", "user", "member", "specify", "program", "external", "user", "identifer", "request", "set", "either", "via", "ss", "add", "invite", "user"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments"], "description": " Enrolls a selected user into a specific course. Note that this will only work if the user already has a Coursera account and a current program membership.\n", "parameter": "", "processed_des_para": ["enroll", "select", "user", "specific", "course", "note", "work", "user", "already", "coursera", "account", "current", "program", "membership"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments/{external_id~content_type~content_id}\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments", "external", "idcontent", "typecontent", "identifer"], "description": " For a specific user, return whether they are currently enrolled in a specific course\n", "parameter": "", "processed_des_para": ["specific", "user", "return", "whether", "currently", "enrol", "specific", "course"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/users\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "users"], "description": " Update a user data in organization's program by email or externalId.\n", "parameter": "", "processed_des_para": ["update", "user", "datum", "organization", "program", "email", "external", "identifer"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/users\t ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Returns a paginated list of users within your organiation.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "user", "within", "organiation"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Updates or deletes a user in the organization by email.\n", "parameter": "", "processed_des_para": ["update", "delete", "user", "organization", "email"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given organization.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "organization"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsets\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in an enterprise organization. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "organization", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/learner-skill-scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "learner", "skill", "scores"], "description": " Returns the skills scores of a single learner in your learning program. Max 10 skills.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "learner", "learn", "program", "max", "skill"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in your enterprise program. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "program", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/learner-progress\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "learner", "progress"], "description": " Returns the Skillset progress of a single learner in your learning program.\n", "parameter": "", "processed_des_para": ["return", "skillset", "progress", "single", "learner", "learn", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/skills/{skillId}/recommendations ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "skills", "skill", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a skill within a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "within", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents"], "description": " Returns a paginated list of courses and specializations that are available through your learning programs. If a program has a specialization, we also include the courses within it\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "specialization", "available", "learn", "program", "program", "specialization", "also", "include", "course", "within"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents/{id} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents", "identifer"], "description": " Returns a list that contains one object.\n", "parameter": "", "processed_des_para": ["return", "list", "contain", "one", "object"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/courseGradebookReports\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "course", "gradebook", "reports"], "description": " Retrieve course item-specific grading information with search criteria\n", "parameter": "", "processed_des_para": ["retrieve", "course", "item", "specific", "grade", "information", "search", "criterion"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/enrollmentReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "enrollment", "reports"], "description": " Returns a paginated list of course progress summaries for all users that are managed in your account. Each entry in the list represents a single user’s progress for a single course. The overall progress is a number between 0 to 100, highlighting percentage of items completed by the learner. It is possible for a learner to have COMPLETED a course but have overall progress < 100, as a learner needs only to pass all graded items in order to complete a course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "progress", "summarie", "user", "manage", "account", "entry", "list", "represent", "single", "user", "progress", "single", "course", "overall", "progress", "number", "highlight", "percentage", "item", "complete", "learner", "possible", "learner", "complete", "course", "overall", "progress", "learner", "need", "pass", "grade", "item", "order", "complete", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs"], "description": " Returns a paginated list of active learning programs created within your account.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "active", "learn", "program", "create", "within", "account"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/courseMaterials/{courseId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "course", "materials", "course", "identifer"], "description": " Returns a paginated list of individual course materials for a given course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "individual", "course", "material", "give", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "curriculum", "collections"], "description": " Returns a paginated list of curriculum collections in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "curriculum", "collection", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " Returns a paginated list of pending invitations in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "pende", "invitation", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds a user as an invitee to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "DELETE\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations/{programId~externalId}\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations", "program", "idexternal", "identifer"], "description": " Delete a pending program invitation.\n", "parameter": "", "processed_des_para": ["delete", "pende", "program", "invitation"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations?action=multiCreate ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds multiple users as invitees to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "multiple", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Returns a paginated list of accepted members in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "accept", "member", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Creates a program membership for the user. Note that this will only work if the user already has a Coursera account.\n", "parameter": "", "processed_des_para": ["create", "program", "membership", "user", "note", "work", "user", "already", "coursera", "account"]}
{"http_verb": "DELETE\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId}\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": "Delete a user from the program. The membership id here is the id returned by the API call to list of memberships. The learner will need to be reinvited to rejoin the program.\n", "parameter": "", "processed_des_para": ["delete", "user", "program", "membership", "identifer", "identifer", "return", "ap", "call", "list", "membership", "learner", "need", "reinvite", "rejoin", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId}\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " This checks whether a user is a member of a specified program. The external user id in the request will be set either via SSO, or added when inviting the user.\n", "parameter": "", "processed_des_para": ["check", "whether", "user", "member", "specify", "program", "external", "user", "identifer", "request", "set", "either", "via", "ss", "add", "invite", "user"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments"], "description": " Enrolls a selected user into a specific course. Note that this will only work if the user already has a Coursera account and a current program membership.\n", "parameter": "", "processed_des_para": ["enroll", "select", "user", "specific", "course", "note", "work", "user", "already", "coursera", "account", "current", "program", "membership"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments/{external_id~content_type~content_id}\t ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments", "external", "idcontent", "typecontent", "identifer"], "description": " For a specific user, return whether they are currently enrolled in a specific course\n", "parameter": "", "processed_des_para": ["specific", "user", "return", "whether", "currently", "enrol", "specific", "course"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "users"], "description": " Update a user data in organization's program by email or externalId.\n", "parameter": "", "processed_des_para": ["update", "user", "datum", "organization", "program", "email", "external", "identifer"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Returns a paginated list of users within your organiation.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "user", "within", "organiation"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Updates or deletes a user in the organization by email.\n", "parameter": "", "processed_des_para": ["update", "delete", "user", "organization", "email"]}
{"http_verb": "DELETE ", "uri": " /api/businesses.v1/{orgId}/users/{externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users", "external", "identifer"], "description": " Delete a user from all programs. This also revokes access to the corresponding courses/specializations in the programs.\n", "parameter": "", "processed_des_para": ["delete", "user", "program", "also", "revoke", "access", "correspond", "course", "specialization", "program"]}
{"http_verb": "GET ", "uri": "\t/api/rest/v1/enterprise/organizations/{orgId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given organization.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "organization"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in an enterprise organization. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "organization", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/program/{programId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "program", "program", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/learner-skill-scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "learner", "skill", "scores"], "description": " Returns the skills scores of a single learner in your learning program. Max 10 skills.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "learner", "learn", "program", "max", "skill"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skills/{skillId}/scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skills", "skill", "identifer", "scores"], "description": " Returns the Skill scores of a single skill for up to 10 learners.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "skill", "learner"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in your enterprise program. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "program", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/learner-progress\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "learner", "progress"], "description": " Returns the Skillset progress of a single learner in your learning program.\n", "parameter": "", "processed_des_para": ["return", "skillset", "progress", "single", "learner", "learn", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/recommendations\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/skills/{skillId}/recommendations ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "skills", "skill", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a skill within a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "within", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents"], "description": " Returns a paginated list of courses and specializations that are available through your learning programs. If a program has a specialization, we also include the courses within it\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "specialization", "available", "learn", "program", "program", "specialization", "also", "include", "course", "within"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents/{id} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents", "identifer"], "description": " Returns a list that contains one object.\n", "parameter": "", "processed_des_para": ["return", "list", "contain", "one", "object"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/courseGradebookReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "course", "gradebook", "reports"], "description": " Retrieve course item-specific grading information with search criteria\n", "parameter": "", "processed_des_para": ["retrieve", "course", "item", "specific", "grade", "information", "search", "criterion"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/enrollmentReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "enrollment", "reports"], "description": " Returns a paginated list of course progress summaries for all users that are managed in your account. Each entry in the list represents a single user’s progress for a single course. The overall progress is a number between 0 to 100, highlighting percentage of items completed by the learner. It is possible for a learner to have COMPLETED a course but have overall progress < 100, as a learner needs only to pass all graded items in order to complete a course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "progress", "summarie", "user", "manage", "account", "entry", "list", "represent", "single", "user", "progress", "single", "course", "overall", "progress", "number", "highlight", "percentage", "item", "complete", "learner", "possible", "learner", "complete", "course", "overall", "progress", "learner", "need", "pass", "grade", "item", "order", "complete", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs"], "description": " Returns a paginated list of active learning programs created within your account.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "active", "learn", "program", "create", "within", "account"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/courseMaterials/{courseId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "course", "materials", "course", "identifer"], "description": " Returns a paginated list of individual course materials for a given course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "individual", "course", "material", "give", "course"]}
{"http_verb": "GET ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "curriculum", "collections"], "description": " Returns a paginated list of curriculum collections in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "curriculum", "collection", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " Returns a paginated list of pending invitations in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "pende", "invitation", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds a user as an invitee to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "DELETE ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations", "program", "idexternal", "identifer"], "description": " Delete a pending program invitation.\n", "parameter": "", "processed_des_para": ["delete", "pende", "program", "invitation"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations?action=multiCreate ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds multiple users as invitees to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "multiple", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Returns a paginated list of accepted members in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "accept", "member", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Creates a program membership for the user. Note that this will only work if the user already has a Coursera account.\n", "parameter": "", "processed_des_para": ["create", "program", "membership", "user", "note", "work", "user", "already", "coursera", "account"]}
{"http_verb": "DELETE\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " Delete a user from the program. The membership id here is the id returned by the API call to list of memberships. The learner will need to be reinvited to rejoin the program.\n", "parameter": "", "processed_des_para": ["delete", "user", "program", "membership", "identifer", "identifer", "return", "ap", "call", "list", "membership", "learner", "need", "reinvite", "rejoin", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " This checks whether a user is a member of a specified program. The external user id in the request will be set either via SSO, or added when inviting the user.\n", "parameter": "", "processed_des_para": ["check", "whether", "user", "member", "specify", "program", "external", "user", "identifer", "request", "set", "either", "via", "ss", "add", "invite", "user"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments"], "description": " Enrolls a selected user into a specific course. Note that this will only work if the user already has a Coursera account and a current program membership.\n", "parameter": "", "processed_des_para": ["enroll", "select", "user", "specific", "course", "note", "work", "user", "already", "coursera", "account", "current", "program", "membership"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments/{external_id~content_type~content_id} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments", "external", "idcontent", "typecontent", "identifer"], "description": " For a specific user, return whether they are currently enrolled in a specific course\n", "parameter": "", "processed_des_para": ["specific", "user", "return", "whether", "currently", "enrol", "specific", "course"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "users"], "description": " Update a user data in organization's program by email or externalId.\n", "parameter": "", "processed_des_para": ["update", "user", "datum", "organization", "program", "email", "external", "identifer"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Returns a paginated list of users within your organiation.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "user", "within", "organiation"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Updates or deletes a user in the organization by email.\n", "parameter": "", "processed_des_para": ["update", "delete", "user", "organization", "email"]}
{"http_verb": "DELETE ", "uri": " /api/businesses.v1/{orgId}/users/{externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users", "external", "identifer"], "description": " Delete a user from all programs. This also revokes access to the corresponding courses/specializations in the programs.\n", "parameter": "", "processed_des_para": ["delete", "user", "program", "also", "revoke", "access", "correspond", "course", "specialization", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given organization.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "organization"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in an enterprise organization. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "organization", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/program/{programId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "program", "program", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/learner-skill-scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "learner", "skill", "scores"], "description": " Returns the skills scores of a single learner in your learning program. Max 10 skills.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "learner", "learn", "program", "max", "skill"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skills/{skillId}/scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skills", "skill", "identifer", "scores"], "description": " Returns the Skill scores of a single skill for up to 10 learners.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "skill", "learner"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in your enterprise program. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "program", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/learner-progress\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "learner", "progress"], "description": " Returns the Skillset progress of a single learner in your learning program.\n", "parameter": "", "processed_des_para": ["return", "skillset", "progress", "single", "learner", "learn", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/recommendations\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/skills/{skillId}/recommendations ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "skills", "skill", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a skill within a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "within", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents"], "description": " Returns a paginated list of courses and specializations that are available through your learning programs. If a program has a specialization, we also include the courses within it\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "specialization", "available", "learn", "program", "program", "specialization", "also", "include", "course", "within"]}
{"http_verb": "GET ", "uri": " /api/businesses.v1/{orgId}/contents/{id} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents", "identifer"], "description": " Returns a list that contains one object.\n", "parameter": "", "processed_des_para": ["return", "list", "contain", "one", "object"]}
{"http_verb": "GET ", "uri": " /api/businesses.v1/{orgId}/courseGradebookReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "course", "gradebook", "reports"], "description": " Retrieve course item-specific grading information with search criteria\n", "parameter": "", "processed_des_para": ["retrieve", "course", "item", "specific", "grade", "information", "search", "criterion"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/enrollmentReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "enrollment", "reports"], "description": " Returns a paginated list of course progress summaries for all users that are managed in your account. Each entry in the list represents a single user’s progress for a single course. The overall progress is a number between 0 to 100, highlighting percentage of items completed by the learner. It is possible for a learner to have COMPLETED a course but have overall progress < 100, as a learner needs only to pass all graded items in order to complete a course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "progress", "summarie", "user", "manage", "account", "entry", "list", "represent", "single", "user", "progress", "single", "course", "overall", "progress", "number", "highlight", "percentage", "item", "complete", "learner", "possible", "learner", "complete", "course", "overall", "progress", "learner", "need", "pass", "grade", "item", "order", "complete", "course"]}
{"http_verb": "GET ", "uri": " /api/businesses.v1/{orgId}/programs\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs"], "description": " Returns a paginated list of active learning programs created within your account.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "active", "learn", "program", "create", "within", "account"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/courseMaterials/{courseId}\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "course", "materials", "course", "identifer"], "description": " Returns a paginated list of individual course materials for a given course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "individual", "course", "material", "give", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "curriculum", "collections"], "description": " Returns a paginated list of curriculum collections in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "curriculum", "collection", "program"]}
{"http_verb": "GET ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " Returns a paginated list of pending invitations in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "pende", "invitation", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds a user as an invitee to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations?action=multiCreate ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds multiple users as invitees to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "multiple", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Returns a paginated list of accepted members in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "accept", "member", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Creates a program membership for the user. Note that this will only work if the user already has a Coursera account.\n", "parameter": "", "processed_des_para": ["create", "program", "membership", "user", "note", "work", "user", "already", "coursera", "account"]}
{"http_verb": "GET ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " This checks whether a user is a member of a specified program. The external user id in the request will be set either via SSO, or added when inviting the user.\n", "parameter": "", "processed_des_para": ["check", "whether", "user", "member", "specify", "program", "external", "user", "identifer", "request", "set", "either", "via", "ss", "add", "invite", "user"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "users"], "description": " Update a user data in organization's program by email or externalId.\n", "parameter": "", "processed_des_para": ["update", "user", "datum", "organization", "program", "email", "external", "identifer"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Returns a paginated list of users within your organiation.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "user", "within", "organiation"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Updates or deletes a user in the organization by email.\n", "parameter": "", "processed_des_para": ["update", "delete", "user", "organization", "email"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given organization.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "organization"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/program/{programId}/skillsetReport\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "program", "program", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "program"]}
{"http_verb": "GET ", "uri": " /api/rest/v1/enterprise/programs/{programId}/learner-skill-scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "learner", "skill", "scores"], "description": " Returns the skills scores of a single learner in your learning program. Max 10 skills.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "learner", "learn", "program", "max", "skill"]}
{"http_verb": "GET ", "uri": " /api/rest/v1/enterprise/programs/{programId}/skills/{skillId}/scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skills", "skill", "identifer", "scores"], "description": " Returns the Skill scores of a single skill for up to 10 learners.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "skill", "learner"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in your enterprise program. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "program", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/learner-progress ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "learner", "progress"], "description": " Returns the Skillset progress of a single learner in your learning program.\n", "parameter": "", "processed_des_para": ["return", "skillset", "progress", "single", "learner", "learn", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/recommendations\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/skills/{skillId}/recommendations ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "skills", "skill", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a skill within a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "within", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer"], "description": " BusinessOrganizationUser ", "parameter": " \n", "processed_des_para": ["business", "organization", "user"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Returns a paginated list of users within your organiation. ", "parameter": " \n", "processed_des_para": ["return", "paginated", "list", "user", "within", "organiation"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer"], "description": " BusinessProgram ", "parameter": " \n", "processed_des_para": ["business", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs"], "description": " Returns a paginated list of active learning programs created within your account.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "active", "learn", "program", "create", "within", "account"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents"], "description": " Returns a paginated list of courses and specializations that are available through your learning programs. If a program has a specialization, we also include the courses within it\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "specialization", "available", "learn", "program", "program", "specialization", "also", "include", "course", "within"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents/{id}\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents", "identifer"], "description": " Returns a list that contains one object.\n", "parameter": "", "processed_des_para": ["return", "list", "contain", "one", "object"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/courseGradebookReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "course", "gradebook", "reports"], "description": " Retrieve course item-specific grading information with search criteria\n", "parameter": "", "processed_des_para": ["retrieve", "course", "item", "specific", "grade", "information", "search", "criterion"]}
{"http_verb": "GET\t", "uri": "/api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "curriculum", "collections"], "description": " Returns a paginated list of curriculum collections in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "curriculum", "collection", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "curriculum", "collections"], "description": " Returns a paginated list of curriculum collections in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "curriculum", "collection", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/enrollmentReports\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "enrollment", "reports"], "description": " Returns a paginated list of course progress summaries for all users that are managed in your account. Each entry in the list represents a single user’s progress for a single course. The overall progress is a number between 0 to 100, highlighting percentage of items completed by the learner. It is possible for a learner to have COMPLETED a course but have overall progress < 100, as a learner needs only to pass all graded items in order to complete a course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "progress", "summarie", "user", "manage", "account", "entry", "list", "represent", "single", "user", "progress", "single", "course", "overall", "progress", "number", "highlight", "percentage", "item", "complete", "learner", "possible", "learner", "complete", "course", "overall", "progress", "learner", "need", "pass", "grade", "item", "order", "complete", "course"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "users"], "description": " Update a user data in organization's program by email or externalId.\n", "parameter": "", "processed_des_para": ["update", "user", "datum", "organization", "program", "email", "external", "identifer"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Updates or deletes a user in the organization by email.\n", "parameter": "", "processed_des_para": ["update", "delete", "user", "organization", "email"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsetReport\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given organization.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "organization"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/program/{programId}/skillsetReport\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "program", "program", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skills/{skillId}/scores\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skills", "skill", "identifer", "scores"], "description": " Returns the Skill scores of a single skill for up to 10 learners.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "skill", "learner"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/learner-skill-scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "learner", "skill", "scores"], "description": " Returns the skills scores of a single learner in your learning program. Max 10 skills.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "learner", "learn", "program", "max", "skill"]}
{"http_verb": "GET ", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/recommendations ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in your enterprise program. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "program", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET ", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/learner-progress\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "learner", "progress"], "description": " Returns the Skillset progress of a single learner in your learning program.\n", "parameter": "", "processed_des_para": ["return", "skillset", "progress", "single", "learner", "learn", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations?action=multiCreate\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds multiple users as invitees to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\t\n", "parameter": "", "processed_des_para": ["add", "multiple", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "GET ", "uri": " /api/businesses.v1/{orgId}/contents ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents"], "description": " Returns a paginated list of courses and specializations that are available through your learning programs. If a program has a specialization, we also include the courses within it\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "specialization", "available", "learn", "program", "program", "specialization", "also", "include", "course", "within"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents/{id} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents", "identifer"], "description": " Returns a list that contains one object.\n", "parameter": "", "processed_des_para": ["return", "list", "contain", "one", "object"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/courseGradebookReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "course", "gradebook", "reports"], "description": " Retrieve course item-specific grading information with search criteria\n", "parameter": "", "processed_des_para": ["retrieve", "course", "item", "specific", "grade", "information", "search", "criterion"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/courseMaterials/{courseId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "course", "materials", "course", "identifer"], "description": " Returns a paginated list of individual course materials for a given course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "individual", "course", "material", "give", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "curriculum", "collections"], "description": " Returns a paginated list of curriculum collections in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "curriculum", "collection", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " Returns a paginated list of pending invitations in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "pende", "invitation", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds a user as an invitee to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "DELETE ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations", "program", "idexternal", "identifer"], "description": " Delete a pending program invitation.\n", "parameter": "", "processed_des_para": ["delete", "pende", "program", "invitation"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Returns a paginated list of accepted members in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "accept", "member", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Creates a program membership for the user. Note that this will only work if the user already has a Coursera account.\n", "parameter": "", "processed_des_para": ["create", "program", "membership", "user", "note", "work", "user", "already", "coursera", "account"]}
{"http_verb": "DELETE ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " Delete a user from the program. The membership id here is the id returned by the API call to list of memberships. The learner will need to be reinvited to rejoin the program.\n", "parameter": "", "processed_des_para": ["delete", "user", "program", "membership", "identifer", "identifer", "return", "ap", "call", "list", "membership", "learner", "need", "reinvite", "rejoin", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " This checks whether a user is a member of a specified program. The external user id in the request will be set either via SSO, or added when inviting the user.\n", "parameter": "", "processed_des_para": ["check", "whether", "user", "member", "specify", "program", "external", "user", "identifer", "request", "set", "either", "via", "ss", "add", "invite", "user"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments"], "description": " Enrolls a selected user into a specific course. Note that this will only work if the user already has a Coursera account and a current program membership.\n", "parameter": "", "processed_des_para": ["enroll", "select", "user", "specific", "course", "note", "work", "user", "already", "coursera", "account", "current", "program", "membership"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "users"], "description": " Update a user data in organization's program by email or externalId.\n", "parameter": "", "processed_des_para": ["update", "user", "datum", "organization", "program", "email", "external", "identifer"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Returns a paginated list of users within your organiation.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "user", "within", "organiation"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Updates or deletes a user in the organization by email.\n", "parameter": "", "processed_des_para": ["update", "delete", "user", "organization", "email"]}
{"http_verb": "DELETE ", "uri": " /api/businesses.v1/{orgId}/users/{externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users", "external", "identifer"], "description": " Delete a user from all programs. This also revokes access to the corresponding courses/specializations in the programs.\n", "parameter": "", "processed_des_para": ["delete", "user", "program", "also", "revoke", "access", "correspond", "course", "specialization", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given organization.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "organization"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in an enterprise organization. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "organization", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/program/{programId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "program", "program", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/learner-skill-scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "learner", "skill", "scores"], "description": " Returns the skills scores of a single learner in your learning program. Max 10 skills.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "learner", "learn", "program", "max", "skill"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skills/{skillId}/scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skills", "skill", "identifer", "scores"], "description": " Returns the Skill scores of a single skill for up to 10 learners.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "skill", "learner"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in your enterprise program. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "program", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/learner-progress ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "learner", "progress"], "description": " Returns the Skillset progress of a single learner in your learning program.\n", "parameter": "", "processed_des_para": ["return", "skillset", "progress", "single", "learner", "learn", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/recommendations\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/skills/{skillId}/recommendations ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "skills", "skill", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a skill within a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "within", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents"], "description": " Returns a paginated list of courses and specializations that are available through your learning programs. If a program has a specialization, we also include the courses within it\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "specialization", "available", "learn", "program", "program", "specialization", "also", "include", "course", "within"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents/{id} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents", "identifer"], "description": " Returns a list that contains one object.\n", "parameter": "", "processed_des_para": ["return", "list", "contain", "one", "object"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/courseGradebookReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "course", "gradebook", "reports"], "description": " Retrieve course item-specific grading information with search criteria\n", "parameter": "", "processed_des_para": ["retrieve", "course", "item", "specific", "grade", "information", "search", "criterion"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/enrollmentReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "enrollment", "reports"], "description": " Returns a paginated list of course progress summaries for all users that are managed in your account. Each entry in the list represents a single user’s progress for a single course. The overall progress is a number between 0 to 100, highlighting percentage of items completed by the learner. It is possible for a learner to have COMPLETED a course but have overall progress < 100, as a learner needs only to pass all graded items in order to complete a course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "progress", "summarie", "user", "manage", "account", "entry", "list", "represent", "single", "user", "progress", "single", "course", "overall", "progress", "number", "highlight", "percentage", "item", "complete", "learner", "possible", "learner", "complete", "course", "overall", "progress", "learner", "need", "pass", "grade", "item", "order", "complete", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs"], "description": " Returns a paginated list of active learning programs created within your account. \n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "active", "learn", "program", "create", "within", "account"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/courseMaterials/{courseId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "course", "materials", "course", "identifer"], "description": " Returns a paginated list of individual course materials for a given course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "individual", "course", "material", "give", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "curriculum", "collections"], "description": " Returns a paginated list of curriculum collections in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "curriculum", "collection", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " Returns a paginated list of pending invitations in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "pende", "invitation", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds a user as an invitee to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "DELETE ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations/{programId~externalId}\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations", "program", "idexternal", "identifer"], "description": " Delete a pending program invitation.\n", "parameter": "", "processed_des_para": ["delete", "pende", "program", "invitation"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations?action=multiCreate ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds multiple users as invitees to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "multiple", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Returns a paginated list of accepted members in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "accept", "member", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Creates a program membership for the user. Note that this will only work if the user already has a Coursera account.\n", "parameter": "", "processed_des_para": ["create", "program", "membership", "user", "note", "work", "user", "already", "coursera", "account"]}
{"http_verb": "DELETE\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " Delete a user from the program. The membership id here is the id returned by the API call to list of memberships. The learner will need to be reinvited to rejoin the program.\n", "parameter": "", "processed_des_para": ["delete", "user", "program", "membership", "identifer", "identifer", "return", "ap", "call", "list", "membership", "learner", "need", "reinvite", "rejoin", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " This checks whether a user is a member of a specified program. The external user id in the request will be set either via SSO, or added when inviting the user.\n", "parameter": "", "processed_des_para": ["check", "whether", "user", "member", "specify", "program", "external", "user", "identifer", "request", "set", "either", "via", "ss", "add", "invite", "user"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments"], "description": " Enrolls a selected user into a specific course. Note that this will only work if the user already has a Coursera account and a current program membership.\n", "parameter": "", "processed_des_para": ["enroll", "select", "user", "specific", "course", "note", "work", "user", "already", "coursera", "account", "current", "program", "membership"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments/{external_id~content_type~content_id} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments", "external", "idcontent", "typecontent", "identifer"], "description": " For a specific user, return whether they are currently enrolled in a specific course\n", "parameter": "", "processed_des_para": ["specific", "user", "return", "whether", "currently", "enrol", "specific", "course"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "users"], "description": " Update a user data in organization's program by email or externalId.\n", "parameter": "", "processed_des_para": ["update", "user", "datum", "organization", "program", "email", "external", "identifer"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Returns a paginated list of users within your organiation.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "user", "within", "organiation"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Updates or deletes a user in the organization by email.\n", "parameter": "", "processed_des_para": ["update", "delete", "user", "organization", "email"]}
{"http_verb": "DELETE  ", "uri": " /api/businesses.v1/{orgId}/users/{externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users", "external", "identifer"], "description": " Delete a user from all programs. This also revokes access to the corresponding courses/specializations in the programs.\n", "parameter": "", "processed_des_para": ["delete", "user", "program", "also", "revoke", "access", "correspond", "course", "specialization", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given organization.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "organization"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsets\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in an enterprise organization. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "organization", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/program/{programId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "program", "program", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/learner-skill-scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "learner", "skill", "scores"], "description": " Returns the skills scores of a single learner in your learning program. Max 10 skills.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "learner", "learn", "program", "max", "skill"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skills/{skillId}/scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skills", "skill", "identifer", "scores"], "description": " Returns the Skill scores of a single skill for up to 10 learners.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "skill", "learner"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in your enterprise program. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "program", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/learner-progress ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "learner", "progress"], "description": " Returns the Skillset progress of a single learner in your learning program.\n", "parameter": "", "processed_des_para": ["return", "skillset", "progress", "single", "learner", "learn", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/recommendations ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/skills/{skillId}/recommendations ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "skills", "skill", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a skill within a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "within", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents\t ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents"], "description": " Returns a paginated list of courses and specializations that are available through your learning programs. If a program has a specialization, we also include the courses within it\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "specialization", "available", "learn", "program", "program", "specialization", "also", "include", "course", "within"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents/{id} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents", "identifer"], "description": " Returns a list that contains one object.\n", "parameter": "", "processed_des_para": ["return", "list", "contain", "one", "object"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "curriculum", "collections"], "description": " Returns a paginated list of curriculum collections in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "curriculum", "collection", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations?action=multiCreate ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds multiple users as invitees to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "multiple", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/courseMaterials/{courseId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "course", "materials", "course", "identifer"], "description": " Returns a paginated list of individual course materials for a given course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "individual", "course", "material", "give", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/enrollmentReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "enrollment", "reports"], "description": " Returns a paginated list of course progress summaries for all users that are managed in your account. Each entry in the list represents a single user’s progress for a single course. The overall progress is a number between 0 to 100, highlighting percentage of items completed by the learner. It is possible for a learner to have COMPLETED a course but have overall progress < 100, as a learner needs only to pass all graded items in order to complete a course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "progress", "summarie", "user", "manage", "account", "entry", "list", "represent", "single", "user", "progress", "single", "course", "overall", "progress", "number", "highlight", "percentage", "item", "complete", "learner", "possible", "learner", "complete", "course", "overall", "progress", "learner", "need", "pass", "grade", "item", "order", "complete", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/courseMaterials/{courseId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "course", "materials", "course", "identifer"], "description": " Returns a paginated list of individual course materials for a given course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "individual", "course", "material", "give", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/courseMaterials/{courseId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "course", "materials", "course", "identifer"], "description": " Returns a paginated list of individual course materials for a given course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "individual", "course", "material", "give", "course"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations?action=multiCreate ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds multiple users as invitees to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\t\n", "parameter": "", "processed_des_para": ["add", "multiple", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/enrollmentReports ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "enrollment", "reports"], "description": " Returns a paginated list of course progress summaries for all users that are managed in your account. Each entry in the list represents a single user’s progress for a single course. The overall progress is a number between 0 to 100, highlighting percentage of items completed by the learner. It is possible for a learner to have COMPLETED a course but have overall progress < 100, as a learner needs only to pass all graded items in order to complete a course.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "progress", "summarie", "user", "manage", "account", "entry", "list", "represent", "single", "user", "progress", "single", "course", "overall", "progress", "number", "highlight", "percentage", "item", "complete", "learner", "possible", "learner", "complete", "course", "overall", "progress", "learner", "need", "pass", "grade", "item", "order", "complete", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs"], "description": " Returns a paginated list of active learning programs created within your account.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "active", "learn", "program", "create", "within", "account"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "curriculum", "collections"], "description": " Returns a paginated list of curriculum collections in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "curriculum", "collection", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " Returns a paginated list of pending invitations in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "pende", "invitation", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Returns a paginated list of accepted members in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "accept", "member", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Creates a program membership for the user. Note that this will only work if the user already has a Coursera account.\n", "parameter": "", "processed_des_para": ["create", "program", "membership", "user", "note", "work", "user", "already", "coursera", "account"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " This checks whether a user is a member of a specified program. The external user id in the request will be set either via SSO, or added when inviting the user.\n", "parameter": "", "processed_des_para": ["check", "whether", "user", "member", "specify", "program", "external", "user", "identifer", "request", "set", "either", "via", "ss", "add", "invite", "user"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments"], "description": " Enrolls a selected user into a specific course. Note that this will only work if the user already has a Coursera account and a current program membership.\n", "parameter": "", "processed_des_para": ["enroll", "select", "user", "specific", "course", "note", "work", "user", "already", "coursera", "account", "current", "program", "membership"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments/{external_id~content_type~content_id} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments", "external", "idcontent", "typecontent", "identifer"], "description": " For a specific user, return whether they are currently enrolled in a specific course\n", "parameter": "", "processed_des_para": ["specific", "user", "return", "whether", "currently", "enrol", "specific", "course"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/users ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "users"], "description": " Returns a paginated list of users within your organiation.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "user", "within", "organiation"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given organization.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "organization"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsets\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in an enterprise organization. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "organization", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/program/{programId}/skillsetReport ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "program", "program", "identifer", "skillset", "report"], "description": " Returns a paginated list of Skillsets reports of the given program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skillset", "report", "give", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/learner-skill-scores ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "learner", "skill", "scores"], "description": " Returns the skills scores of a single learner in your learning program. Max 10 skills.\n", "parameter": "", "processed_des_para": ["return", "skill", "score", "single", "learner", "learn", "program", "max", "skill"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in your enterprise program. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "program", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/learner-progress ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "learner", "progress"], "description": " Returns the Skillset progress of a single learner in your learning program.\n", "parameter": "", "processed_des_para": ["return", "skillset", "progress", "single", "learner", "learn", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/recommendations ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/skills/{skillId}/recommendations ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "skillset", "identifer", "skills", "skill", "identifer", "recommendations"], "description": " Returns a paginated list of all content recommendations for a skill within a SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "content", "recommendation", "skill", "within", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents"], "description": " Returns a paginated list of courses and specializations that are available through your learning programs. If a program has a specialization, we also include the courses within it\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "specialization", "available", "learn", "program", "program", "specialization", "also", "include", "course", "within"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents/{id} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents", "identifer"], "description": " Returns a list that contains one object.\n", "parameter": "", "processed_des_para": ["return", "list", "contain", "one", "object"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "curriculum", "collections"], "description": " Returns a paginated list of curriculum collections in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "curriculum", "collection", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " Returns a paginated list of pending invitations in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "pende", "invitation", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents"], "description": " Returns a paginated list of courses and specializations that are available through your learning programs. If a program has a specialization, we also include the courses within it\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "course", "specialization", "available", "learn", "program", "program", "specialization", "also", "include", "course", "within"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/contents/{id} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "contents", "identifer"], "description": " Returns a list that contains one object.\n", "parameter": "", "processed_des_para": ["return", "list", "contain", "one", "object"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Returns a paginated list of accepted members in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "accept", "member", "program"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " \tReturns a paginated list of accepted members in your program.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "accept", "member", "program"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsets\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in an enterprise organization. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "organization", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET ", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in your enterprise program. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "program", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/organizations/{orgId}/skillsets ", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "organizations", "organization", "identifer", "skillsets"], "description": " Returns a paginated list of all SkillSets in an enterprise organization. Each entry in the list represents a single SkillSet.\n", "parameter": "", "processed_des_para": ["return", "paginated", "list", "skill", "set", "enterprise", "organization", "entry", "list", "represent", "single", "skill", "set"]}
{"http_verb": "GET\t", "uri": " /api/rest/v1/enterprise/programs/{programId}/skillsets/learner-progress\t", "processed_uri": ["application", "programming", "interface", "rest", "enterprise", "programs", "program", "identifer", "skillsets", "learner", "progress"], "description": " Returns the Skillset progress of a single learner in your learning program.\n", "parameter": "", "processed_des_para": ["return", "skillset", "progress", "single", "learner", "learn", "program"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds a user as an invitee to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/invitations?action=multiCreate ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "invitations"], "description": " This adds multiple users as invitees to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.\n", "parameter": "", "processed_des_para": ["add", "multiple", "user", "invitee", "program", "external", "user", "identifer", "request", "lm", "application", "specific", "identifier", "later", "use", "downstream", "call", "also", "trigger", "invitation", "email", "send", "automatically", "specify", "send", "email", "request"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Creates a program membership for the user. Note that this will only work if the user already has a Coursera account.\n", "parameter": "", "processed_des_para": ["create", "program", "membership", "user", "note", "work", "user", "already", "coursera", "account"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " This checks whether a user is a member of a specified program. The external user id in the request will be set either via SSO, or added when inviting the user.\n", "parameter": "", "processed_des_para": ["check", "whether", "user", "member", "specify", "program", "external", "user", "identifer", "request", "set", "either", "via", "ss", "add", "invite", "user"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments"], "description": " Enrolls a selected user into a specific course. Note that this will only work if the user already has a Coursera account and a current program membership.\n", "parameter": "", "processed_des_para": ["enroll", "select", "user", "specific", "course", "note", "work", "user", "already", "coursera", "account", "current", "program", "membership"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships"], "description": " Creates a program membership for the user. Note that this will only work if the user already has a Coursera account.\n", "parameter": "", "processed_des_para": ["create", "program", "membership", "user", "note", "work", "user", "already", "coursera", "account"]}
{"http_verb": "GET\t", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId} ", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "memberships", "program", "idexternal", "identifer"], "description": " This checks whether a user is a member of a specified program. The external user id in the request will be set either via SSO, or added when inviting the user.\n", "parameter": "", "processed_des_para": ["check", "whether", "user", "member", "specify", "program", "external", "user", "identifer", "request", "set", "either", "via", "ss", "add", "invite", "user"]}
{"http_verb": "POST ", "uri": " /api/businesses.v1/{orgId}/programs/{programId}/programEnrollments\t", "processed_uri": ["application", "programming", "interface", "businessesv", "organization", "identifer", "programs", "program", "identifer", "program", "enrollments"], "description": " Enrolls a selected user into a specific course. Note that this will only work if the user already has a Coursera account and a current program membership.", "parameter": "", "processed_des_para": ["enroll", "select", "user", "specific", "course", "note", "work", "user", "already", "coursera", "account", "current", "program", "membership"]}
