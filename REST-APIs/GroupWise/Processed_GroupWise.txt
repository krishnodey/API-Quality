{"http_verb": "GET ", "uri": " /list/{type} ", "processed_uri": ["list", "type"], "description": " Get a list of Objects given the type For example: /gwadmin-service/list/USER (will return all users)\n", "parameter": "", "processed_des_para": ["get", "list", "object", "give", "type", "example", "gwadmin", "service", "list", "use", "return", "user"]}
{"http_verb": "GET ", "uri": " /list/{type}/{base} ", "processed_uri": ["list", "type", "base"], "description": " Get a list of Objects given the type For example: /gwadmin-service/list/USER (will return all users)\n", "parameter": "", "processed_des_para": ["get", "list", "object", "give", "type", "example", "gwadmin", "service", "list", "use", "return", "user"]}
{"http_verb": "GET ", "uri": " /application ", "processed_uri": ["application"], "description": " Generates and displays the API documentation (this document) taken from the WADL and programming documentation. Note: You can also use \"application.wadl\" resource to get the actual WADL document.\n", "parameter": "", "processed_des_para": ["generate", "display", "ap", "documentation", "document", "take", "wad", "programming", "documentation", "note", "also", "use", "applicationwadl", "resource", "get", "actual", "wad", "document"]}
{"http_verb": "GET ", "uri": " /async?state ", "processed_uri": ["asynchronization"], "description": " Used to run and track asynchronous operations. Use AsyncApi.run() to schedule a new asynchronous job. The job will be registered in the list of running jobs and will be queryable through the /async/{jobId} resource. After the jobs completes it will remain in the list of active jobs for REMOVE_DELAY (currently 60 seconds) at which time it is auto-removed. It can be removed before that time using the DELETE on /async/{jobId}.\n", "parameter": "", "processed_des_para": ["use", "run", "track", "asynchronous", "operation", "use", "asynchronization", "apirun", "schedule", "new", "asynchronous", "job", "job", "register", "list", "run", "job", "queryable", "asynchronization", "job", "identification", "resource", "job", "complete", "remain", "list", "active", "job", "remov", "dela", "currently", "second", "time", "auto", "remove", "remove", "time", "use", "delet", "asynchronization", "job", "identification"]}
{"http_verb": "GET ", "uri": " /async/{id} ", "processed_uri": ["asynchronization", "identification"], "description": " Get a particular asynchronous job status\n", "parameter": "", "processed_des_para": ["get", "particular", "asynchronous", "job", "status"]}
{"http_verb": "DELETE ", "uri": " /async/{id} ", "processed_uri": ["asynchronization", "identification"], "description": " Delete a job. If the job is done, then it is removed. If the job is not yet done then a request will be sent to the thread executing the job to cancel it. Once the job is canceled it will remove itself from the job list.\n", "parameter": "", "processed_des_para": ["delete", "job", "job", "do", "remove", "job", "yet", "do", "request", "send", "thread", "execute", "job", "cancel", "job", "cancel", "remove", "job", "list"]}
{"http_verb": "GET ", "uri": " /diagnostics/attributes?locale ", "processed_uri": ["diagnostics", "attributes"], "description": " Return a map of attribute id to names.\n", "parameter": "", "processed_des_para": ["return", "map", "attribute", "identification", "name"]}
{"http_verb": "GET ", "uri": " /diagnostics/index ", "processed_uri": ["diagnostics", "index"], "description": " Returns the list of available indices to query\n", "parameter": "", "processed_des_para": ["return", "list", "available", "index", "query"]}
{"http_verb": "GET ", "uri": " /diagnostics/index/{index}?attrs ", "processed_uri": ["diagnostics", "index", "index"], "description": " Reads objects from the specified index\n", "parameter": "", "processed_des_para": ["read", "object", "specify", "index"]}
{"http_verb": "GET ", "uri": " /diagnostics/object/{id} ", "processed_uri": ["diagnostics", "object", "identification"], "description": " Dump an object from the domain database identified by it's DRN and record type.\n", "parameter": "", "processed_des_para": ["dump", "object", "domain", "database", "identify", "dr", "record", "type"]}
{"http_verb": "GET ", "uri": " /domains ", "processed_uri": ["domains"], "description": " Get a list of Domains for this system.\n", "parameter": "", "processed_des_para": ["get", "list", "domain", "system"]}
{"http_verb": "POST ", "uri": " /domains ", "processed_uri": ["domains"], "description": " Create a domain given the data. Note: The \"rebuild\" resource should be used to create the related database file (wpdomain.db) afterwards.\n", "parameter": "", "processed_des_para": ["create", "domain", "give", "datum", "note", "rebuild", "resource", "use", "create", "related", "database", "file", "wpdomaindb", "afterwards"]}
{"http_verb": "DELETE ", "uri": " /domains/{domain} ", "processed_uri": ["domains", "domain"], "description": " Delete a specific Domain given the domain name\n", "parameter": "", "processed_des_para": ["delete", "specific", "domain", "give", "domain", "name"]}
{"http_verb": "PUT ", "uri": " /domains/{domain} ", "processed_uri": ["domains", "domain"], "description": " Update a GroupWise Domain given the Domain data\n", "parameter": "", "processed_des_para": ["update", "group", "wise", "domain", "give", "domain", "datum"]}
{"http_verb": "GET ", "uri": " /domains/{domain} ", "processed_uri": ["domains", "domain"], "description": " Get a specific Domain given the name\n", "parameter": "", "processed_des_para": ["get", "specific", "domain", "give", "name"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/addressbook/fields ", "processed_uri": ["domains", "domain", "address", "book", "fields"], "description": " Returns the address book fields available for adding to a view. Note that this excludes admin defined fields which can only be added to a view if they have been properly mapped to a directory attribute.\n", "parameter": "", "processed_des_para": ["return", "address", "book", "field", "available", "add", "view", "note", "exclude", "admin", "define", "field", "add", "view", "properly", "map", "directory", "attribute"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/addressbook/labels ", "processed_uri": ["domains", "domain", "address", "book", "labels"], "description": " Get the address book labels defined for the domain\n", "parameter": "", "processed_des_para": ["get", "address", "book", "label", "define", "domain"]}
{"http_verb": "PUT ", "uri": " /domains/{domain}/addressbook/labels/{field} ", "processed_uri": ["domains", "domain", "address", "book", "labels", "field"], "description": " Set the address book label for the given field\n", "parameter": "", "processed_des_para": ["set", "address", "book", "label", "give", "field"]}
{"http_verb": "DELETE ", "uri": " /domains/{domain}/addressbook/labels/{field} ", "processed_uri": ["domains", "domain", "address", "book", "labels", "field"], "description": " Delete the address book label for the given field\n", "parameter": "", "processed_des_para": ["delete", "address", "book", "label", "give", "field"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/addressbook/view ", "processed_uri": ["domains", "domain", "address", "book", "view"], "description": " Returns the address book view defined for the domain\n", "parameter": "", "processed_des_para": ["return", "address", "book", "view", "define", "domain"]}
{"http_verb": "PUT ", "uri": " /domains/{domain}/addressbook/view ", "processed_uri": ["domains", "domain", "address", "book", "view"], "description": " Returns the address book view defined for the domain\n", "parameter": "", "processed_des_para": ["return", "address", "book", "view", "define", "domain"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/administrator ", "processed_uri": ["domains", "domain", "administrator"], "description": " Return the administrator for this domain\n", "parameter": "", "processed_des_para": ["return", "administrator", "domain"]}
{"http_verb": "PUT ", "uri": " /domains/{domain}/administrator ", "processed_uri": ["domains", "domain", "administrator"], "description": " Set the administrator for this domain\n", "parameter": "", "processed_des_para": ["set", "administrator", "domain"]}
{"http_verb": "DELETE ", "uri": " /domains/{domain}/administrator ", "processed_uri": ["domains", "domain", "administrator"], "description": " Clear the administrator for this domain\n", "parameter": "", "processed_des_para": ["clear", "administrator", "domain"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/clientoptions?attrs ", "processed_uri": ["domains", "domain", "client", "options"], "description": " Get the Client Options under a specific Domain\n", "parameter": "", "processed_des_para": ["get", "client", "option", "specific", "domain"]}
{"http_verb": "PUT ", "uri": " /domains/{domain}/clientoptions?attrs ", "processed_uri": ["domains", "domain", "client", "options"], "description": " Update the Client Options under a specific Domain\n", "parameter": "", "processed_des_para": ["update", "client", "option", "specific", "domain"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/customaddresses ", "processed_uri": ["domains", "domain", "custom", "addresses"], "description": " Get all Custom Addresses under a specific Domain\n", "parameter": "", "processed_des_para": ["get", "custom", "address", "specific", "domain"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/customaddresses/test?testAddress ", "processed_uri": ["domains", "domain", "custom", "addresses", "test"], "description": " Test the Custom Addresses that are associated with this Domain using the specified testAddress value. Returns a response that is the evaluated custom address test string\n", "parameter": "", "processed_des_para": ["test", "custom", "address", "associate", "domain", "use", "specify", "test", "address", "value", "return", "response", "evaluate", "custom", "address", "test", "string"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/gatewaysubdirs ", "processed_uri": ["domains", "domain", "gateway", "directories"], "description": " List the gateway sub-directories for the domain.\n", "parameter": "", "processed_des_para": ["list", "gateway", "sub", "directory", "domain"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/info ", "processed_uri": ["domains", "domain", "info"], "description": " Retrieve statistical information about the objects contained in this domain\n", "parameter": "", "processed_des_para": ["retrieve", "statistical", "information", "object", "contain", "domain"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/links?direction ", "processed_uri": ["domains", "domain", "links"], "description": " List the links for this domain. Specify a 'direction' query parameter to read either the inbound or outbound links. If no direction is specified then all links are read (both inbound and outbound).\n", "parameter": "", "processed_des_para": ["list", "link", "domain", "specify", "direction", "query", "parameter", "read", "either", "inbound", "outbound", "link", "direction", "specify", "link", "read", "inbound", "outbound"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/links/{link} ", "processed_uri": ["domains", "domain", "links", "link"], "description": " Get the domain link between domainName and linkName\n", "parameter": "", "processed_des_para": ["get", "domain", "domain", "name", "name"]}
{"http_verb": "PUT ", "uri": " /domains/{domain}/links/{link} ", "processed_uri": ["domains", "domain", "links", "link"], "description": " Update the domain link between domainName and linkName\n", "parameter": "", "processed_des_para": ["update", "domain", "domain", "name", "name"]}
{"http_verb": "POST ", "uri": " /domains/{domain}/rebuild ", "processed_uri": ["domains", "domain", "rebuild"], "description": " Rebuild a specific Domain given the Domain name. This command will rebuild the database (wpdomain.db) file and place it in the respective folder where it belongs. It will also ensure that the service is configured properly for this Domain. Note that this command requires an AdminService object be configured to communicate with the respective service.\n", "parameter": "", "processed_des_para": ["rebuild", "specific", "domain", "give", "domain", "name", "command", "rebuild", "database", "wpdomaindb", "file", "place", "respective", "folder", "belong", "also", "ensure", "service", "configure", "properly", "domain", "note", "command", "require", "admin", "service", "object", "configure", "communicate", "respective", "service"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/refaccesscontrols ", "processed_uri": ["domains", "domain", "reference", "access", "controls"], "description": " Get the Access Control List for the domain\n", "parameter": "", "processed_des_para": ["get", "access", "control", "list", "domain"]}
{"http_verb": "PUT ", "uri": " /domains/{domain}/refaccesscontrols ", "processed_uri": ["domains", "domain", "reference", "access", "controls"], "description": " Update the Access Control List for the domain\n", "parameter": "", "processed_des_para": ["update", "access", "control", "list", "domain"]}
{"http_verb": "GET ", "uri": " /domains/attributes ", "processed_uri": ["domains", "attributes"], "description": " Get all available Domain Attributes\n", "parameter": "", "processed_des_para": ["get", "available", "domain", "attribute"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/gateways ", "processed_uri": ["domains", "domain", "gateways"], "description": " Performs a query to find all the Gateways for this GroupWise system.\n", "parameter": "", "processed_des_para": ["perform", "query", "find", "gateway", "group", "wise", "system"]}
{"http_verb": "POST ", "uri": " /domains/{domain}/gateways ", "processed_uri": ["domains", "domain", "gateways"], "description": " Create an Gateway given the Gateway data\n", "parameter": "", "processed_des_para": ["create", "gateway", "give", "gateway", "datum"]}
{"http_verb": "DELETE ", "uri": " /domains/{domain}/gateways/{gateway} ", "processed_uri": ["domains", "domain", "gateways", "gateway"], "description": " Delete a specific Gateway given the name\n", "parameter": "", "processed_des_para": ["delete", "specific", "gateway", "give", "name"]}
{"http_verb": "PUT ", "uri": " /domains/{domain}/gateways/{gateway} ", "processed_uri": ["domains", "domain", "gateways", "gateway"], "description": " Update a Gateway given the data\n", "parameter": "", "processed_des_para": ["update", "gateway", "give", "datum"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/gateways/{gateway} ", "processed_uri": ["domains", "domain", "gateways", "gateway"], "description": " Get a specific Gateway given the name\n", "parameter": "", "processed_des_para": ["get", "specific", "gateway", "give", "name"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/gateways/{gateway}/administrators ", "processed_uri": ["domains", "domain", "gateways", "gateway", "administrators"], "description": " Performs a query to find all the administrators for this gateway\n", "parameter": "", "processed_des_para": ["perform", "query", "find", "administrator", "gateway"]}
{"http_verb": "POST ", "uri": " /domains/{domain}/gateways/{gateway}/administrators ", "processed_uri": ["domains", "domain", "gateways", "gateway", "administrators"], "description": " Adds a new administrator to this gateway.\n", "parameter": "", "processed_des_para": ["add", "new", "administrator", "gateway"]}
{"http_verb": "DELETE ", "uri": " /domains/{domain}/gateways/{gateway}/administrators/{id} ", "processed_uri": ["domains", "domain", "gateways", "gateway", "administrators", "identification"], "description": " Remove an administrator member from this gateway\n", "parameter": "", "processed_des_para": ["remove", "administrator", "member", "gateway"]}
{"http_verb": "PUT ", "uri": " /domains/{domain}/gateways/{gateway}/administrators/{id} ", "processed_uri": ["domains", "domain", "gateways", "gateway", "administrators", "identification"], "description": " Remove an administrator member from this gateway\n", "parameter": "", "processed_des_para": ["remove", "administrator", "member", "gateway"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/gateways/{gateway}/aliases ", "processed_uri": ["domains", "domain", "gateways", "gateway", "aliases"], "description": " Performs a query to find all the aliases for this gateway\n", "parameter": "", "processed_des_para": ["perform", "query", "find", "alias", "gateway"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/gateways/{gateway}/classofservice ", "processed_uri": ["domains", "domain", "gateways", "gateway", "class", "service"], "description": " List the classes of service for a specific gateway\n", "parameter": "", "processed_des_para": ["list", "class", "service", "specific", "gateway"]}
{"http_verb": "POST ", "uri": " /domains/{domain}/gateways/{gateway}/classofservice ", "processed_uri": ["domains", "domain", "gateways", "gateway", "class", "service"], "description": " Create a Gwia Class of Service for the specified gateway\n", "parameter": "", "processed_des_para": ["create", "gwia", "class", "service", "specify", "gateway"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/gateways/{gateway}/classofservice/{cosname} ", "processed_uri": ["domains", "domain", "gateways", "gateway", "class", "service", "cosname"], "description": " Get a specific Gateway given the name\n", "parameter": "", "processed_des_para": ["get", "specific", "gateway", "give", "name"]}
{"http_verb": "PUT ", "uri": " /domains/{domain}/gateways/{gateway}/classofservice/{cosname} ", "processed_uri": ["domains", "domain", "gateways", "gateway", "class", "service", "cosname"], "description": " Update a specific Class of Service given the name\n", "parameter": "", "processed_des_para": ["update", "specific", "class", "service", "give", "name"]}
{"http_verb": "DELETE ", "uri": " /domains/{domain}/gateways/{gateway}/classofservice/{cosname} ", "processed_uri": ["domains", "domain", "gateways", "gateway", "class", "service", "cosname"], "description": " Delete a specific Class of Service given the name\n", "parameter": "", "processed_des_para": ["delete", "specific", "class", "service", "give", "name"]}
{"http_verb": "GET ", "uri": " /domains/{domain}/gateways/{gateway}/classofservice/{cosname}/members ", "processed_uri": ["domains", "domain", "gateways", "gateway", "class", "service", "cosname", "members"], "description": " List the members for a specific class of service\n", "parameter": "", "processed_des_para": ["list", "member", "specific", "class", "service"]}
{"http_verb": "POST ", "uri": " /domains/{domain}/gateways/{gateway}/classofservice/{cosname}/members ", "processed_uri": ["domains", "domain", "gateways", "gateway", "class", "service", "cosname", "members"], "description": " Adds a new member to this class of service. The 'id' field of groupMember is required and all other fields are ignored\n", "parameter": "", "processed_des_para": ["add", "new", "member", "class", "service", "identification", "field", "group", "member", "require", "field", "ignore"]}
{"http_verb": "DELETE ", "uri": " /domains/{domain}/gateways/{gateway}/classofservice/{cosname}/members/{member} ", "processed_uri": ["domains", "domain", "gateways", "gateway", "class", "service", "cosname", "members", "member"], "description": " Remove a member from this class of service by id\n", "parameter": "", "processed_des_para": ["remove", "member", "class", "service", "identification"]}
{"http_verb": "POST ", "uri": " /domains/{domain}/gateways/{gateway}/recoverDb ", "processed_uri": ["domains", "domain", "gateways", "gateway", "recover", "db"], "description": " Recover the Access Control database for the specified gateway. This command will recover the database in place.", "parameter": "", "processed_des_para": ["recover", "access", "control", "database", "specify", "gateway", "command", "recover", "database", "place"]}
