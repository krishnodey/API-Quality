{"http_verb": "GET ", "uri": " /oauth/authorize ", "processed_uri": ["authentication", "authorize"], "description": " The Authorize endpoint allows you to redirect a user to the authorization URL for your application.\n", "parameter": "", "processed_des_para": ["authorize", "endpoint", "allow", "redirect", "user", "authorization", "ur", "application"]}
{"http_verb": "POST ", "uri": " /oauth/token ", "processed_uri": ["authentication", "token"], "description": " The Login endpoint allows you to authorize your application and get an access_token using the authorization_code or client_credentials grant. You can also refresh the access_token using the refresh_token grant.\n", "parameter": "", "processed_des_para": ["login", "endpoint", "allow", "authorize", "application", "get", "access", "token", "use", "authorization", "code", "client", "credential", "grant", "also", "refresh", "access", "token", "use", "refresh", "token", "grant"]}
{"http_verb": "GET ", "uri": " /history ", "processed_uri": ["history"], "description": " The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.\n", "parameter": "", "processed_des_para": ["history", "array", "response", "maximum", "length", "base", "limit", "parameter", "response", "value", "count", "exceed", "limit", "therefore", "subsequent", "ap", "request", "necessary"]}
{"http_verb": "GET ", "uri": " /payment-methods ", "processed_uri": ["payment", "methods"], "description": " The Payment Methods endpoint allows retrieving the list of the user�s available payment methods. These can be leveraged in order to supply a payment_method_id to the POST /requests endpoint.\n", "parameter": "", "processed_des_para": ["payment", "method", "endpoint", "allow", "retrieve", "list", "user", "available", "payment", "method", "leveraged", "order", "supply", "payment", "method", "identification", "pos", "request", "endpoint"]}
{"http_verb": "GET ", "uri": " /products ", "processed_uri": ["products"], "description": " The Products endpoint returns information about the Uber products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order. Some products, such as Uber Eats, are not returned by this endpoint.\n", "parameter": "", "processed_des_para": ["product", "endpoint", "return", "information", "uber", "product", "offer", "give", "location", "response", "include", "display", "name", "detail", "product", "list", "product", "proper", "display", "order", "product", "uber", "eat", "return", "endpoint"]}
{"http_verb": "GET ", "uri": " /products/{product_id} ", "processed_uri": ["products", "product", "identification"], "description": " The Products Detail endpoint returns information about a specific Uber product. The response includes the display name and other details about the product.\n", "parameter": "", "processed_des_para": ["product", "detail", "endpoint", "return", "information", "specific", "uber", "product", "response", "include", "display", "name", "detail", "product"]}
{"http_verb": "GET ", "uri": " /estimates/price ", "processed_uri": ["estimates", "price"], "description": " The Price Estimates endpoint returns an estimated price range for each product offered at a given location. The price estimate is provided as a formatted string with the full price range and the localized currency symbol.\n", "parameter": "", "processed_des_para": ["price", "estimate", "endpoint", "return", "estimate", "price", "range", "product", "offer", "give", "location", "price", "estimate", "provide", "format", "string", "full", "price", "range", "localize", "currency", "symbol"]}
{"http_verb": "GET ", "uri": " /estimates/time ", "processed_uri": ["estimates", "time"], "description": " The Time Estimates endpoint returns ETAs for all products currently available at a given location, with the ETA for each product expressed as integers in seconds. If a product returned from GET /v1.2/products is not returned from this endpoint for a given latitude/longitude pair then there are currently none of that product available to request. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.\n", "parameter": "", "processed_des_para": ["time", "estimate", "endpoint", "return", "et", "product", "currently", "available", "give", "location", "et", "product", "express", "integer", "second", "product", "return", "ge", "product", "return", "endpoint", "give", "latitude", "longitude", "pair", "currently", "none", "product", "available", "request", "recommend", "endpoint", "call", "every", "minute", "provide", "accurate", "date", "et"]}
{"http_verb": "POST ", "uri": " /requests/estimate ", "processed_uri": ["requests", "estimate"], "description": " The Request Estimate endpoint allows a ride to be estimated given the desired product, start, and end locations. If the pickup ETA is null, there are no cars available even if an estimate may still be given to the user.\n", "parameter": "", "processed_des_para": ["request", "estimate", "endpoint", "allow", "ride", "estimate", "give", "desire", "product", "start", "end", "location", "pickup", "et", "null", "car", "available", "even", "estimate", "still", "give", "user"]}
{"http_verb": "GET ", "uri": " /requests/current ", "processed_uri": ["requests", "current"], "description": " The Ride Request endpoint allows retrieving real-time details for an ongoing trip. This endpoint behaves similarly to the GET /requests/{request_id} endpoint, except you do not need to provide a request_id. If there is no trip in progress the endpoint will result in a 404 not found error. This endpoint will only work for trips requested through your app unless you have the all_trips scope. By default, only details about trips your app requested will be returned. If your app has all_trips scope, however, trip details will be returned for all trips irrespective of which application initiated them.\n", "parameter": "", "processed_des_para": ["ride", "request", "endpoint", "allow", "retrieve", "real", "time", "detail", "ongoing", "trip", "endpoint", "behave", "similarly", "ge", "request", "request", "identification", "endpoint", "except", "need", "provide", "request", "identification", "trip", "progress", "endpoint", "result", "find", "error", "endpoint", "work", "trip", "request", "application", "unless", "trip", "scope", "default", "detail", "trip", "application", "request", "return", "application", "trip", "scope", "however", "trip", "detail", "return", "trip", "irrespective", "application", "initiate"]}
{"http_verb": "PATCH ", "uri": " /requests/current ", "processed_uri": ["requests", "current"], "description": " The Ride Request endpoint allows updating an ongoing request�s destination. This endpoint behaves similarly to the PATCH /v1.2/requests/{request_id} endpoint, except you do not need to provide a request_id. If there is no trip in progress the endpoint will result in a 404 not found error. This endpoint will only work for trips requested through your app unless you have the all_trips scope.\n", "parameter": "", "processed_des_para": ["ride", "request", "endpoint", "allow", "update", "ongoing", "request", "destination", "endpoint", "behave", "similarly", "patc", "request", "request", "identification", "endpoint", "except", "need", "provide", "request", "identification", "trip", "progress", "endpoint", "result", "find", "error", "endpoint", "work", "trip", "request", "application", "unless", "trip", "scope"]}
{"http_verb": "DELETE ", "uri": " /requests/current ", "processed_uri": ["requests", "current"], "description": " The Ride Request endpoint allows cancellation of the user�s current trip. This endpoint behaves similarly to the DELETE /v1.2/requests/{request_id} endpoint, except you do not need to provide a request_id. If there is no trip in progress the endpoint will result in a 404 not found error. This endpoint will only work for trips requested through your app unless you have the all_trips scope.\n", "parameter": "", "processed_des_para": ["ride", "request", "endpoint", "allow", "cancellation", "user", "current", "trip", "endpoint", "behave", "similarly", "delet", "request", "request", "identification", "endpoint", "except", "need", "provide", "request", "identification", "trip", "progress", "endpoint", "result", "find", "error", "endpoint", "work", "trip", "request", "application", "unless", "trip", "scope"]}
{"http_verb": "GET ", "uri": " /requests/{request_id}/receipt ", "processed_uri": ["requests", "request", "identification", "receipt"], "description": " The Ride Request endpoint allows getting the receipt information of the completed request. There may be a delay from when the trip ends and when the receipt is ready. The receipt is only available after the requests.receipt_ready webhook notification is sent. The trip receipt may be adjusted after the requests.receipt_ready webhook is sent as finalized receipts can be delayed.\n", "parameter": "", "processed_des_para": ["ride", "request", "endpoint", "allow", "get", "receipt", "information", "complete", "request", "delay", "trip", "end", "receipt", "ready", "receipt", "available", "requestsreceipt", "ready", "webhook", "notification", "send", "trip", "receipt", "adjust", "requestsreceipt", "ready", "webhook", "send", "finalized", "receipt", "delay"]}
{"http_verb": "GET ", "uri": " /requests/{request_id}/map ", "processed_uri": ["requests", "request", "identification", "map"], "description": " The Ride Request endpoint getting a map with a visual representation of a Request.", "parameter": "", "processed_des_para": ["ride", "request", "endpoint", "get", "map", "visual", "representation", "request"]}
