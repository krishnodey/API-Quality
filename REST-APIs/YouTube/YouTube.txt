GET >> /activities >> Returns a list of channel activity events that match the request criteria. For example, you can retrieve events associated with a particular channel or with the user's own channel.
DELETE >> /captions >> Deletes the specified caption track.
GET >> /captions/id >> Downloads a caption track. The caption track is returned in its original format unless the request specifies a value for the tfmt parameter and in its original language unless the request specifies a value for the tlang parameter.
POST >> /captions >> Uploads a caption track.
GET >> /captions >> Returns a list of caption tracks that are associated with a specified video. Note that the API response does not contain the actual captions and that the captions.download method provides the ability to retrieve a caption track.
PUT >> /captions >> Updates a caption track. When updating a caption track, you can change the track's draft status, upload a new caption file for the track, or both.
POST >> /channelBanners/insert >> Uploads a channel banner image to YouTube. This method represents the first two steps in a three-step process to update the banner image for a channel: Call the channelBanners.insert method to upload the binary image data to YouTube. The image must have a 16:9 aspect ratio and be at least 2048x1152 pixels. We recommend uploading a 2560px by 1440px image. Extract the url property's value from the response that the API returns for step 1. Call the channels.update method to update the channel's branding settings. Set the brandingSettings.image.bannerExternalUrl property's value to the URL obtained in step 2.
DELETE >> /channelSections >> Deletes a channel section.
POST >> /channelSections >> Adds a channel section to the authenticated user's channel. A channel can create a maximum of 10 shelves.
GET >> /channelSections >> Returns a list of channelSection resources that match the API request criteria.
PUT >> /channelSections >> Updates a channel section.
GET >> /channels >> Returns a collection of zero or more channel resources that match the request criteria.
PUT >> /channels >> Updates a channel's metadata. Note that this method currently only supports updates to the channel resource's brandingSettings and invideoPromotion objects and their child properties.
GET >> /commentThreads >> Returns a list of comment threads that match the API request parameters.
POST >> /commentThreads >> Creates a new top-level comment. To add a reply to an existing comment, use the comments.insert method instead.
GET >> /comments >> Returns a list of comments that match the API request parameters.
POST >> /comments/setModerationStatus >> Sets the moderation status of one or more comments. The API request must be authorized by the owner of the channel or video associated with the comments.
POST >> /comments >> Creates a reply to an existing comment. Note: To create a top-level comment, use the commentThreads.insert method.
POST >> /comments/markAsSpam >> Expresses the caller's opinion that one or more comments should be flagged as spam.
DELETE >> /comments >> Deletes a comment.
PUT >> /comments >> Modifies a comment.
GET >> /guideCategories >> Returns a list of categories that can be associated with YouTube channels.
GET >> /i18nLanguages >> Returns a list of application languages that the YouTube website supports.
GET >> /i18nRegions >> Returns a list of content regions that the YouTube website supports.
GET >> /members >> Lists members (formerly known as "sponsors") for a channel. The API request must be authorized by the channel owner.
GET >> /membershipsLevels >> Returns a collection of zero or more membershipsLevel resources owned by the channel that authorized the API request. Levels are returned in implicit display order.
DELETE >> /playlistItems >> Deletes a playlist item.
POST >> /playlistItems >> Adds a resource to a playlist.
GET >> /playlistItems >> Returns a collection of playlist items that match the API request parameters. You can retrieve all of the playlist items in a specified playlist or retrieve one or more playlist items by their unique IDs.
PUT >> /playlistItems >> Modifies a playlist item. For example, you could update the item's position in the playlist.
DELETE >> /playlists >> Deletes a playlist.
GET >> /playlists >> Returns a collection of playlists that match the API request parameters. For example, you can retrieve all playlists that the authenticated user owns, or you can retrieve one or more playlists by their unique IDs.
POST >> /playlists >> Creates a playlist.
PUT >> /playlists >> Modifies a playlist. For example, you could change a playlist's title, description, or privacy status.
GET >> /search >> Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching video, channel, and playlist resources, but you can also configure queries to only retrieve a specific type of resource.
DELETE >> /subscriptions >> Deletes a subscription.
POST >> /subscriptions >> Adds a subscription for the authenticated user's channel.
GET >> /subscriptions >> Returns subscription resources that match the API request criteria.
POST >> /thumbnails/set >> Uploads a custom video thumbnail to YouTube and sets it for a video.
GET >> /videoAbuseReportReasons >> Retrieve a list of reasons that can be used to report abusive videos.
GET >> /videoCategories >> Returns a list of categories that can be associated with YouTube videos.
POST >> /videos >> Uploads a video to YouTube and optionally sets the video's metadata.
GET >> /videos >> Returns a list of videos that match the API request parameters.
DELETE >> /videos >> Deletes a YouTube video.
PUT >> /videos >> Updates a video's metadata.
POST >> /videos/rate >> Add a like or dislike rating to a video or remove a rating from a video.
GET >> /videos/getRating >> Retrieves the ratings that the authorized user gave to a list of specified videos.
POST >> /videos/reportAbuse >> Report a video for containing abusive content.
POST >> /watermarks/set >> Uploads a watermark image to YouTube and sets it for a channel.
POST >> /watermarks/unset >> Deletes a channel's watermark image.