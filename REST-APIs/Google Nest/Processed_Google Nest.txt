{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/device_id ", "processed_uri": ["devices", "thermostats", "device", "identification", "device", "identification"], "description": " Nest Thermostat unique identifier.\n", "parameter": "", "processed_des_para": ["nest", "thermostat", "unique", "identifier"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/locale ", "processed_uri": ["devices", "thermostats", "device", "identification", "localization"], "description": " Specifies language and region (or country) preference.\n", "parameter": "", "processed_des_para": ["specify", "language", "region", "country", "preference"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/software_version ", "processed_uri": ["devices", "thermostats", "device", "identification", "software", "version"], "description": " Software version.\n", "parameter": "", "processed_des_para": ["software", "version"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/structure_id ", "processed_uri": ["devices", "thermostats", "device", "identification", "structure", "identification"], "description": " Structure unique identifier.\n", "parameter": "", "processed_des_para": ["structure", "unique", "identifier"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/name ", "processed_uri": ["devices", "thermostats", "device", "identification", "name"], "description": " Display name of the device. Can be any room name from a list we provide, or a custom name.\n", "parameter": "", "processed_des_para": ["display", "name", "device", "room", "name", "list", "provide", "custom", "name"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/name_long ", "processed_uri": ["devices", "thermostats", "device", "identification", "name", "long"], "description": " Long display name of the device. Includes a custom (label), created by the user, or via wheres.\n", "parameter": "", "processed_des_para": ["long", "display", "name", "device", "include", "custom", "label", "create", "user", "via", "where"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/last_connection ", "processed_uri": ["devices", "thermostats", "device", "identification", "last", "connection"], "description": " Timestamp of the last successful interaction with the Nest service, in ISO 8601 format.\n", "parameter": "", "processed_des_para": ["timestamp", "last", "successful", "interaction", "nest", "service", "format"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/is_online ", "processed_uri": ["devices", "thermostats", "device", "identification", "online"], "description": " Device connection status with the Nest service.\n", "parameter": "", "processed_des_para": ["device", "connection", "status", "nest", "service"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/can_cool ", "processed_uri": ["devices", "thermostats", "device", "identification", "cool"], "description": " System ability to cool (has AC).\n", "parameter": "", "processed_des_para": ["system", "ability", "cool"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/can_heat ", "processed_uri": ["devices", "thermostats", "device", "identification", "heat"], "description": " System ability to heat.\n", "parameter": "", "processed_des_para": ["system", "ability", "heat"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/is_using_emergency_heat ", "processed_uri": ["devices", "thermostats", "device", "identification", "using", "emergency", "heat"], "description": " Emergency Heat status in systems with heat pumps for cooling. When Emergency Heat is on: The user can adjust the target temperature on the device, but cannot change the mode until Emergency Heat is turned off The hvac_mode can still be changed via the API\n", "parameter": "", "processed_des_para": ["emergency", "heat", "status", "system", "heat", "pump", "cool", "emergency", "heat", "user", "adjust", "target", "temperature", "device", "change", "mode", "emergency", "heat", "turn", "hvac", "mode", "still", "change", "via", "ap"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/has_fan ", "processed_uri": ["devices", "thermostats", "device", "identification", "fan"], "description": " System ability to control the fan independently from heating or cooling.\n", "parameter": "", "processed_des_para": ["system", "ability", "control", "fan", "independently", "heating", "cooling"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/fan_timer_active ", "processed_uri": ["devices", "thermostats", "device", "identification", "fan", "timer", "active"], "description": " Indicates if the fan timer is engaged; used with fan_timer_duration to turn on the fan for a (user-specified) preset duration.\n", "parameter": "", "processed_des_para": ["indicate", "fan", "timer", "engage", "use", "fan", "timer", "duration", "turn", "fan", "user", "specify", "preset", "duration"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/fan_timer_timeout ", "processed_uri": ["devices", "thermostats", "device", "identification", "fan", "timer", "timeout"], "description": " Timestamp showing when the fan timer reaches 0 (stop time), in ISO 8601 format.\n", "parameter": "", "processed_des_para": ["timestamp", "show", "fan", "timer", "reach", "stop", "time", "format"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/has_leaf ", "processed_uri": ["devices", "thermostats", "device", "identification", "leaf"], "description": " Displayed when the thermostat is set to an energy-saving temperature.\n", "parameter": "", "processed_des_para": ["display", "thermostat", "set", "energy", "save", "temperature"]}
{"http_verb": "POST ", "uri": " /devices/thermostats/device_id/temperature_scale ", "processed_uri": ["devices", "thermostats", "device", "identification", "temperature", "scale"], "description": " Fahrenheit or Celsius; used with temperature display.\n", "parameter": "", "processed_des_para": ["fahrenheit", "celsius", "use", "temperature", "display"]}
{"http_verb": "POST ", "uri": " /devices/thermostats/device_id/target_temperature_f ", "processed_uri": ["devices", "thermostats", "device", "identification", "target", "temperature"], "description": " Desired temperature, in full degrees Fahrenheit (1°F). Used when hvac_mode = heat or cool.\n", "parameter": "", "processed_des_para": ["desire", "temperature", "full", "degree", "fahrenheit", "use", "hvac", "mode", "heat", "cool"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/eco_temperature_high_f ", "processed_uri": ["devices", "thermostats", "device", "identification", "eco", "temperature", "high"], "description": " Maximum Eco Temperature, displayed in whole degrees Fahrenheit (1°F). Used when hvac_mode = eco.\n", "parameter": "", "processed_des_para": ["maximum", "eco", "temperature", "display", "whole", "degree", "fahrenheit", "use", "hvac", "mode", "eco"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/eco_temperature_high_c ", "processed_uri": ["devices", "thermostats", "device", "identification", "eco", "temperature", "high"], "description": " Maximum Eco Temperature, displayed in half degrees Celsius (0.5°C). Used when hvac_mode = eco.\n", "parameter": "", "processed_des_para": ["maximum", "eco", "temperature", "display", "half", "degree", "celsius", "use", "hvac", "mode", "eco"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/hvac_state ", "processed_uri": ["devices", "thermostats", "device", "identification", "hvac", "state"], "description": " Indicates whether HVAC system is actively heating, cooling or is off. Use this value to indicate HVAC activity state. When off, the HVAC system is not actively heating or cooling. hvac_state is independent of fan operation.\n", "parameter": "", "processed_des_para": ["indicate", "whether", "hva", "system", "actively", "heat", "cool", "use", "value", "indicate", "hva", "activity", "state", "hva", "system", "actively", "heat", "cool", "hvac", "state", "independent", "fan", "operation"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/is_locked ", "processed_uri": ["devices", "thermostats", "device", "identification", "locked"], "description": " Thermostat Lock status. When true, the Thermostat Lock feature is enabled, and restricts the temperature range to these min/max values: locked_temp_min_f, locked_temp_max_f, locked_temp_min_c, and locked_temp_max_c.\n", "parameter": "", "processed_des_para": ["thermostat", "lock", "status", "thermostat", "lock", "feature", "enable", "restrict", "temperature", "range", "min", "max", "value", "lock", "temp", "min", "locked", "temp", "max", "locked", "temp", "min", "locked", "temp", "max"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/sunlight_correction_enabled ", "processed_uri": ["devices", "thermostats", "device", "identification", "sunlight", "correction", "enabled"], "description": " Sunblock enabled status. Used with sunlight_correction_active. When true, Sunblock technology is enabled, and the Thermostat is automatically adjusting to direct sunlight, reading and setting the correct temperature.\n", "parameter": "", "processed_des_para": ["sunblock", "enable", "status", "use", "sunlight", "correction", "active", "sunblock", "technology", "enable", "thermostat", "automatically", "adjust", "direct", "sunlight", "read", "set", "correct", "temperature"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/where_name ", "processed_uri": ["devices", "thermostats", "device", "identification", "name"], "description": " The display name of the device. Associated with the Thermostat where_id. Can be any room name from a list we provide, or a custom name.\n", "parameter": "", "processed_des_para": ["display", "name", "device", "associate", "thermostat", "identification", "room", "name", "list", "provide", "custom", "name"]}
{"http_verb": "GET ", "uri": " /devices/thermostats/device_id/time_to_target_training ", "processed_uri": ["devices", "thermostats", "device", "identification", "time", "target", "training"], "description": " When in training mode, the Nest Thermostat learns about the HVAC system and discovers how much time it takes to reach the target temperature. When the Thermostat has enough information to make a reasonable estimate of the time to reach the target temperature, this value will change from training to ready.\n", "parameter": "", "processed_des_para": ["training", "mode", "nest", "thermostat", "learn", "hva", "system", "discover", "much", "time", "take", "reach", "target", "temperature", "thermostat", "enough", "information", "make", "reasonable", "estimate", "time", "reach", "target", "temperature", "value", "change", "train", "ready"]}
{"http_verb": "GET ", "uri": " /devices/smoke_co_alarms/device_id/name ", "processed_uri": ["devices", "smoke", "carbon", "monoxide", "alarms", "device", "identification", "name"], "description": " Display name of the device; can be any room name from a list we provide, or a custom name.\n", "parameter": "", "processed_des_para": ["display", "name", "device", "room", "name", "list", "provide", "custom", "name"]}
{"http_verb": "GET ", "uri": " /devices/smoke_co_alarms/device_id/ui_color_state ", "processed_uri": ["devices", "smoke", "carbon", "monoxide", "alarms", "device", "identification", "ui", "color", "state"], "description": " Indicates device status by color in the Nest app UI. It is an aggregate condition for battery+smoke+CO states, and reflects the actual color indicators displayed in the Nest app.\n", "parameter": "", "processed_des_para": ["indicate", "device", "status", "color", "nest", "application", "aggregate", "condition", "batterysmoke", "states", "reflect", "actual", "color", "indicator", "display", "nest", "application"]}
{"http_verb": "GET ", "uri": " /devices/smoke_co_alarms/device_id/where_name ", "processed_uri": ["devices", "smoke", "carbon", "monoxide", "alarms", "device", "identification", "name"], "description": " The display name of the device. Associated with the Nest Protect where_id. Can be any room name from a list we provide, or a custom name. \n", "parameter": "", "processed_des_para": ["display", "name", "device", "associate", "nest", "protect", "identification", "room", "name", "list", "provide", "custom", "name"]}
{"http_verb": "GET ", "uri": " /devices/cameras/device_id/where_id ", "processed_uri": ["devices", "cameras", "device", "identification", "identification"], "description": " A unique, Nest-generated identifier that represents name, the display name of the device.\n", "parameter": "", "processed_des_para": ["unique", "nest", "generate", "identifier", "represent", "name", "display", "name", "device"]}
{"http_verb": "GET ", "uri": " /devices/cameras/device_id/where_name ", "processed_uri": ["devices", "cameras", "device", "identification", "name"], "description": " The display name of the device. Associated with the Nest Cam where_id. Can be any room name from a list we provide, or a custom name.\n", "parameter": "", "processed_des_para": ["display", "name", "device", "associate", "nest", "camera", "identification", "room", "name", "list", "provide", "custom", "name"]}
{"http_verb": "GET ", "uri": " /devices/cameras/device_id/is_public_share_enabled ", "processed_uri": ["devices", "cameras", "device", "identification", "public", "share", "enabled"], "description": " Users can choose to share their video and make it viewable by anyone. When public share is enabled, you can read public_share_url.\n", "parameter": "", "processed_des_para": ["user", "choose", "share", "video", "make", "viewable", "anyone", "public", "share", "enable", "read", "public", "share", "url"]}
{"http_verb": "GET ", "uri": " /devices/cameras/device_id/activity_zones ", "processed_uri": ["devices", "cameras", "device", "identification", "activity", "zones"], "description": " Returns an array of all defined Activity Zones. Activity Zones are used to monitor motion events within user-defined areas of the video stream. Requires Nest Aware.\n", "parameter": "", "processed_des_para": ["return", "array", "define", "activity", "zone", "activity", "zone", "use", "monitor", "motion", "event", "within", "user", "define", "area", "video", "stream", "require", "nest", "aware"]}
{"http_verb": "GET ", "uri": " /devices/cameras/device_id/snapshot_url ", "processed_uri": ["devices", "cameras", "device", "identification", "snapshot", "url"], "description": " Capture an image on demand. Returns the URL of an image captured from the live video stream. Requires that the camera is on and actively streaming. Use this field to get a snapshot from the live video stream. snapshot_url - returns the URL of an image captured from the live video stream Requires that the camera is on and actively streaming. The snapshot quality from the API is only 1080p throughput if you are: actively viewing the camera stream in the application (web_url). actively viewing the public stream (app_url). subscribed to Nest Aware. If you are not actively viewing the stream or do not have a Nest Aware subscription, the API has no 1080p source from which to retrieve a snapshot at that resolution and generates a lower-quality image. Also, low local network bandwidth may cause the API snapshot resolution to dip below 1080p with Nest Aware present.\n", "parameter": "", "processed_des_para": ["capture", "image", "demand", "return", "ur", "image", "capture", "live", "video", "stream", "require", "camera", "actively", "stream", "use", "field", "get", "snapshot", "live", "video", "stream", "snapshot", "url", "return", "ur", "image", "capture", "live", "video", "stream", "require", "camera", "actively", "stream", "snapshot", "quality", "ap", "throughput", "actively", "view", "camera", "stream", "application", "web", "url", "actively", "view", "public", "stream", "application", "url", "subscribe", "nest", "aware", "actively", "view", "stream", "nest", "aware", "subscription", "ap", "source", "retrieve", "snapshot", "resolution", "generate", "low", "quality", "image", "also", "low", "local", "network", "bandwidth", "cause", "ap", "snapshot", "resolution", "dip", "nest", "aware", "present"]}
{"http_verb": "GET ", "uri": " devices/cameras/device_id/last_event ", "processed_uri": ["devices", "cameras", "device", "identification", "last", "event"], "description": " This object captures information about the last event that triggered a notification. Some fields and some permission combinations require a Nest Aware subscription to access last event information.\n", "parameter": "", "processed_des_para": ["object", "capture", "information", "last", "event", "trigger", "notification", "field", "permission", "combination", "require", "nest", "aware", "subscription", "access", "last", "event", "information"]}
{"http_verb": "GET ", "uri": " /devices/cameras/device_id/last_event/has_sound ", "processed_uri": ["devices", "cameras", "device", "identification", "last", "event", "sound"], "description": " Sound event - sound was detected.\n", "parameter": "", "processed_des_para": ["sound", "event", "sound", "detect"]}
{"http_verb": "GET ", "uri": " /devices/cameras/device_id/last_event/web_url ", "processed_uri": ["devices", "cameras", "device", "identification", "last", "event", "web", "url"], "description": " Web URL (deep link) to the last sound or motion event at home.nest.com. Used to display the last recorded event, and requires user to be signed in to the account. Requires Nest Aware. If the event URL has expired or the device does not have an active subscription, then this value is not included in the payload.", "parameter": "", "processed_des_para": ["web", "ur", "deep", "last", "sound", "motion", "event", "homenestcom", "use", "display", "last", "record", "event", "require", "user", "sign", "account", "require", "nest", "aware", "event", "ur", "expire", "device", "active", "subscription", "value", "include", "payload"]}
