{"http_verb": "GET ", "uri": " /{album-id}/comments ", "processed_uri": ["album", "identification", "comments"], "description": " Comments for this object\n", "parameter": "", "processed_des_para": ["comment", "object"]}
{"http_verb": "GET ", "uri": " /{album-id}/likes ", "processed_uri": ["album", "identification", "likes"], "description": " Likes for this object\n", "parameter": "", "processed_des_para": ["like", "object"]}
{"http_verb": "GET ", "uri": " /{album-id}/photos ", "processed_uri": ["album", "identification", "photos"], "description": " Get a list of Photos on an Album.\n", "parameter": "", "processed_des_para": ["get", "list", "photo", "album"]}
{"http_verb": "GET ", "uri": " /{album-id}/picture ", "processed_uri": ["album", "identification", "picture"], "description": " none\n", "parameter": "", "processed_des_para": ["none"]}
{"http_verb": "GET ", "uri": " /{application-id}/accounts ", "processed_uri": ["application", "identification", "accounts"], "description": " Get a list of test users on an app.\n", "parameter": "", "processed_des_para": ["get", "list", "test", "user", "application"]}
{"http_verb": "POST ", "uri": " /{application_id}/activities ", "processed_uri": ["application", "identification", "activities"], "description": " You can use a user access token or app access token to log events to this endpoint.\n", "parameter": "", "processed_des_para": ["use", "user", "access", "token", "application", "access", "token", "log", "event", "endpoint"]}
{"http_verb": "GET ", "uri": " /{application-id}/aem_conversion_configs ", "processed_uri": ["application", "identification", "aem", "conversion", "configs"], "description": " ApplicationAEMConversionConfigs\n", "parameter": "", "processed_des_para": ["application", "aem", "conversion", "configs"]}
{"http_verb": "POST ", "uri": " /{application_id}/app_indexing ", "processed_uri": ["application", "identification", "application", "indexing"], "description": " You can make a POST request to app_indexing edge from the following paths: /{application_id}/app_indexing When posting to this edge, an Application will be created.\n", "parameter": "", "processed_des_para": ["make", "pos", "request", "application", "indexing", "edge", "follow", "path", "application", "identification", "application", "indexing", "post", "edge", "application", "create"]}
{"http_verb": "GET ", "uri": " /{application-id}/app_installed_groups ", "processed_uri": ["application", "identification", "application", "installed", "groups"], "description": " List of groups the application is installed in\n", "parameter": "", "processed_des_para": ["list", "group", "application", "instal"]}
{"http_verb": "GET ", "uri": " /{application-id}/appassets ", "processed_uri": ["application", "identification", "appassets"], "description": " An Edge to the CanvasAppAsset\n", "parameter": "", "processed_des_para": ["edge", "canvas", "application", "asset"]}
{"http_verb": "POST ", "uri": " /{application_id}/assets ", "processed_uri": ["application", "identification", "assets"], "description": " You can make a POST request to assets edge from the following paths: /{application_id}/assets When posting to this edge, no Graph object will be created.\n", "parameter": "", "processed_des_para": ["make", "pos", "request", "asset", "edge", "follow", "path", "application", "identification", "asset", "post", "edge", "graph", "object", "create"]}
{"http_verb": "GET ", "uri": " /v11.0/{application-id}/authorized_adaccounts ", "processed_uri": ["application", "identification", "authorized", "adaccounts"], "description": " none\n", "parameter": "", "processed_des_para": ["none"]}
{"http_verb": "GET ", "uri": " /{application-id}/button_auto_detection_device_selection ", "processed_uri": ["application", "identification", "button", "auto", "detection", "device", "selection"], "description": " ApplicationButtonAutoDetectionDeviceSelection\n", "parameter": "", "processed_des_para": ["application", "button", "auto", "detection", "device", "selection"]}
{"http_verb": "POST ", "uri": " /{application_id}/codeless_event_mappings ", "processed_uri": ["application", "identification", "codeless", "event", "mappings"], "description": " You can make a POST request to codeless_event_mappings edge from the following paths: /{application_id}/codeless_event_mappings When posting to this edge, an Application will be created.\n", "parameter": "", "processed_des_para": ["make", "pos", "request", "codeless", "event", "mapping", "edge", "follow", "path", "application", "identification", "codeless", "event", "mapping", "post", "edge", "application", "create"]}
{"http_verb": "POST ", "uri": " /{application_id}/leaderboards_reset ", "processed_uri": ["application", "identification", "leaderboards", "reset"], "description": " You can make a POST request to leaderboards_reset edge from the following paths: /{application_id}/leaderboards_reset When posting to this edge, no Graph object will be created.\n", "parameter": "", "processed_des_para": ["make", "pos", "request", "leaderboard", "reset", "edge", "follow", "path", "application", "identification", "leaderboard", "reset", "post", "edge", "graph", "object", "create"]}
{"http_verb": "POST ", "uri": " /{application_id}/page_activities ", "processed_uri": ["application", "identification", "page", "activities"], "description": " You can make a POST request to page_activities edge from the following paths: /{application_id}/page_activities When posting to this edge, an Application will be created.\n", "parameter": "", "processed_des_para": ["make", "pos", "request", "page", "activity", "edge", "follow", "path", "application", "identification", "page", "activity", "post", "edge", "application", "create"]}
{"http_verb": "POST ", "uri": " /{application_id}/payment_currencies ", "processed_uri": ["application", "identification", "payment", "currencies"], "description": " You can make a POST request to payment_currencies edge from the following paths: /{application_id}/payment_currencies When posting to this edge, no Graph object will be created.\n", "parameter": "", "processed_des_para": ["make", "pos", "request", "payment", "currency", "edge", "follow", "path", "application", "identification", "payment", "currency", "post", "edge", "graph", "object", "create"]}
{"http_verb": "GET ", "uri": " /{application-id}/products ", "processed_uri": ["application", "identification", "products"], "description": " Get information on products associated with this app\n", "parameter": "", "processed_des_para": ["get", "information", "product", "associate", "application"]}
{"http_verb": "POST ", "uri": " /{application_id}/user_properties ", "processed_uri": ["application", "identification", "user", "properties"], "description": " You can make a POST request to user_properties edge from the following paths: /{application_id}/user_properties When posting to this edge, no Graph object will be created.\n", "parameter": "", "processed_des_para": ["make", "pos", "request", "user", "property", "edge", "follow", "path", "application", "identification", "user", "property", "post", "edge", "graph", "object", "create"]}
{"http_verb": "GET ", "uri": " /{canvas-id} ", "processed_uri": ["canvas", "identification"], "description": " A canvas document\n", "parameter": "", "processed_des_para": ["canvas", "document"]}
{"http_verb": "POST ", "uri": " /{page_id}/canvases ", "processed_uri": ["page", "identification", "canvases"], "description": " You can make a POST request to canvases edge from the following paths: /{page_id}/canvases When posting to this edge, a Canvas will be created.\n", "parameter": "", "processed_des_para": ["make", "pos", "request", "canvas", "edge", "follow", "path", "page", "identification", "canvas", "post", "edge", "canvas", "create"]}
{"http_verb": "POST ", "uri": " /{object-id}/private_replies ", "processed_uri": ["object", "identification", "private", "replies"], "description": " Private replies to posts or comments are allowed within 7 days of the creation date of the user post or comment.\n", "parameter": "", "processed_des_para": ["private", "reply", "post", "comment", "allow", "within", "day", "creation", "date", "user", "post", "comment"]}
{"http_verb": "GET ", "uri": " /{conversation-id}/messages ", "processed_uri": ["conversation", "identification", "messages"], "description": " The messages in a conversation between a person and a page.\n", "parameter": "", "processed_des_para": ["message", "conversation", "person", "page"]}
{"http_verb": "GET ", "uri": " /{destination-id}/augmented_realities_metadata ", "processed_uri": ["destination", "identification", "augmented", "realities", "metadata"], "description": " Edge to mediator between the dynamic item and AR that holds metadata about the AR\n", "parameter": "", "processed_des_para": ["edge", "mediator", "dynamic", "item", "hold", "metadata"]}
{"http_verb": "GET ", "uri": " /{destination-id}/videos_metadata ", "processed_uri": ["destination", "identification", "videos", "metadata"], "description": " Edge to mediator between the dynamic item and video that holds metadata about the video\n", "parameter": "", "processed_des_para": ["edge", "mediator", "dynamic", "item", "video", "hold", "metadata", "video"]}
{"http_verb": "GET ", "uri": " /{group-id}/admins ", "processed_uri": ["group", "identification", "admins"], "description": " An Admin of the Group can get a list of other Group Admins.\n", "parameter": "", "processed_des_para": ["admin", "group", "get", "list", "group", "admin"]}
{"http_verb": "GET ", "uri": " /{group-id}/albums ", "processed_uri": ["group", "identification", "albums"], "description": " Returns an array of Albums on the Group.\n", "parameter": "", "processed_des_para": ["return", "array", "album", "group"]}
{"http_verb": "GET ", "uri": " /{group-id}/docs ", "processed_uri": ["group", "identification", "docs"], "description": " Returns a list of Group Docs.\n", "parameter": "", "processed_des_para": ["return", "list", "group", "doc"]}
{"http_verb": "GET ", "uri": " /{group-id}/events ", "processed_uri": ["group", "identification", "events"], "description": " Returns a list of Facebook Events.\n", "parameter": "", "processed_des_para": ["return", "list", "facebook", "event"]}
{"http_verb": "GET ", "uri": " /{group-id}/feed ", "processed_uri": ["group", "identification", "feed"], "description": " Returns an array of Posts on the Group.\n", "parameter": "", "processed_des_para": ["return", "array", "post", "group"]}
{"http_verb": "POST ", "uri": " /{event_id}/live_videos ", "processed_uri": ["event", "identification", "live", "videos"], "description": " You can make a POST request to live_videos edge from the following paths: /{event_id}/live_videos When posting to this edge, a LiveVideo will be created.\n", "parameter": "", "processed_des_para": ["make", "pos", "request", "live", "video", "edge", "follow", "path", "event", "identification", "live", "video", "post", "edge", "live", "video", "create"]}
{"http_verb": "GET ", "uri": " /{user-id}/outbox ", "processed_uri": ["user", "identification", "outbox"], "description": " Items in a person's Facebook Messages outbox.\n", "parameter": "", "processed_des_para": ["item", "person", "facebook", "message", "outbox"]}
{"http_verb": "GET ", "uri": " /{user-id}/scores ", "processed_uri": ["user", "identification", "scores"], "description": " The scores this person has received from Facebook Games that they've played. Related Guides Scores API for Games.\n", "parameter": "", "processed_des_para": ["score", "person", "receive", "facebook", "game", "they", "ve", "play", "related", "guide", "score", "ap", "game"]}
{"http_verb": "GET ", "uri": " /{app-id}/achievements ", "processed_uri": ["application", "identification", "achievements"], "description": " The list of Games achievement types that have been registered by this app.\n", "parameter": "", "processed_des_para": ["list", "game", "achievement", "type", "register", "application"]}
{"http_verb": "GET ", "uri": " /{app-id}/groups ", "processed_uri": ["application", "identification", "groups"], "description": " Groups that belong to this app.\n", "parameter": "", "processed_des_para": ["group", "belong", "application"]}
{"http_verb": "GET ", "uri": " /{object-id}/insights/{metric-name} ", "processed_uri": ["object", "identification", "insights", "metric", "name"], "description": " Facebook Insights is a product available to all Pages and Apps on Facebook, and any domains claimed by a site developer using the Insights dashboard. This object represents a single Insights metric that is tied to another particular Graph API object (Page, Post, etc.). This object is returned by the following edges: /{page-id}/insights /{domain-id}/insights /{post-id}/insights (Page posts only)* Insights are only generated for a Facebook Page that has more than 30 people that like it. App Insights are now returned by a separate /app/app_insights edge and will no longer work with this edge in v2.1. *Note: The Graph API object {post-id} needs to be specified in the same format returned by the API call to fetch a list of page posts - do not attempt to split or combine other IDs to form a post ID.\n", "parameter": "", "processed_des_para": ["facebook", "insight", "product", "available", "page", "application", "facebook", "domain", "claim", "site", "developer", "use", "insight", "dashboard", "object", "represent", "single", "insight", "metric", "tie", "another", "particular", "graph", "ap", "object", "page", "post", "etc", "object", "return", "follow", "edge", "page", "identification", "insight", "domain", "identification", "insight", "post", "identification", "insight", "page", "post", "insight", "generate", "facebook", "page", "people", "like", "application", "insight", "return", "separate", "application", "application", "insight", "edge", "long", "work", "edge", "note", "graph", "ap", "object", "post", "identification", "need", "specify", "format", "return", "ap", "call", "fetch", "list", "page", "post", "attempt", "split", "combine", "ds", "form", "post"]}
{"http_verb": "GET ", "uri": " /{app-id}/picture ", "processed_uri": ["application", "identification", "picture"], "description": " An app's profile picture.\n", "parameter": "", "processed_des_para": ["application", "profile", "picture"]}
{"http_verb": "GET ", "uri": " /{app-id}/roles ", "processed_uri": ["application", "identification", "roles"], "description": " The developer roles defined for a Facebook app.\n", "parameter": "", "processed_des_para": ["developer", "role", "define", "facebook", "application"]}
{"http_verb": "GET ", "uri": " /{app-id}/scores ", "processed_uri": ["application", "identification", "scores"], "description": " Scores from this Facebook game for a user and their friends.\n", "parameter": "", "processed_des_para": ["score", "facebook", "game", "user", "friend"]}
{"http_verb": "GET ", "uri": " /{app-id}/staticresources ", "processed_uri": ["application", "identification", "staticresources"], "description": " Usage statistics for any static resources used by a Facebook Canvas app.\n", "parameter": "", "processed_des_para": ["usage", "statistic", "static", "resource", "use", "facebook", "canvas", "application"]}
{"http_verb": "GET ", "uri": " /{app-id}/subscriptions ", "processed_uri": ["application", "identification", "subscriptions"], "description": " The Webhooks update objects and fields that this app has subscribed to. Related Guides Receiving API Updates in Real Time with Webhooks.\n", "parameter": "", "processed_des_para": ["web", "hook", "update", "object", "field", "application", "subscribe", "related", "guide", "receive", "ap", "update", "real", "time", "web", "hook"]}
{"http_verb": "GET ", "uri": " /{app-id}/translations ", "processed_uri": ["application", "identification", "translations"], "description": " The strings from this app that were translated using our translations tools.\n", "parameter": "", "processed_des_para": ["string", "application", "translate", "use", "translation", "tool"]}
{"http_verb": "GET ", "uri": " /app-link-host ", "processed_uri": ["application", "link", "host"], "description": " An individual app link host object created by an app. An app link host is a wrapper for a group of different app links. Please see our main App Links documentation to learn more.\n", "parameter": "", "processed_des_para": ["individual", "application", "host", "object", "create", "application", "application", "host", "wrapper", "group", "different", "application", "link", "please", "see", "main", "application", "link", "documentation", "learn"]}
{"http_verb": "GET ", "uri": " /{conversation-id}/messages ", "processed_uri": ["conversation", "identification", "messages"], "description": " The messages in a conversation between a person and a page.\n", "parameter": "", "processed_des_para": ["message", "conversation", "person", "page"]}
{"http_verb": "GET ", "uri": " /debug_token ", "processed_uri": ["debug", "token"], "description": " This endpoint returns metadata about a given access token. This includes data such as the user for which the token was issued, whether the token is still valid, when it expires, and what permissions the app has for the given user. This may be used to programatically debug issues with large sets of access tokens.\n", "parameter": "", "processed_des_para": ["endpoint", "return", "metadata", "give", "access", "token", "include", "datum", "user", "token", "issue", "whether", "token", "still", "valid", "expire", "permission", "application", "give", "user", "use", "programatically", "debug", "issue", "large", "set", "access", "token"]}
{"http_verb": "GET ", "uri": " /{event-id}/feed ", "processed_uri": ["event", "identification", "feed"], "description": " The feed of posts including status updates and links published to this Event's wall.\n", "parameter": "", "processed_des_para": ["feed", "post", "include", "status", "update", "link", "publish", "event", "wall"]}
{"http_verb": "GET ", "uri": " /{group-id}/admins ", "processed_uri": ["group", "identification", "admins"], "description": " The admins of a group. This edge is only available to app and game groups.\n", "parameter": "", "processed_des_para": ["admin", "group", "edge", "available", "application", "game", "group"]}
{"http_verb": "GET ", "uri": " /{group-id}/albums ", "processed_uri": ["group", "identification", "albums"], "description": " The photo albums created for a group.\n", "parameter": "", "processed_des_para": ["photo", "album", "create", "group"]}
{"http_verb": "GET ", "uri": " /{group-id}/events ", "processed_uri": ["group", "identification", "events"], "description": " All events that belong to a group.\n", "parameter": "", "processed_des_para": ["event", "belong", "group"]}
{"http_verb": "GET ", "uri": " /{group-id}/feed ", "processed_uri": ["group", "identification", "feed"], "description": " The feed of posts including status updates and links published to this group.\n", "parameter": "", "processed_des_para": ["feed", "post", "include", "status", "update", "link", "publish", "group"]}
{"http_verb": "GET ", "uri": " /{group-id}/files ", "processed_uri": ["group", "identification", "files"], "description": " The files uploaded to this group.\n", "parameter": "", "processed_des_para": ["file", "upload", "group"]}
{"http_verb": "GET ", "uri": " /{group-id}/members ", "processed_uri": ["group", "identification", "members"], "description": " The members of a group.\n", "parameter": "", "processed_des_para": ["member", "group"]}
{"http_verb": "GET ", "uri": " /{object-id}/insights/{metric-name} ", "processed_uri": ["object", "identification", "insights", "metric", "name"], "description": " Facebook Insights is a product available to all Pages and Apps on Facebook, and any domains claimed by a site developer using the Insights dashboard. This object represents a single Insights metric that is tied to another particular Graph API object (Page, Post, etc.). This object is returned by the following edges: /{page-id}/insights /{domain-id}/insights /{post-id}/insights (Page posts only)* Insights are only generated for a Facebook Page that has more than 30 people that like it. App Insights are now returned by a separate /app/app_insights edge and will no longer work with this edge in v2.1. *Note: The Graph API object {post-id} needs to be specified in the same format returned by the API call to fetch a list of page posts - do not attempt to split or combine other IDs to form a post ID.\n", "parameter": "", "processed_des_para": ["facebook", "insight", "product", "available", "page", "application", "facebook", "domain", "claim", "site", "developer", "use", "insight", "dashboard", "object", "represent", "single", "insight", "metric", "tie", "another", "particular", "graph", "ap", "object", "page", "post", "etc", "object", "return", "follow", "edge", "page", "identification", "insight", "domain", "identification", "insight", "post", "identification", "insight", "page", "post", "insight", "generate", "facebook", "page", "people", "like", "application", "insight", "return", "separate", "application", "application", "insight", "edge", "long", "work", "edge", "note", "graph", "ap", "object", "post", "identification", "need", "specify", "format", "return", "ap", "call", "fetch", "list", "page", "post", "attempt", "split", "combine", "ds", "form", "post"]}
{"http_verb": "GET ", "uri": " /{object-id}/likes ", "processed_uri": ["object", "identification", "likes"], "description": " This reference describes the /likes edge that is common to multiple Graph API nodes. The structure and operations are the same for each node.\n", "parameter": "", "processed_des_para": ["reference", "describe", "likes", "edge", "common", "multiple", "graph", "ap", "node", "structure", "operation", "node"]}
{"http_verb": "GET ", "uri": " /{milestone-id}/photos ", "processed_uri": ["milestone", "identification", "photos"], "description": " The photos attached to a milestone on a Facebook Page. Related Guides Adding Milestones to Pages using the Graph API.\n", "parameter": "", "processed_des_para": ["photo", "attach", "milestone", "facebook", "page", "relate", "guide", "add", "milestone", "page", "use", "graph", "ap"]}
{"http_verb": "GET ", "uri": " /{object-id}/comments ", "processed_uri": ["object", "identification", "comments"], "description": " This reference describes the /comments edge that is common to multiple Graph API nodes. The structure and operations are the same for each node. Note that it is possible for comment objects to have a /comments edge, which is called 'comment replies'. The structure is the same for these, but attention should be paid to the modifiers for these edges.\n", "parameter": "", "processed_des_para": ["reference", "describe", "comment", "edge", "common", "multiple", "graph", "ap", "node", "structure", "operation", "node", "note", "possible", "comment", "object", "comment", "edge", "call", "comment", "reply", "structure", "attention", "pay", "modifier", "edge"]}
{"http_verb": "GET ", "uri": " /{page-id}/conversations ", "processed_uri": ["page", "identification", "conversations"], "description": " The Facebook Messages conversations that this Page is involved in.\n", "parameter": "", "processed_des_para": ["facebook", "message", "conversation", "page", "involve"]}
{"http_verb": "GET ", "uri": " /{page-id}/feed ", "processed_uri": ["page", "identification", "feed"], "description": " The feed of posts (including status updates) and links published by this page, or by others on this page. There are other edges which provide more specific sets of posts: /{page-id}/posts shows only the posts that were published by this page. /{page-id}/tagged shows the posts to this page. It will also show all public posts in which the page has been tagged. /{page-id}/promotable_posts shows only the posts that can be boosted (includes unpublished and scheduled posts). All of these derivative edges share the exact same reading structure, however /feed should be used for all publishing purposes. They all have an upper boundary for the limit parameter of 100 posts. Specifying any higher limit will throw an error. Related Guides Publishing using the Graph API.\n", "parameter": "", "processed_des_para": ["feed", "post", "include", "status", "update", "link", "publish", "page", "other", "page", "edge", "provide", "specific", "set", "post", "page", "identification", "post", "show", "post", "publish", "page", "page", "identification", "tag", "show", "post", "page", "also", "show", "public", "post", "page", "tag", "page", "identification", "promotable", "post", "show", "post", "boost", "include", "unpublished", "schedule", "post", "derivative", "edge", "share", "exact", "reading", "structure", "however", "feed", "used", "publishing", "purpose", "upper", "boundary", "limit", "parameter", "post", "specify", "high", "limit", "throw", "error", "relate", "guide", "publish", "use", "graph", "ap"]}
{"http_verb": "GET ", "uri": " /{page-id}/locations ", "processed_uri": ["page", "identification", "locations"], "description": " List of Pages that represent different locations of a parent business Page. For example pages for each restaurant in a chain of restaurants.\n", "parameter": "", "processed_des_para": ["list", "page", "represent", "different", "location", "parent", "business", "page", "example", "page", "restaurant", "chain", "restaurant"]}
{"http_verb": "GET ", "uri": " /{page-id}/notifications ", "processed_uri": ["page", "identification", "notifications"], "description": " A Page's unread Facebook notifications.\n", "parameter": "", "processed_des_para": ["page", "unread", "facebook", "notification"]}
{"http_verb": "GET ", "uri": " /{payment-id}/dispute ", "processed_uri": ["payment", "identification", "dispute"], "description": " Used to settle any payment disputes.\n", "parameter": "", "processed_des_para": ["use", "settle", "payment", "dispute"]}
{"http_verb": "GET ", "uri": " /{payment-id}/refunds ", "processed_uri": ["payment", "identification", "refunds"], "description": " Used to issue any payment refunds.\n", "parameter": "", "processed_des_para": ["use", "issue", "payment", "refund"]}
{"http_verb": "GET ", "uri": " /{object-id}/sharedposts ", "processed_uri": ["object", "identification", "sharedposts"], "description": " The /sharedposts edge that is common to multiple Graph API nodes. The structure and operations are the same for each node. This edge represents any posts where the original object was shared on Facebook.\n", "parameter": "", "processed_des_para": ["sharedpost", "edge", "common", "multiple", "graph", "ap", "node", "structure", "operation", "node", "edge", "represent", "post", "original", "object", "share", "facebook"]}
{"http_verb": "GET ", "uri": " /{user-id}/feed ", "processed_uri": ["user", "identification", "feed"], "description": " The feed of posts (including status updates) and links published by this person, or by others on this person's profile. There are other edges which provide filtered versions of this edge: /{user-id}/posts shows only the posts that were published by this person. /{user-id}/tagged shows only the posts that this person was tagged in. All of these derivative edges share the exact same reading structure, however /feed should be used for all publishing purposes. Related Guides Publishing using the Graph API.\n", "parameter": "", "processed_des_para": ["feed", "post", "include", "status", "update", "link", "publish", "person", "other", "person", "profile", "edge", "provide", "filter", "version", "edge", "user", "identification", "post", "show", "post", "publish", "person", "user", "identification", "tag", "show", "post", "person", "tag", "derivative", "edge", "share", "exact", "reading", "structure", "however", "feed", "used", "publishing", "purpose", "relate", "guide", "publish", "use", "graph", "ap"]}
{"http_verb": "GET ", "uri": " /{user-id}/friends ", "processed_uri": ["user", "identification", "friends"], "description": " A person's friends.", "parameter": "", "processed_des_para": ["person", "friend"]}
