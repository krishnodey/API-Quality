POST >> /v1/audio/speech >> Generates audio from the input text. >> 
POST >> /v1/audio/transcriptions >> Transcribes audio into the input language. >> 
POST >> /v1/audio/translations >> Translates audio into English. >> 
POST >> /v1/chat/completions >> Creates a model response for the given chat conversation.>>
POST >> /v1/embeddings >> Creates an embedding vector representing the input text. >> 
POST >> /v1/fine_tuning/jobs >> Creates a fine-tuning job which begins the process of creating a new model from a given dataset. >> 
GET >> /v1/fine_tuning/jobs >> List your organization's fine-tuning jobs >> 
GET >> /v1/fine_tuning/jobs/{fine_tuning_job_id}/events >> Get status updates for a fine-tuning job. >> fine_tuning_job_id string Required The ID of the fine-tuning job.
GET >> /v1/fine_tuning/jobs/{fine_tuning_job_id}/checkpoints >> List checkpoints for a fine-tuning job. >> fine_tuning_job_id string Required The ID of the fine-tuning job.
GET >> /v1/fine_tuning/jobs/{fine_tuning_job_id} >> Get info about a fine-tuning job. >> fine_tuning_job_id string Required The ID of the fine-tuning job.
POST >> /v1/fine_tuning/jobs/{fine_tuning_job_id}/cancel >> Immediately cancel a fine-tune job. >>fine_tuning_job_id string Required The ID of the fine-tuning job to cancel.
POST >> /v1/batches >> Creates and executes a batch from an uploaded file of requests >> 
GET >> /v1/batches/{batch_id} >> Retrieves a batch. >> batch_id string Required The ID of the batch to retrieve.
POST >> /v1/batches/{batch_id}/cancel >> Cancels an in-progress batch. The batch will be in status cancelling for up to 10 minutes, before changing to cancelled, where it will have partial results (if any) available in the output file >> batch_id string Required The ID of the batch to cancel. 
GET >> /v1/batches >> List your organization's batches. >> 
POST >> /v1/files >> Upload a file that can be used across various endpoints. Individual files can be up to 512 MB, and the size of all files uploaded by one organization can be up to 100 GB. >> 
GET >> /v1/files >> Returns a list of files that belong to the user's organization. >> 
GET >> /v1/files/{file_id} >> Returns information about a specific file. >>
DELETE >> /v1/files/{file_id} >> Delete a file. >> file_id string Required The ID of the file to use for this request. 
GET  >> /v1/files/{file_id}/content >> Returns the contents of the specified file. >> file_id string Required The ID of the file to use for this request. 
POST >> /v1/uploads >> Creates an intermediate Upload object that you can add Parts to. Currently, an Upload can accept at most 8 GB in total and expires after an hour after you create it. >>
POST >> /v1/uploads/{upload_id}/parts >> Adds a Part to an Upload object. A Part represents a chunk of bytes from the file you are trying to upload. Each Part can be at most 64 MB, and you can add Parts until you hit the Upload maximum of 8 GB. >>  upload_id string Required The ID of the Upload.
POST >> /v1/uploads/{upload_id}/complete >> Completes the Upload. Within the returned Upload object, there is a nested File object that is ready to use in the rest of the platform. You can specify the order of the Parts by passing in an ordered list of the Part IDs. >> upload_id string Required The ID of the Upload.
POST >> /v1/uploads/{upload_id}/cancel >> Cancels the Upload. No Parts may be added after an Upload is cancelled. >> upload_id string Required The ID of the Upload. 
POST >> /v1/images/generations >> Creates an image given a prompt. >> 
POST >> /v1/images/edits >> Creates an edited or extended image given an original image and a prompt. >> 
POST >> /v1/images/variations >> Creates a variation of a given image. >> 
GET >> /v1/models >> Lists the currently available models, and provides basic information about each one such as the owner and availability. >> 
GET >> /v1/models/{model} >> Retrieves a model instance, providing basic information about the model such as the owner and permissioning. >> model string Required The ID of the model to use for this request 
DELETE >> /v1/models/{model} >> Delete a fine-tuned model. You must have the Owner role in your organization to delete a model. >> model string Required The ID of the model to use for this request 
POST >> /v1/moderations >> Classifies if text is potentially harmful. >> 
POST >> /v1/assistants >> Create an assistant with a model and instructions. >> 
GET >> /v1/assistants >> Returns a list of assistants. >> 
GET >> /v1/assistants/{assistant_id} >> Retrieves an assistant. >> assistant_id string Required The ID of the assistant to retrieve.
POST >> /v1/assistants/{assistant_id} >> Modifies an assistant. >> assistant_id string Required The ID of the assistant to retrieve.
DELETE >> /v1/assistants/{assistant_id} >> Delete an assistant. >> assistant_id string Required The ID of the assistant to retrieve.
POST >> /v1/threads >> Create a thread. >> 
GET >> /v1/threads/{thread_id} >> Retrieves a thread. >> thread_id string Required The ID of the thread to retrieve.
POST >> /v1/threads/{thread_id} >> Modifies a thread. >> thread_id string Required The ID of the thread to retrieve.
DELETE >> /v1/threads/{thread_id} >> Delete a thread.>> thread_id string Required The ID of the thread to retrieve.
POST >> /v1/threads/{thread_id}/messages >> Create a message. >> thread_id string Required The ID of the thread to retrieve.
GET >> /v1/threads/{thread_id}/messages >> Returns a list of messages for a given thread. >> thread_id string Required The ID of the thread to retrieve.
GET >> /v1/threads/{thread_id}/messages/{message_id} >> Retrieve a message. >> thread_id string Required The ID of the thread to which this message belongs. message_id string Required The ID of the message to retrieve. 
POST >> /v1/threads/{thread_id}/messages/{message_id} >> Modifies a message. >> thread_id string Required The ID of the thread to which this message belongs. message_id string Required The ID of the message to retrieve. 
DELETE >> /v1/threads/{thread_id}/messages/{message_id} >> Deletes a message.>> thread_id string Required The ID of the thread to which this message belongs. message_id string Required The ID of the message to retrieve.
POST >> /v1/threads/{thread_id}/runs >> Create a run. >> thread_id string Required The ID of the thread to run.
POST >> /v1/threads/runs >> Create a thread and run it in one request. >>
GET >> /v1/threads/{thread_id}/runs >> Returns a list of runs belonging to a thread. >> thread_id string Required The ID of the thread the run belongs to. 
GET >> /v1/threads/{thread_id}/runs/{run_id} >> Retrieves a run. >> thread_id string Required The ID of the thread that was run. run_id string Required The ID of the run to retrieve. 
POST >> /v1/threads/{thread_id}/runs/{run_id} >> Modifies a run. >> thread_id string Required The ID of the thread that was run. run_id string Required The ID of the run to modify.
POST >> /v1/threads/{thread_id}/runs/{run_id}/submit_tool_outputs >> When a run has the status: "requires_action" and required_action.type is submit_tool_outputs, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request. >> thread_id string Required The ID of the thread to which this run belongs. run_id string Required The ID of the run that requires the tool output submission. 
POST >> /v1/threads/{thread_id}/runs/{run_id}/cancel >> Cancels a run that is in_progress.>> thread_id string Required The ID of the thread to which this run belongs. run_id string Required The ID of the run that requires the tool output submission.
GET >> /v1/threads/{thread_id}/runs/{run_id}/steps >> Returns a list of run steps belonging to a run. >> thread_id string Required The ID of the thread the run and run steps belong to. run_id string Required The ID of the run the run steps belong to.
GET >> /v1/threads/{thread_id}/runs/{run_id}/steps/{step_id} >> Retrieves a run step. >>  thread_id string Required The ID of the thread to which the run and run step belongs. run_id string Required The ID of the run to which the run step belongs. step_id string Required The ID of the run step to retrieve.
POST >> /v1/vector_stores >> Create a vector store. >>
GET >> /v1/vector_stores >> Returns a list of vector stores. >>
GET >> /v1/vector_stores/{vector_store_id} >> Retrieves a vector store. >> vector_store_id string Required The ID of the vector store to retrieve.
POST >> /v1/vector_stores/{vector_store_id} >> Modifies a vector store. >> vector_store_id string Required The ID of the vector store to modify. 
DELETE >> /v1/vector_stores/{vector_store_id} >> Delete a vector store.>> vector_store_id string Required The ID of the vector store to modify. >> 
POST >> /v1/vector_stores/{vector_store_id}/files >> Create a vector store file by attaching a File to a vector store. >> vector_store_id string Required The ID of the vector store for which to create a File.
GET >> /v1/vector_stores/{vector_store_id}/files >> Returns a list of vector store files. >> vector_store_id string Required The ID of the vector store that the files belong to.
GET >> /v1/vector_stores/{vector_store_id}/files/{file_id} >> Retrieves a vector store file. >>  vector_store_id string Required The ID of the vector store that the file belongs to. file_id string Required The ID of the file being retrieved.
DELETE >> /v1/vector_stores/{vector_store_id}/files/{file_id} >> Delete a vector store file. This will remove the file from the vector store but the file itself will not be deleted. To delete the file, use the delete file endpoint. >> vector_store_id string Required The ID of the vector store that the file belongs to. file_id string Required The ID of the file to delete.
POST >> /v1/vector_stores/{vector_store_id}/file_batches >> Create a vector store file batch. >> vector_store_id string Required The ID of the vector store for which to create a File Batch.
GET >> /v1/vector_stores/{vector_store_id}/file_batches/{batch_id} >> Retrieves a vector store file batch. >> vector_store_id string Required The ID of the vector store for which to create a File Batch.
POST >> /v1/vector_stores/{vector_store_id}/file_batches/{batch_id}/cancel >> Cancel a vector store file batch. This attempts to cancel the processing of files in this batch as soon as possible. >>  vector_store_id string Required The ID of the vector store that the file batch belongs to. batch_id string Required The ID of the file batch to cancel.
GET >> /v1/vector_stores/{vector_store_id}/file_batches/{batch_id}/files >> Returns a list of vector store files in a batch. >>  vector_store_id string Required The ID of the vector store that the files belong to. batch_id string Required The ID of the file batch that the files belong to.