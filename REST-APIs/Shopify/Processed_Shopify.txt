{"http_verb": "GET ", "uri": " /admin/oauth/access_scopes.json ", "processed_uri": ["admin", "authentication", "access", "scopes"], "description": " Retrieves a list of access scopes associated to the access token.\n", "parameter": "", "processed_des_para": ["retrieve", "list", "access", "scope", "associate", "access", "token"]}
{"http_verb": "POST ", "uri": " /storefront_access_tokens.json ", "processed_uri": ["storefront", "access", "tokens"], "description": " Creates a new StorefrontAccessToken\n", "parameter": "", "processed_des_para": ["create", "new", "storefront", "access", "token"]}
{"http_verb": "DELETE ", "uri": " /storefront_access_tokens/{storefront_access_token_id}.json ", "processed_uri": ["storefront", "access", "tokens", "storefront", "access", "token", "identification"], "description": " Deletes an existing storefront access token\n", "parameter": "", "processed_des_para": ["delete", "exist", "storefront", "access", "token"]}
{"http_verb": "GET ", "uri": " /storefront_access_tokens.json ", "processed_uri": ["storefront", "access", "tokens"], "description": " Retrieves a list of storefront access tokens that have been issued\n", "parameter": "", "processed_des_para": ["retrieve", "list", "storefront", "access", "token", "issue"]}
{"http_verb": "GET ", "uri": " /reports.json ", "processed_uri": ["reports"], "description": " Retrieves a list of reports\n", "parameter": "", "processed_des_para": ["retrieve", "list", "report"]}
{"http_verb": "GET ", "uri": " /reports/{report_id}.json ", "processed_uri": ["reports", "report", "identification"], "description": " Retrieves a single report\n", "parameter": "", "processed_des_para": ["retrieve", "single", "report"]}
{"http_verb": "POST ", "uri": " /reports.json ", "processed_uri": ["reports"], "description": " Creates a new report\n", "parameter": "", "processed_des_para": ["create", "new", "report"]}
{"http_verb": "PUT ", "uri": " /reports/{report_id}.json ", "processed_uri": ["reports", "report", "identification"], "description": " Updates a report\n", "parameter": "", "processed_des_para": ["update", "report"]}
{"http_verb": "DELETE ", "uri": " /reports/{report_id}.json ", "processed_uri": ["reports", "report", "identification"], "description": " Deletes a report\n", "parameter": "", "processed_des_para": ["delete", "report"]}
{"http_verb": "POST ", "uri": " /application_charges.json ", "processed_uri": ["application", "charges"], "description": " Creates an application charge\n", "parameter": "", "processed_des_para": ["create", "application", "charge"]}
{"http_verb": "GET ", "uri": " /application_charges/{application_charge_id}.json ", "processed_uri": ["application", "charges", "application", "charge", "identification"], "description": " Retrieves an application charge\n", "parameter": "", "processed_des_para": ["retrieve", "application", "charge"]}
{"http_verb": "GET ", "uri": " /application_charges.json?since_id=556467234 ", "processed_uri": ["application", "charges"], "description": " Retrieves a list of application charges\n", "parameter": "", "processed_des_para": ["retrieve", "list", "application", "charge"]}
{"http_verb": "POST ", "uri": " /application_credits.json ", "processed_uri": ["application", "credits"], "description": " Creates an application credit\n", "parameter": "", "processed_des_para": ["create", "application", "credit"]}
{"http_verb": "GET ", "uri": " /application_credits/{application_credit_id}.json ", "processed_uri": ["application", "credits", "application", "credit", "identification"], "description": " Retrieves a single application credit\n", "parameter": "", "processed_des_para": ["retrieve", "single", "application", "credit"]}
{"http_verb": "GET ", "uri": " /application_credits.json ", "processed_uri": ["application", "credits"], "description": " Retrieves all application credits\n", "parameter": "", "processed_des_para": ["retrieve", "application", "credit"]}
{"http_verb": "POST ", "uri": " /recurring_application_charges.json ", "processed_uri": ["recurring", "application", "charges"], "description": " Creates a recurring application charge\n", "parameter": "", "processed_des_para": ["create", "recur", "application", "charge"]}
{"http_verb": "GET ", "uri": " /recurring_application_charges/{recurring_application_charge_id}.json ", "processed_uri": ["recurring", "application", "charges", "recurring", "application", "charge", "identification"], "description": " Retrieves a single charge\n", "parameter": "", "processed_des_para": ["retrieve", "single", "charge"]}
{"http_verb": "GET ", "uri": " /recurring_application_charges.json ", "processed_uri": ["recurring", "application", "charges"], "description": " Retrieves a list of recurring application charges\n", "parameter": "", "processed_des_para": ["retrieve", "list", "recur", "application", "charge"]}
{"http_verb": "DELETE ", "uri": " /recurring_application_charges/{recurring_application_charge_id}.json ", "processed_uri": ["recurring", "application", "charges", "recurring", "application", "charge", "identification"], "description": " Cancels a recurring application charge\n", "parameter": "", "processed_des_para": ["cancel", "recur", "application", "charge"]}
{"http_verb": "PUT ", "uri": " /recurring_application_charges/{recurring_application_charge_id}/customize.json?recurring_application_charge[capped_amount]=200 ", "processed_uri": ["recurring", "application", "charges", "recurring", "application", "charge", "identification", "customize"], "description": " Updates the capped amount of a recurring application charge\n", "parameter": "", "processed_des_para": ["update", "cap", "amount", "recur", "application", "charge"]}
{"http_verb": "GET ", "uri": " /customers.json ", "processed_uri": ["customers"], "description": " Retrieves a list of customers\n", "parameter": "", "processed_des_para": ["retrieve", "list", "customer"]}
{"http_verb": "GET ", "uri": " /customers/search.json?query=Bob country:United States ", "processed_uri": ["customers", "search"], "description": " Searches for customers that match a supplied query\n", "parameter": "", "processed_des_para": ["search", "customer", "match", "supply", "query"]}
{"http_verb": "GET ", "uri": " /customers/{customer_id}.json ", "processed_uri": ["customers", "customer", "identification"], "description": " Retrieves a single customer\n", "parameter": "", "processed_des_para": ["retrieve", "single", "customer"]}
{"http_verb": "POST ", "uri": " /customers.json ", "processed_uri": ["customers"], "description": " Creates a customer\n", "parameter": "", "processed_des_para": ["create", "customer"]}
{"http_verb": "PUT ", "uri": " /customers/{customer_id}.json ", "processed_uri": ["customers", "customer", "identification"], "description": " Updates a customer\n", "parameter": "", "processed_des_para": ["update", "customer"]}
{"http_verb": "POST ", "uri": " /customers/{customer_id}/account_activation_url.json ", "processed_uri": ["customers", "customer", "identification", "account", "activation", "url"], "description": " Creates an account activation URL for a customer\n", "parameter": "", "processed_des_para": ["create", "account", "activation", "ur", "customer"]}
{"http_verb": "POST ", "uri": " /customers/{customer_id}/send_invite.json ", "processed_uri": ["customers", "customer", "identification", "send", "invite"], "description": " Sends an account invite to a customer\n", "parameter": "", "processed_des_para": ["send", "account", "invite", "customer"]}
{"http_verb": "DELETE ", "uri": " /customers/{customer_id}.json ", "processed_uri": ["customers", "customer", "identification"], "description": " Deletes a customer.\n", "parameter": "", "processed_des_para": ["delete", "customer"]}
{"http_verb": "GET ", "uri": " /customers/count.json ", "processed_uri": ["customers", "count"], "description": " Retrieves a count of customers\n", "parameter": "", "processed_des_para": ["retrieve", "count", "customer"]}
{"http_verb": "GET ", "uri": " /customers/{customer_id}/orders.json ", "processed_uri": ["customers", "customer", "identification", "orders"], "description": " Retrieves all orders belonging to a customer\n", "parameter": "", "processed_des_para": ["retrieve", "order", "belong", "customer"]}
{"http_verb": "GET ", "uri": " /customers/{customer_id}/addresses.json ", "processed_uri": ["customers", "customer", "identification", "addresses"], "description": " Retrieves a list of addresses for a customer\n", "parameter": "", "processed_des_para": ["retrieve", "list", "address", "customer"]}
{"http_verb": "GET ", "uri": " /customers/{customer_id}/addresses/{address_id}.json ", "processed_uri": ["customers", "customer", "identification", "addresses", "address", "identification"], "description": " Retrieves details for a single customer address\n", "parameter": "", "processed_des_para": ["retrieve", "detail", "single", "customer", "address"]}
{"http_verb": "POST ", "uri": " /customers/{customer_id}/addresses.json ", "processed_uri": ["customers", "customer", "identification", "addresses"], "description": " Creates a new address for a customer\n", "parameter": "", "processed_des_para": ["create", "new", "address", "customer"]}
{"http_verb": "PUT ", "uri": " /customers/{customer_id}/addresses/{address_id}.json ", "processed_uri": ["customers", "customer", "identification", "addresses", "address", "identification"], "description": " Updates an existing customer address\n", "parameter": "", "processed_des_para": ["update", "exist", "customer", "address"]}
{"http_verb": "DELETE ", "uri": " /customers/{customer_id}/addresses/{address_id}.json ", "processed_uri": ["customers", "customer", "identification", "addresses", "address", "identification"], "description": " Removes an address from a customer’s address list\n", "parameter": "", "processed_des_para": ["remove", "address", "customer", "address", "list"]}
{"http_verb": "PUT ", "uri": " /customers/{customer_id}/addresses/set.json?address_ids[]=1053317294&operation=destroy ", "processed_uri": ["customers", "customer", "identification", "addresses", "set"], "description": " Performs bulk operations for multiple customer addresses\n", "parameter": "", "processed_des_para": ["perform", "bulk", "operation", "multiple", "customer", "address"]}
{"http_verb": "PUT ", "uri": " /customers/{customer_id}/addresses/{address_id}/default.json ", "processed_uri": ["customers", "customer", "identification", "addresses", "address", "identification", "default"], "description": " Sets the default address for a customer\n", "parameter": "", "processed_des_para": ["set", "default", "address", "customer"]}
{"http_verb": "POST ", "uri": " /price_rules/{price_rule_id}/discount_codes.json ", "processed_uri": ["price", "rules", "price", "rule", "identification", "discount", "codes"], "description": " Creates a discount code\n", "parameter": "", "processed_des_para": ["create", "discount", "code"]}
{"http_verb": "PUT ", "uri": " /price_rules/{price_rule_id}/discount_codes/{discount_code_id}.json ", "processed_uri": ["price", "rules", "price", "rule", "identification", "discount", "codes", "discount", "code", "identification"], "description": " Updates an existing discount code\n", "parameter": "", "processed_des_para": ["update", "exist", "discount", "code"]}
{"http_verb": "GET ", "uri": " /price_rules/{price_rule_id}/discount_codes.json ", "processed_uri": ["price", "rules", "price", "rule", "identification", "discount", "codes"], "description": " Retrieves a list of discount codes\n", "parameter": "", "processed_des_para": ["retrieve", "list", "discount", "code"]}
{"http_verb": "GET ", "uri": " /price_rules/{price_rule_id}/discount_codes/{discount_code_id}.json ", "processed_uri": ["price", "rules", "price", "rule", "identification", "discount", "codes", "discount", "code", "identification"], "description": " Retrieves a single discount code\n", "parameter": "", "processed_des_para": ["retrieve", "single", "discount", "code"]}
{"http_verb": "GET ", "uri": " /discount_codes/lookup.json?code=SUMMERSALE10OFF ", "processed_uri": ["discount", "codes", "lookup"], "description": " Retrieves the location of a discount code\n", "parameter": "", "processed_des_para": ["retrieve", "location", "discount", "code"]}
{"http_verb": "GET ", "uri": " /discount_codes/count.json ", "processed_uri": ["discount", "codes", "count"], "description": " Retrieves a count of discount codes for a shop\n", "parameter": "", "processed_des_para": ["retrieve", "count", "discount", "code", "shop"]}
{"http_verb": "DELETE ", "uri": " /price_rules/{price_rule_id}/discount_codes/{discount_code_id}.json ", "processed_uri": ["price", "rules", "price", "rule", "identification", "discount", "codes", "discount", "code", "identification"], "description": " Deletes a discount code\n", "parameter": "", "processed_des_para": ["delete", "discount", "code"]}
{"http_verb": "POST ", "uri": " /price_rules/{price_rule_id}/batch.json ", "processed_uri": ["price", "rules", "price", "rule", "identification", "batch"], "description": " Creates a discount code creation job\n", "parameter": "", "processed_des_para": ["create", "discount", "code", "creation", "job"]}
{"http_verb": "GET ", "uri": " /price_rules/{price_rule_id}/batch/{batch_id}.json ", "processed_uri": ["price", "rules", "price", "rule", "identification", "batch", "batch", "identification"], "description": " Retrieves a discount code creation job\n", "parameter": "", "processed_des_para": ["retrieve", "discount", "code", "creation", "job"]}
{"http_verb": "GET ", "uri": " /price_rules/{price_rule_id}/batch/{batch_id}/discount_codes.json ", "processed_uri": ["price", "rules", "price", "rule", "identification", "batch", "batch", "identification", "discount", "codes"], "description": " Retrieves a list of discount codes for a discount code creation job\n", "parameter": "", "processed_des_para": ["retrieve", "list", "discount", "code", "discount", "code", "creation", "job"]}
{"http_verb": "POST ", "uri": " /price_rules.json ", "processed_uri": ["price", "rules"], "description": " Creates a price rule\n", "parameter": "", "processed_des_para": ["create", "price", "rule"]}
{"http_verb": "PUT ", "uri": " /price_rules/{price_rule_id}.json ", "processed_uri": ["price", "rules", "price", "rule", "identification"], "description": " Updates an existing a price rule\n", "parameter": "", "processed_des_para": ["update", "exist", "price", "rule"]}
{"http_verb": "GET ", "uri": " /price_rules.json ", "processed_uri": ["price", "rules"], "description": " Retrieves a list of price rules\n", "parameter": "", "processed_des_para": ["retrieve", "list", "price", "rule"]}
{"http_verb": "GET ", "uri": " /price_rules/{price_rule_id}.json ", "processed_uri": ["price", "rules", "price", "rule", "identification"], "description": " Retrieves a single price rule\n", "parameter": "", "processed_des_para": ["retrieve", "single", "price", "rule"]}
{"http_verb": "GET ", "uri": " /price_rules/count.json ", "processed_uri": ["price", "rules", "count"], "description": " Retrieves a count of all price rules\n", "parameter": "", "processed_des_para": ["retrieve", "count", "price", "rule"]}
{"http_verb": "DELETE ", "uri": " /price_rules/{price_rule_id}.json ", "processed_uri": ["price", "rules", "price", "rule", "identification"], "description": " Remove an existing PriceRule\n", "parameter": "", "processed_des_para": ["remove", "exist", "price", "rule"]}
{"http_verb": "GET ", "uri": " /events.json ", "processed_uri": ["events"], "description": " Retrieves a list of events\n", "parameter": "", "processed_des_para": ["retrieve", "list", "event"]}
{"http_verb": "GET ", "uri": " /events/{event_id}.json ", "processed_uri": ["events", "event", "identification"], "description": " Retrieves a single event\n", "parameter": "", "processed_des_para": ["retrieve", "single", "event"]}
{"http_verb": "GET ", "uri": " /events/count.json?created_at_min=2008-01-10T13:00:00+00:00 ", "processed_uri": ["events", "count"], "description": " Retrieves a count of events\n", "parameter": "", "processed_des_para": ["retrieve", "count", "event"]}
{"http_verb": "GET ", "uri": " /webhooks.json ", "processed_uri": ["web", "hooks"], "description": " Retrieves a list of webhooks\n", "parameter": "", "processed_des_para": ["retrieve", "list", "web", "hook"]}
{"http_verb": "GET ", "uri": " /webhooks/count.json ", "processed_uri": ["web", "hooks", "count"], "description": " Receive a count of all Webhooks\n", "parameter": "", "processed_des_para": ["receive", "count", "web", "hook"]}
{"http_verb": "GET ", "uri": " /webhooks/{webhook_id}.json ", "processed_uri": ["web", "hooks", "webhook", "identification"], "description": " Receive a single Webhook\n", "parameter": "", "processed_des_para": ["receive", "single", "webhook"]}
{"http_verb": "POST ", "uri": " /webhooks.json ", "processed_uri": ["web", "hooks"], "description": " Create a new Webhook\n", "parameter": "", "processed_des_para": ["create", "new", "webhook"]}
{"http_verb": "PUT ", "uri": " /webhooks/{webhook_id}.json ", "processed_uri": ["web", "hooks", "webhook", "identification"], "description": " Modify an existing Webhook\n", "parameter": "", "processed_des_para": ["modify", "exist", "webhook"]}
{"http_verb": "DELETE ", "uri": " /webhooks/{webhook_id}.json ", "processed_uri": ["web", "hooks", "webhook", "identification"], "description": " Remove an existing Webhook\n", "parameter": "", "processed_des_para": ["remove", "exist", "webhook"]}
{"http_verb": "GET ", "uri": " /inventory_items.json?ids=808950810,39072856,457924702 ", "processed_uri": ["inventory", "items"], "description": " Retrieves a list of inventory items\n", "parameter": "", "processed_des_para": ["retrieve", "list", "inventory", "item"]}
{"http_verb": "GET ", "uri": " /inventory_items/{inventory_item_id}.json ", "processed_uri": ["inventory", "items", "inventory", "item", "identification"], "description": " Retrieves a single inventory item by ID\n", "parameter": "", "processed_des_para": ["retrieve", "single", "inventory", "item"]}
{"http_verb": "PUT ", "uri": " /inventory_items/{inventory_item_id}.json ", "processed_uri": ["inventory", "items", "inventory", "item", "identification"], "description": " Updates an existing inventory item\n", "parameter": "", "processed_des_para": ["update", "exist", "inventory", "item"]}
{"http_verb": "GET ", "uri": " /inventory_levels.json ", "processed_uri": ["inventory", "levels"], "description": " Retrieves a list of inventory levels\n", "parameter": "", "processed_des_para": ["retrieve", "list", "inventory", "level"]}
{"http_verb": "POST ", "uri": " /inventory_levels/adjust.json ", "processed_uri": ["inventory", "levels", "adjust"], "description": " Adjusts the inventory level of an inventory item at a location\n", "parameter": "", "processed_des_para": ["adjust", "inventory", "level", "inventory", "item", "location"]}
{"http_verb": "DELETE ", "uri": " /inventory_levels.json?inventory_item_id=808950810&location_id=905684977 ", "processed_uri": ["inventory", "levels"], "description": " Deletes an inventory level from a location\n", "parameter": "", "processed_des_para": ["delete", "inventory", "level", "location"]}
{"http_verb": "POST ", "uri": " /inventory_levels/connect.json ", "processed_uri": ["inventory", "levels", "connect"], "description": " Connects an inventory item to a location\n", "parameter": "", "processed_des_para": ["connect", "inventory", "item", "location"]}
{"http_verb": "POST ", "uri": " /inventory_levels/set.json ", "processed_uri": ["inventory", "levels", "set"], "description": " Sets the inventory level for an inventory item at a location\n", "parameter": "", "processed_des_para": ["set", "inventory", "level", "inventory", "item", "location"]}
{"http_verb": "GET ", "uri": " /locations.json ", "processed_uri": ["locations"], "description": " Retrieves a list of locations", "parameter": "", "processed_des_para": ["retrieve", "list", "location"]}
