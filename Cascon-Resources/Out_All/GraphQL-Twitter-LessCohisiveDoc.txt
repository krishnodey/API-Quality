HTTP-Method	URI	Description	Anti-Pattern	Pattern	Comment
DELETE	/v2/users/:id/bookmarks/:tweet_id	Allows a user or authenticated user ID to remove a Bookmark of a Tweet.  id REQUIRED string The user ID of an authenticated user who you are removing a Bookmark of a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. tweet_id REQUIRED string The ID of the Tweet that you would like the id to remove a Bookmark of. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id/bookmarks	Allows you to get an authenticated user's 800 most recent bookmarked Tweets. id REQUIRED string User ID of an authenticated user to request bookmarked Tweets for. 	 0 	 1 	 Pertinent Documentation
POST	/v2/users/:id/bookmarks	Causes the user ID of an authenticated user identified in the path parameter to Bookmark the target Tweet provided in the request body. id REQUIRED string The user ID of an authenticated user who you are bookmarking a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Token associated with the user ID when authenticating your request. tweet_id REQUIRED string The ID of the Tweet that you would like an id to Bookmark. 	 0 	 1 	 Pertinent Documentation
GET	/v2/tweets/search/stream	Streams Tweets in real-time that match the rules that you added to the stream using the POST /tweets/search/stream/rules endpoint. If you haven't added any rules to your stream, you will not receive any Tweets. n/a 	 0 	 1 	 Pertinent Documentation
POST	/v2/tweets/search/stream/rules	Add or delete rules to your stream. Once you've added a rule or rules to your stream, you can retrieve all of the Tweets that match these rules by using the 	 0 	 1 	 Pertinent Documentation
GET	/tweets/search/stream	Return either a single rule, or a list of rules that have been added to the stream. 	 0 	 1 	 Pertinent Documentation
PUT	/v2/tweets/:id/hidden	Hides or unhides a reply to a Tweet. id REQUIRED string Unique identifier of the Tweet to hide or unhide. The Tweet must belong to a conversation initiated by the authenticating user. 	 0 	 1 	 Pertinent Documentation
DELETE	/v2/users/:id/likes/:tweet_id	Allows a user or authenticated user ID to unlike a Tweet. id Required string The user ID who you are removing a Like of a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. tweet_id Required string The ID of the Tweet that you would like the id to unlike. 	 0 	 1 	 Pertinent Documentation
GET	/v2/tweets/:id/liking_users	Allows you to get information about a Tweetâ€™s liking users. id REQUIRED string Tweet ID of the Tweet to request liking users of. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id/liked_tweets	Allows you to get information about a userâ€™s liked Tweets  id REQUIRED string User ID of the user to request liked Tweets for. 	 0 	 1 	 Pertinent Documentation
POST	/v2/users/:id/likes	Causes the user ID identified in the path parameter to Like the target Tweet.  POST /2/users/:id/likes Causes the user ID identified in the path parameter to Like the target Tweet. 	 0 	 1 	 Pertinent Documentation
DELETE	/v2/tweets/:id	Allows a user or authenticated user ID to delete a Tweet. id REQUIRED string The Tweet ID you are deleting. 	 0 	 1 	 Pertinent Documentation
POST	/v2/tweets	Creates a Tweet on behalf of an authenticated user.  direct_message_deep_link OPTIONAL string Tweets a link directly to a Direct Message conversation with an account. Example: {"text": "Tweeting a DM deep link!", "direct_message_deep_link": "https://twitter.com/messages/compose?recipient_id=2244994945"} for_super_followers_only OPTIONAL boolean Allows you to Tweet exclusively for Super Followers. Example: {"text": "Hello World!", "for_super_followers_only": true} geo OPTIONAL object A JSON object that contains location information for a Tweet. You can only add a location to Tweets if you have geo enabled in your profile settings. If you don't have geo enabled, you can still add a location parameter in your request body, but it won't get attached to your Tweet geo.place_id OPTIONAL string Place ID being attached to the Tweet for geo location. Example: {"text": "Tweeting with geo!","geo": {"place_id": "5a110d312052166f"}} media OPTIONAL object A JSON object that contains media information being attached to created Tweet. This is mutually exclusive from Quote Tweet ID and Poll. media.media_ids OPTIONAL array A list of Media IDs being attached to the Tweet. This is only required if the request includes the tagged_user_ids. Example: {"text": "Tweeting with media!", "media": {"media_ids": ["1455952740635586573"]}} media.tagged_user_ids OPTIONAL array A list of User IDs being tagged in the Tweet with Media. If the user you're tagging doesn't have photo-tagging enabled, their names won't show up in the list of tagged users even though the Tweet is successfully created. Example: {"text": "Tagging users in images!", "media": {"media_ids": ["1455952740635586573"], "tagged_user_ids": ["2244994945","6253282"]}} poll OPTIONAL object A JSON object that contains options for a Tweet with a poll. This is mutually exclusive from Media and Quote Tweet ID. poll.duration_minutes OPTIONAL number Duration of the poll in minutes for a Tweet with a poll. This is only required if the request includes poll. options. Example: {"text": "Tweeting with polls!", "poll": {"options": ["yes", "maybe", "no"], "duration_minutes": 120}} poll.options OPTIONAL array A list of poll options for a Tweet with a poll. For the request to be successful it must also include duration_minutes too. Example: {"text": "Tweeting with polls!", "poll": {"options": ["yes", "maybe", "no"], "duration_minutes": 120}}" quote_tweet_id OPTIONAL string Link to the Tweet being quoted. Example: {"text": "Yay!", "quote_tweet_id": "1455953449422516226"} reply OPTIONAL object A JSON object that contains information of the Tweet being replied to. reply.exclude_reply_user_ids OPTIONAL array A list of User IDs to be excluded from the reply Tweet thus removing a user from a thread. Example: {"text": "Yay!", "reply": {"in_reply_to_tweet_id": "1455953449422516226", "exclude_reply_user_ids": ["6253282"]}} reply.in_reply_to_tweet_id OPTIONAL string Tweet ID of the Tweet being replied to. Please note that in_reply_to_tweet_id needs to be in the request if exclude_reply_user_ids is present. Example: {"text": "Excited!", "reply": {"in_reply_to_tweet_id": "1455953449422516226"}} reply_settings OPTIONAL string Settings to indicate who can reply to the Tweet. Options include "mentionedUsers" and "following". If the field isnâ€™t specified, it will default to everyone. Example:{"text": "Tweeting with reply settings!", "reply_settings": "mentionedUsers"} text OPTIONAL string Text of the Tweet being created. This field is required if media.media_ids is not present. Example: {"text": "Hello World!"} 	 0 	 1 	 Pertinent Documentation
GET	/v2/tweets/:id/quote_tweets	Returns Quote Tweets for a Tweet specified by the requested Tweet ID.  id REQUIRED string Unique identifier of the Tweet to request 	 0 	 1 	 Pertinent Documentation
DELETE	/v2/users/:id/retweets/:source_tweet_id	Allows a user or authenticated user ID to remove the Retweet of a Tweet.  id REQUIRED string The user ID who you are removing a the Retweet of a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. source_tweet_id REQUIRED string The ID of the Tweet that you would like the id to remove the Retweet of. 	 0 	 1 	 Pertinent Documentation
GET	/v2/tweets/:id/retweeted_by	Allows you to get information about who has Retweeted a Tweet.  id REQUIRED string Tweet ID of the Tweet to request Retweeting users of. 	 0 	 1 	 Pertinent Documentation
GET	/v2/tweets/:id/retweets	Returns the Retweets for a given Tweet ID.  id REQUIRED string Unique identifier of the Tweet. 	 0 	 1 	 Pertinent Documentation
POST	/v2/users/:id/retweets	Causes the user ID identified in the path parameter to Retweet the target Tweet.  id REQUIRED string The user ID who you are Retweeting a Tweet on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. 	 0 	 1 	 Pertinent Documentation
GET	/v2/tweets/search/all	The full-archive search endpoint returns the complete history of public Tweets matching a search query; since the first Tweet was created March 26, 2006.  n/a 	 0 	 1 	 Pertinent Documentation
GET	/v2/tweets/search/recent	The recent search endpoint returns Tweets from the last seven days that match a search query. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id/mentions	Returns Tweets mentioning a single user specified by the requested user ID. By default, the most recent ten Tweets are returned per request. Using pagination, up to the most recent 800 Tweets can be retrieved.  id REQUIRED string Unique identifier of the user for whom to return Tweets mentioning the user. User ID can be referenced using the user/lookup endpoint. More information on Twitter IDs is here. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id/timelines/reverse_chronological	Allows you to retrieve a collection of the most recent Tweets and Retweets posted by you and users you follow. This endpoint can return every Tweet created on a timeline over the last 7 days as well as the most recent 800 regardless of creation date.  id REQUIRED string Unique identifier of the user that is requesting their chronological home timeline. User ID can be referenced using the user/lookup endpoint. More information on Twitter IDs is here. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id/tweets	Returns Tweets composed by a single user, specified by the requested user ID. By default, the most recent ten Tweets are returned per request. Using pagination, the most recent 3,200 Tweets can be retrieved.  id REQUIRED string Unique identifier of the Twitter account (user ID) for whom to return results. User ID can be referenced using the user/lookup endpoint. More information on Twitter IDs is here. 	 0 	 1 	 Pertinent Documentation
GET	/v2/tweets/counts/all	The full-archive Tweet counts endpoint returns the count of Tweets that match your query from the complete history of public Tweets; since the first Tweet was created March 26, 2006.  n/a 	 0 	 1 	 Pertinent Documentation
GET	/v2/tweets/counts/recent	The recent Tweet counts endpoint returns count of Tweets from the last seven days that match a query.  n/a 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id/blocking	Returns a list of users who are blocked by the specified user ID.  id REQUIRED string The user ID whose blocked users you would like to retrieve. The userâ€™s ID must correspond to the user ID of the authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. 	 0 	 1 	 Pertinent Documentation
DELETE	/v2/users/:source_user_id/following/:target_user_id	Allows a user ID to unfollow another user. The request succeeds with no action when the authenticated user sends a request to a user they're not following or have already unfollowed.  source_user_id REQUIRED string The user ID who you would like to initiate the unfollow on behalf of. You must pass the Access Tokens that relate to this user when authenticating the request. target_user_id REQUIRED string The user ID of the user that you would like the source_user_id to unfollow. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id/followers	Returns a list of users who are followers of the specified user ID.  id REQUIRED string The user ID whose followers you would like to retrieve. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id/following	Returns a list of users the specified user ID is following.  id REQUIRED string The user ID whose following you would like to retrieve. 	 0 	 1 	 Pertinent Documentation
POST	/v2/users/:id/following	Allows a user ID to follow another user. If the target user does not have public Tweets, this endpoint will send a follow request. The request succeeds with no action when the authenticated user sends a request to a user they're already following, or if they're sending a follower request to a user that does not have public Tweets.  id REQUIRED string The authenticated user ID who you would like to initiate the follow on behalf of. You must pass the Access Tokens that relate to this user when authenticating the request. 	 0 	 1 	 Pertinent Documentation
DELETE	/v2/users/:source_user_id/muting/:target_user_id	Allows an authenticated user ID to unmute the target user. The request succeeds with no action when the user sends a request to a user they're not muting or have already unmuted.  source_user_id REQUIRED string The user ID who you would like to initiate an unmute on behalf of. The userâ€™s ID must correspond to the user ID of the authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. target_user_id REQUIRED string The user ID of the user that you would like the source_user_id to unmute. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id/muting	Returns a list of users who are muted by the specified user ID.  id REQUIRED string The user ID whose muted users you would like to retrieve. The userâ€™s ID must correspond to the user ID of the authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. 	 0 	 1 	 Pertinent Documentation
POST	/v2/users/:id/muting	Allows an authenticated user ID to mute the target user.  id REQUIRED string The user ID who you would like to initiate the mute on behalf of. It must match your own user ID or that of an authenticating user, meaning that you must pass the Access Tokens associated with the user ID when authenticating your request. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/search	The users endpoint returns Users that match a search query. n/a 	 0 	 1 	 Pertinent Documentation
GET	/v2/users	Returns a variety of information about one or more users specified by the requested IDs.  n/a 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id	Returns a variety of information about a single user specified by the requested ID. id REQUIRED string The ID of the user to lookup. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/by	Returns a variety of information about one or more users specified by their usernames. n/a 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/by/username/:username	Returns a variety of information about one or more users specified by their usernames. username REQUIRED string The Twitter username (handle) of the user. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/me	Returns information about an authorized user.  n/a 	 0 	 1 	 Pertinent Documentation
GET	/v2/spaces/search	Return live or scheduled Spaces matching your specified search terms. This endpoint performs a keyword search, meaning that it will return Spaces that are an exact case-insensitive match of the specified search term. The search term will match the original title of the Space.  n/a 	 0 	 1 	 Pertinent Documentation
GET	/v2/spaces/:id	Returns a variety of information about a single Space specified by the requested ID.  id REQUIRED string Unique identifier of the Space to request. 	 0 	 1 	 Pertinent Documentation
GET	/v2/spaces/:id/buyers	Returns a list of user who purchased a ticket to the requested Space. You must authenticate the request using the Access Token of the creator of the requested Space.  id REQUIRED string Unique identifier of the Space for which you want to request Tweets. 	 0 	 1 	 Pertinent Documentation
GET	/v2/spaces/:id/tweets	Returns Tweets shared in the requested Spaces.  id REQUIRED string Unique identifier of the Space containing the Tweets you'd like to access. 	 0 	 1 	 Pertinent Documentation
GET	/v2/spaces/by/creator_ids	Returns live or scheduled Spaces created by the specified user IDs. Up to 100 comma-separated IDs can be looked up using this endpoint.  n/a 	 0 	 1 	 Pertinent Documentation
GET	/v2/lists/:id/tweets	Returns a list of Tweets from the specified List.  id REQUIRED string The ID of the List whose Tweets you would like to retrieve. 	 0 	 1 	 Pertinent Documentation
GET	/v2/lists/:id	Returns the details of a specified List.  id REQUIRED string The ID of the List to lookup. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id/owned_lists	Returns all Lists owned by the specified user.  id REQUIRED string The user ID whose owned Lists you would like to retrieve. 	 0 	 1 	 Pertinent Documentation
DELETE	/v2/lists/:id/members/:user_id	Enables the authenticated user to remove a member from a List they own.  id REQUIRED string The ID of the List you are removing a member from. user_id REQUIRED string The ID of the user you wish to remove as a member of the List. 	 0 	 1 	 Pertinent Documentation
GET	/v2/lists/:id/members	Returns a list of users who are members of the specified List.  id REQUIRED string The ID of the List whose members you would like to retrieve. 	 0 	 1 	 Pertinent Documentation
GET	/v2/users/:id/list_memberships	Returns all Lists a specified user is a member of.  id REQUIRED string The user ID whose List memberships you would like to retrieve. 	 0 	 1 	 Pertinent Documentation
POST	/v2/lists/:id/members	Enables the authenticated user to add a member to a List they own.  id REQUIRED string The ID of the List you are adding a member to. 	 0 	 1 	 Pertinent Documentation
