HTTP-Method	URI	Description	Anti-Pattern	Pattern	Comment
GET	/codeOfConduct	Look up a code of conduct by its key.  key: The code of conduct's key. 	 0 	 1 	 Contextual Resource Names
GET	/codesOfConduct	Look up a code of conduct by its key. 	 0 	 1 	 Contextual Resource Names
GET	/enterprise	Look up an enterprise by URL slug.  invitationToken: The enterprise invitation token., slug: The enterprise URL slug. 	 0 	 1 	 Contextual Resource Names
GET	/enterpriseAdministratorInvitation	Look up a pending enterprise administrator invitation by invitee, enterprise and role.  enterpriseSlug: The slug of the enterprise the user was invited to join., role: The role for the business member invitation., userLogin: The login of the user invited to join the business. 	 0 	 1 	 Contextual Resource Names
GET	/enterpriseAdministratorInvitationByToken	Look up a pending enterprise administrator invitation by invitation token.  invitationToken: The invitation token sent with the invitation email. 	 0 	 1 	 Contextual Resource Names
GET	/license	Look up an open source license by its key.  key: The license's downcased SPDX ID. 	 0 	 1 	 Contextual Resource Names
GET	/licenses	Return a list of known open source licenses. 	 0 	 1 	 Contextual Resource Names
GET	/marketplaceCategories	Get alphabetically sorted list of Marketplace categories.  excludeEmpty: Exclude categories with no listings., excludeSubcategories: Returns top level categories only, excluding any subcategories., includeCategories: Return only the specified categories. 	 0 	 1 	 Contextual Resource Names
GET	/marketplaceCategory	Look up a Marketplace category by its slug.  slug: The URL slug of the category., useTopicAliases: Also check topic aliases for the category slug. 	 0 	 1 	 Contextual Resource Names
GET	/marketplaceListing	Look up a single Marketplace listing.  slug: Select the listing that matches this slug. It's the short name of the listing used in its URL. 	 0 	 1 	 Contextual Resource Names
GET	/marketplaceListings	Look up Marketplace listings.  adminId: Select listings that can be administered by the specified user., after: Returns the elements in the list that come after the specified cursor., allStates: Select listings visible to the viewer even if they are not approved. If omitted orfalse, only approved listings will be returned., before: Returns the elements in the list that come before the specified cursor., categorySlug: Select only listings with the given category., first: Returns the first n elements from the list., last: Returns the last n elements from the list., organizationId: Select listings for products owned by the specified organization., primaryCategoryOnly: Select only listings where the primary category matches the given category slug., slugs: Select the listings with these slugs, if they are visible to the viewer., useTopicAliases: Also check topic aliases for the category slug., viewerCanAdmin: Select listings to which user has admin access. If omitted, listings visible to theviewer are returned., withFreeTrialsOnly: Select only listings that offer a free trial. 	 0 	 1 	 Contextual Resource Names
GET	/meta	Return information about the GitHub instance. 	 1 	 0 	 Contextless Resource Names
GET	/node	Fetches an object given its ID.  id: ID of the object. 	 0 	 1 	 Contextual Resource Names
GET	/nodes	Lookup nodes by a list of IDs.  ids: The list of node IDs. 	 0 	 1 	 Contextual Resource Names
GET	/organization	Lookup a organization by login.  login: The organization's login. 	 0 	 1 	 Contextual Resource Names
GET	/rateLimit	The client's rate limit information.  dryRun: If true, calculate the cost for the query without evaluating it. 	 1 	 0 	 Contextless Resource Names
GET	/relay	Workaround for re-exposing the root query object. (Refer tohttps://github.com/facebook/relay/issues/112 for more information.). 	 1 	 0 	 Contextless Resource Names
GET	/repository	Lookup a given repository by the owner and repository name.  followRenames: Follow repository renames. If disabled, a repository referenced by its old name will return an error., name: The name of the repository., owner: The login field of a user or organization. 	 0 	 1 	 Contextual Resource Names
GET	/repositoryOwner	Lookup a repository owner (ie. either a User or an Organization) by login.  login: The username to lookup the owner by. 	 0 	 1 	 Contextual Resource Names
GET	/resource	Lookup resource by a URL.  url: The URL. 	 0 	 1 	 Contextual Resource Names
GET	/search	Perform a search across resources, returning a maximum of 1,000 results.  after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., first: Returns the first n elements from the list., last: Returns the last n elements from the list., query: The search string to look for., type: The types of search items to search within. 	 0 	 1 	 Contextual Resource Names
GET	/securityAdvisories	GitHub Security Advisories.  after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., classifications: A list of classifications to filter advisories by., first: Returns the first n elements from the list., identifier: Filter advisories by identifier, e.g. GHSA or CVE., last: Returns the last n elements from the list., orderBy: Ordering options for the returned topics., publishedSince: Filter advisories to those published since a time in the past., updatedSince: Filter advisories to those updated since a time in the past. 	 0 	 1 	 Contextual Resource Names
GET	/securityAdvisory	Fetch a Security Advisory by its GHSA ID.  ghsaId: GitHub Security Advisory ID. 	 0 	 1 	 Contextual Resource Names
GET	/securityVulnerabilities	Software Vulnerabilities documented by GitHub Security Advisories.  after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., classifications: A list of advisory classifications to filter vulnerabilities by., ecosystem: An ecosystem to filter vulnerabilities by., first: Returns the first n elements from the list., last: Returns the last n elements from the list., orderBy: Ordering options for the returned topics., package: A package name to filter vulnerabilities by., severities: A list of severities to filter vulnerabilities by. 	 0 	 1 	 Contextual Resource Names
GET	/sponsorables	Users and organizations who can be sponsored via GitHub Sponsors.  after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., dependencyEcosystem: Optional filter for which dependencies should be checked for sponsorableowners. Only sponsorable owners of dependencies in this ecosystem will beincluded. Used when onlyDependencies = true.Upcoming Change on 2022-07-01 UTCDescription: dependencyEcosystem will be removed. Use the ecosystem argument instead.Reason: The type is switching from SecurityAdvisoryEcosystem to DependencyGraphEcosystem., ecosystem: Optional filter for which dependencies should be checked for sponsorableowners. Only sponsorable owners of dependencies in this ecosystem will beincluded. Used when onlyDependencies = true., first: Returns the first n elements from the list., last: Returns the last n elements from the list., onlyDependencies: Whether only sponsorables who own the viewer's dependencies will bereturned. Must be authenticated to use. Can check an organization insteadfor their dependencies owned by sponsorables by passingorgLoginForDependencies., orderBy: Ordering options for users and organizations returned from the connection., orgLoginForDependencies: Optional organization username for whose dependencies should be checked.Used when onlyDependencies = true. Omit to check your own dependencies. Ifyou are not an administrator of the organization, only dependencies from itspublic repositories will be considered. 	 1 	 0 	 Contextless Resource Names
GET	/topic	Look up a topic by name.  name: The topic's name. 	 0 	 1 	 Contextual Resource Names
GET	/user	Lookup a user by login.  login: The user's login. 	 0 	 1 	 Contextual Resource Names
GET	/viewer	The currently authenticated user. 	 1 	 0 	 Contextless Resource Names
POST	/abortQueuedMigrations	Clear all of a customer's queued migrations.  clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?. 	 1 	 0 	 Contextless Resource Names
POST	/abortRepositoryMigration	Abort a repository migration queued or in progress.  clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?. 	 0 	 1 	 Contextual Resource Names
POST	/acceptEnterpriseAdministratorInvitation	Accepts a pending invitation for a user to become an administrator of an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., invitation: The invitation that was accepted., message: A message confirming the result of accepting an administrator invitation. 	 0 	 1 	 Contextual Resource Names
POST	/acceptTopicSuggestion	Applies a suggested topic to the repository.  clientMutationId: A unique identifier for the client performing the mutation., topic: The accepted topic. 	 0 	 1 	 Contextual Resource Names
POST	/addAssigneesToAssignable	Adds assignees to an assignable object.  assignable: The item that was assigned., clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/addComment	Adds a comment to an Issue or Pull Request.  clientMutationId: A unique identifier for the client performing the mutation., commentEdge: The edge from the subject's comment connection., subject: The subject., timelineEdge: The edge from the subject's timeline connection. 	 0 	 1 	 Contextual Resource Names
POST	/addDiscussionComment	Adds a comment to a Discussion, possibly as a reply to another comment.  clientMutationId: A unique identifier for the client performing the mutation., comment: The newly created discussion comment. 	 0 	 1 	 Contextual Resource Names
POST	/addDiscussionPollVote	Vote for an option in a discussion poll.  clientMutationId: A unique identifier for the client performing the mutation., pollOption: The poll option that a vote was added to. 	 0 	 1 	 Contextual Resource Names
POST	/addEnterpriseOrganizationMember	Adds enterprise members to an organization within the enterprise.  clientMutationId: A unique identifier for the client performing the mutation., users: The users who were added to the organization. 	 0 	 1 	 Contextual Resource Names
POST	/addEnterpriseSupportEntitlement	Adds a support entitlement to an enterprise member.  clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of adding the support entitlement. 	 0 	 1 	 Contextual Resource Names
POST	/addLabelsToLabelable	Adds labels to a labelable object.  clientMutationId: A unique identifier for the client performing the mutation., labelable: The item that was labeled. 	 1 	 0 	 Contextless Resource Names
POST	/addProjectCard	Adds a card to a ProjectColumn. Either contentId or note must be provided but not both.  cardEdge: The edge from the ProjectColumn's card connection., clientMutationId: A unique identifier for the client performing the mutation., projectColumn: The ProjectColumn. 	 0 	 1 	 Contextual Resource Names
POST	/addProjectColumn	Adds a column to a Project.  clientMutationId: A unique identifier for the client performing the mutation., columnEdge: The edge from the project's column connection., project: The project. 	 0 	 1 	 Contextual Resource Names
POST	/addProjectV2DraftIssue	Creates a new draft issue and add it to a Project.  clientMutationId: A unique identifier for the client performing the mutation., projectItem: The draft issue added to the project. 	 0 	 1 	 Contextual Resource Names
POST	/addProjectV2ItemById	Links an existing content instance to a Project.  clientMutationId: A unique identifier for the client performing the mutation., item: The item added to the project. 	 0 	 1 	 Contextual Resource Names
POST	/addPullRequestReview	Adds a review to a Pull Request.  clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The newly created pull request review., reviewEdge: The edge from the pull request's review connection. 	 0 	 1 	 Contextual Resource Names
POST	/addPullRequestReviewComment	Adds a comment to a review.  clientMutationId: A unique identifier for the client performing the mutation., comment: The newly created comment., commentEdge: The edge from the review's comment connection. 	 0 	 1 	 Contextual Resource Names
POST	/addPullRequestReviewThread	Adds a new thread to a pending Pull Request Review.  clientMutationId: A unique identifier for the client performing the mutation., thread: The newly created thread. 	 0 	 1 	 Contextual Resource Names
POST	/addPullRequestReviewThreadReply	Adds a reply to an existing Pull Request Review Thread.  clientMutationId: A unique identifier for the client performing the mutation., comment: The newly created reply. 	 0 	 1 	 Contextual Resource Names
POST	/addReaction	Adds a reaction to a subject.  clientMutationId: A unique identifier for the client performing the mutation., reaction: The reaction object., reactionGroups: The reaction groups for the subject., subject: The reactable subject. 	 0 	 1 	 Contextual Resource Names
POST	/addStar	Adds a star to a Starrable.  clientMutationId: A unique identifier for the client performing the mutation., starrable: The starrable. 	 1 	 0 	 Contextless Resource Names
POST	/addUpvote	Add an upvote to a discussion or discussion comment.  clientMutationId: A unique identifier for the client performing the mutation., subject: The votable subject. 	 1 	 0 	 Contextless Resource Names
POST	/addVerifiableDomain	Adds a verifiable domain to an owning account.  clientMutationId: A unique identifier for the client performing the mutation., domain: The verifiable domain that was added. 	 0 	 1 	 Contextual Resource Names
POST	/approveDeployments	Approve all pending deployments under one or more environments.  clientMutationId: A unique identifier for the client performing the mutation., deployments: The affected deployments. 	 0 	 1 	 Contextual Resource Names
POST	/approveVerifiableDomain	Approve a verifiable domain for notification delivery.  clientMutationId: A unique identifier for the client performing the mutation., domain: The verifiable domain that was approved. 	 0 	 1 	 Contextual Resource Names
POST	/archiveProjectV2Item	Archives a ProjectV2Item.  clientMutationId: A unique identifier for the client performing the mutation., item: The item archived from the project. 	 0 	 1 	 Contextual Resource Names
POST	/archiveRepository	Marks a repository as archived.  clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that was marked as archived. 	 0 	 1 	 Contextual Resource Names
POST	/cancelEnterpriseAdminInvitation	Cancels a pending invitation for an administrator to join an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., invitation: The invitation that was canceled., message: A message confirming the result of canceling an administrator invitation. 	 0 	 1 	 Contextual Resource Names
POST	/cancelSponsorship	Cancel an active sponsorship.  clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The tier that was being used at the time of cancellation. 	 0 	 1 	 Contextual Resource Names
POST	/changeUserStatus	Update your status on GitHub.  clientMutationId: A unique identifier for the client performing the mutation., status: Your updated status. 	 0 	 1 	 Contextual Resource Names
POST	/clearLabelsFromLabelable	Clears all labels from a labelable object.  clientMutationId: A unique identifier for the client performing the mutation., labelable: The item that was unlabeled. 	 1 	 0 	 Contextless Resource Names
POST	/clearProjectV2ItemFieldValue	This mutation clears the value of a field for an item in a Project. Currentlyonly text, number, date, assignees, labels, single-select, iteration andmilestone fields are supported.  clientMutationId: A unique identifier for the client performing the mutation., projectV2Item: The updated item. 	 0 	 1 	 Contextual Resource Names
POST	/cloneProject	Creates a new project by cloning configuration from an existing project.  clientMutationId: A unique identifier for the client performing the mutation., jobStatusId: The id of the JobStatus for populating cloned fields., project: The new cloned project. 	 0 	 1 	 Contextual Resource Names
POST	/cloneTemplateRepository	Create a new repository with the same files and directory structure as a template repository.  clientMutationId: A unique identifier for the client performing the mutation., repository: The new repository. 	 0 	 1 	 Contextual Resource Names
POST	/closeDiscussion	Close a discussion.  clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was closed. 	 0 	 1 	 Contextual Resource Names
POST	/closeIssue	Close an issue.  clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was closed. 	 0 	 1 	 Contextual Resource Names
POST	/closePullRequest	Close a pull request.  clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was closed. 	 0 	 1 	 Contextual Resource Names
POST	/convertProjectCardNoteToIssue	Convert a project note card to one associated with a newly created issue.  clientMutationId: A unique identifier for the client performing the mutation., projectCard: The updated ProjectCard. 	 0 	 1 	 Contextual Resource Names
POST	/convertPullRequestToDraft	Converts a pull request to draft.  clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that is now a draft. 	 0 	 1 	 Contextual Resource Names
POST	/copyProjectV2	Copy a project.  clientMutationId: A unique identifier for the client performing the mutation., projectV2: The copied project. 	 0 	 1 	 Contextual Resource Names
POST	/createAttributionInvitation	Invites a user to claim reattributable data.  clientMutationId: A unique identifier for the client performing the mutation., owner: The owner scoping the reattributable data., source: The account owning the data to reattribute., target: The account which may claim the data. 	 0 	 1 	 Contextual Resource Names
POST	/createBranchProtectionRule	Create a new branch protection rule.  branchProtectionRule: The newly created BranchProtectionRule., clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/createCheckRun	Create a check run.  checkRun: The newly created check run., clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/createCheckSuite	Create a check suite.  checkSuite: The newly created check suite., clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/createCommitOnBranch	Appends a commit to the given branch as the authenticated user.This mutation creates a commit whose parent is the HEAD of the providedbranch and also updates that branch to point to the new commit.It can be thought of as similar to git commit.Locating a BranchCommits are appended to a branch of type Ref.This must refer to a git branch (i.e.  the fully qualified path mustbegin with refs/heads/, although including this prefix is optional.Callers may specify the branch to commit to either by its global nodeID or by passing both of repositoryNameWithOwner and refName.  Formore details see the documentation for CommittableBranch.Describing ChangesfileChanges are specified as a FilesChanges object describingFileAdditions and FileDeletions.Please see the documentation for FileChanges for more information onhow to use this argument to describe any set of file changes.AuthorshipSimilar to the web commit interface, this mutation does not supportspecifying the author or committer of the commit and will not addsupport for this in the future.A commit created by a successful execution of this mutation will beauthored by the owner of the credential which authenticates the APIrequest.  The committer will be identical to that of commits authoredusing the web interface.If you need full control over author and committer information, pleaseuse the Git Database REST API instead.Commit SigningCommits made using this mutation are automatically signed by GitHub ifsupported and will be marked as verified in the user interface.  clientMutationId: A unique identifier for the client performing the mutation., commit: The new commit., ref: The ref which has been updated to point to the new commit. 	 0 	 1 	 Contextual Resource Names
POST	/createDeployment	Creates a new deployment event.  autoMerged: True if the default branch has been auto-merged into the deployment ref., clientMutationId: A unique identifier for the client performing the mutation., deployment: The new deployment. 	 0 	 1 	 Contextual Resource Names
POST	/createDeploymentStatus	Create a deployment status.  clientMutationId: A unique identifier for the client performing the mutation., deploymentStatus: The new deployment status. 	 0 	 1 	 Contextual Resource Names
POST	/createDiscussion	Create a discussion.  clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was just created. 	 0 	 1 	 Contextual Resource Names
POST	/createEnterpriseOrganization	Creates an organization as part of an enterprise account. A personal accesstoken used to create an organization is implicitly permitted to update theorganization it created, if the organization is part of an enterprise that hasSAML enabled or uses Enterprise Managed Users. If the organization is not partof such an enterprise, and instead has SAML enabled for it individually, thetoken will then require SAML authorization to continue working against that organization.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise that owns the created organization., organization: The organization that was created. 	 0 	 1 	 Contextual Resource Names
POST	/createEnvironment	Creates an environment or simply returns it if already exists.  clientMutationId: A unique identifier for the client performing the mutation., environment: The new or existing environment. 	 0 	 1 	 Contextual Resource Names
POST	/createIpAllowListEntry	Creates a new IP allow list entry.  clientMutationId: A unique identifier for the client performing the mutation., ipAllowListEntry: The IP allow list entry that was created. 	 0 	 1 	 Contextual Resource Names
POST	/createIssue	Creates a new issue.  clientMutationId: A unique identifier for the client performing the mutation., issue: The new issue. 	 0 	 1 	 Contextual Resource Names
POST	/createLabel	Creates a new label.  clientMutationId: A unique identifier for the client performing the mutation., label: The new label. 	 0 	 1 	 Contextual Resource Names
POST	/createLinkedBranch	Create a branch linked to an issue.  clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was linked to., linkedBranch: The new branch issue reference. 	 0 	 1 	 Contextual Resource Names
POST	/createMigrationSource	Creates a GitHub Enterprise Importer (GEI) migration source.  clientMutationId: A unique identifier for the client performing the mutation., migrationSource: The created migration source. 	 0 	 1 	 Contextual Resource Names
POST	/createProject	Creates a new project.  clientMutationId: A unique identifier for the client performing the mutation., project: The new project. 	 0 	 1 	 Contextual Resource Names
POST	/createProjectV2	Creates a new project.  clientMutationId: A unique identifier for the client performing the mutation., projectV2: The new project. 	 0 	 1 	 Contextual Resource Names
POST	/createProjectV2Field	Create a new project field.  clientMutationId: A unique identifier for the client performing the mutation., projectV2Field: The new field. 	 0 	 1 	 Contextual Resource Names
POST	/createPullRequest	Create a new pull request.  clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The new pull request. 	 0 	 1 	 Contextual Resource Names
POST	/createRef	Create a new Git Ref.  clientMutationId: A unique identifier for the client performing the mutation., ref: The newly created ref. 	 0 	 1 	 Contextual Resource Names
POST	/createRepository	Create a new repository.  clientMutationId: A unique identifier for the client performing the mutation., repository: The new repository. 	 0 	 1 	 Contextual Resource Names
POST	/createRepositoryRuleset	Create a repository ruleset.  clientMutationId: A unique identifier for the client performing the mutation., ruleset: The newly created Ruleset. 	 0 	 1 	 Contextual Resource Names
POST	/createSponsorsListing	Create a GitHub Sponsors profile to allow others to sponsor you or your organization.  clientMutationId: A unique identifier for the client performing the mutation., sponsorsListing: The new GitHub Sponsors profile. 	 0 	 1 	 Contextual Resource Names
POST	/createSponsorsTier	Create a new payment tier for your GitHub Sponsors profile.  clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The new tier. 	 0 	 1 	 Contextual Resource Names
POST	/createSponsorship	Start a new sponsorship of a maintainer in GitHub Sponsors, or reactivate a past sponsorship.  clientMutationId: A unique identifier for the client performing the mutation., sponsorship: The sponsorship that was started. 	 0 	 1 	 Contextual Resource Names
POST	/createSponsorships	Make many one-time sponsorships for different sponsorable users ororganizations at once. Can only sponsor those who have a public GitHubSponsors profile.  clientMutationId: A unique identifier for the client performing the mutation., sponsorables: The users and organizations who received a sponsorship. 	 0 	 1 	 Contextual Resource Names
POST	/createTeamDiscussion	Creates a new team discussion.  clientMutationId: A unique identifier for the client performing the mutation., teamDiscussion: The new discussion. 	 0 	 1 	 Contextual Resource Names
POST	/createTeamDiscussionComment	Creates a new team discussion comment.  clientMutationId: A unique identifier for the client performing the mutation., teamDiscussionComment: The new comment. 	 0 	 1 	 Contextual Resource Names
POST	/declineTopicSuggestion	Rejects a suggested topic for the repository.  clientMutationId: A unique identifier for the client performing the mutation., topic: The declined topic. 	 0 	 1 	 Contextual Resource Names
POST	/deleteBranchProtectionRule	Delete a branch protection rule.  clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/deleteDeployment	Deletes a deployment.  clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/deleteDiscussion	Delete a discussion and all of its replies.  clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was just deleted. 	 0 	 1 	 Contextual Resource Names
POST	/deleteDiscussionComment	Delete a discussion comment. If it has replies, wipe it instead.  clientMutationId: A unique identifier for the client performing the mutation., comment: The discussion comment that was just deleted. 	 0 	 1 	 Contextual Resource Names
POST	/deleteEnvironment	Deletes an environment.  clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/deleteIpAllowListEntry	Deletes an IP allow list entry.  clientMutationId: A unique identifier for the client performing the mutation., ipAllowListEntry: The IP allow list entry that was deleted. 	 0 	 1 	 Contextual Resource Names
POST	/deleteIssue	Deletes an Issue object.  clientMutationId: A unique identifier for the client performing the mutation., repository: The repository the issue belonged to. 	 0 	 1 	 Contextual Resource Names
POST	/deleteIssueComment	Deletes an IssueComment object.  clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/deleteLabel	Deletes a label.  clientMutationId: A unique identifier for the client performing the mutation. 	 1 	 0 	 Contextless Resource Names
POST	/deleteLinkedBranch	Unlink a branch from an issue.  clientMutationId: A unique identifier for the client performing the mutation., issue: The issue the linked branch was unlinked from. 	 0 	 1 	 Contextual Resource Names
POST	/deletePackageVersion	Delete a package version.  clientMutationId: A unique identifier for the client performing the mutation., success: Whether or not the operation succeeded. 	 0 	 1 	 Contextual Resource Names
POST	/deleteProject	Deletes a project.  clientMutationId: A unique identifier for the client performing the mutation., owner: The repository or organization the project was removed from. 	 0 	 1 	 Contextual Resource Names
POST	/deleteProjectCard	Deletes a project card.  clientMutationId: A unique identifier for the client performing the mutation., column: The column the deleted card was in., deletedCardId: The deleted card ID. 	 0 	 1 	 Contextual Resource Names
POST	/deleteProjectColumn	Deletes a project column.  clientMutationId: A unique identifier for the client performing the mutation., deletedColumnId: The deleted column ID., project: The project the deleted column was in. 	 0 	 1 	 Contextual Resource Names
POST	/deleteProjectV2	Delete a project.  clientMutationId: A unique identifier for the client performing the mutation., projectV2: The deleted Project. 	 0 	 1 	 Contextual Resource Names
POST	/deleteProjectV2Field	Delete a project field.  clientMutationId: A unique identifier for the client performing the mutation., projectV2Field: The deleted field. 	 0 	 1 	 Contextual Resource Names
POST	/deleteProjectV2Item	Deletes an item from a Project.  clientMutationId: A unique identifier for the client performing the mutation., deletedItemId: The ID of the deleted item. 	 0 	 1 	 Contextual Resource Names
POST	/deleteProjectV2Workflow	Deletes a project workflow.  clientMutationId: A unique identifier for the client performing the mutation., deletedWorkflowId: The ID of the deleted workflow., projectV2: The project the deleted workflow was in. 	 0 	 1 	 Contextual Resource Names
POST	/deletePullRequestReview	Deletes a pull request review.  clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The deleted pull request review. 	 0 	 1 	 Contextual Resource Names
POST	/deletePullRequestReviewComment	Deletes a pull request review comment.  clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The pull request review the deleted comment belonged to., pullRequestReviewComment: The deleted pull request review comment. 	 0 	 1 	 Contextual Resource Names
POST	/deleteRef	Delete a Git Ref.  clientMutationId: A unique identifier for the client performing the mutation. 	 1 	 0 	 Contextless Resource Names
POST	/deleteRepositoryRuleset	Delete a repository ruleset.  clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/deleteTeamDiscussion	Deletes a team discussion.  clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/deleteTeamDiscussionComment	Deletes a team discussion comment.  clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/deleteVerifiableDomain	Deletes a verifiable domain.  clientMutationId: A unique identifier for the client performing the mutation., owner: The owning account from which the domain was deleted. 	 0 	 1 	 Contextual Resource Names
POST	/dequeuePullRequest	Remove a pull request from the merge queue.  clientMutationId: A unique identifier for the client performing the mutation., mergeQueueEntry: The merge queue entry of the dequeued pull request. 	 0 	 1 	 Contextual Resource Names
POST	/disablePullRequestAutoMerge	Disable auto merge on the given pull request.  actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request auto merge was disabled on. 	 0 	 1 	 Contextual Resource Names
POST	/dismissPullRequestReview	Dismisses an approved or rejected pull request review.  clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The dismissed pull request review. 	 0 	 1 	 Contextual Resource Names
POST	/dismissRepositoryVulnerabilityAlert	Dismisses the Dependabot alert.  clientMutationId: A unique identifier for the client performing the mutation., repositoryVulnerabilityAlert: The Dependabot alert that was dismissed. 	 0 	 1 	 Contextual Resource Names
POST	/enablePullRequestAutoMerge	Enable the default auto-merge on a pull request.  actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request auto-merge was enabled on. 	 0 	 1 	 Contextual Resource Names
POST	/enqueuePullRequest	Add a pull request to the merge queue.  clientMutationId: A unique identifier for the client performing the mutation., mergeQueueEntry: The merge queue entry for the enqueued pull request. 	 0 	 1 	 Contextual Resource Names
POST	/followOrganization	Follow an organization.  clientMutationId: A unique identifier for the client performing the mutation., organization: The organization that was followed. 	 0 	 1 	 Contextual Resource Names
POST	/followUser	Follow a user.  clientMutationId: A unique identifier for the client performing the mutation., user: The user that was followed. 	 0 	 1 	 Contextual Resource Names
POST	/grantEnterpriseOrganizationsMigratorRole	Grant the migrator role to a user for all organizations under an enterprise account.  clientMutationId: A unique identifier for the client performing the mutation., organizations: The organizations that had the migrator role applied to for the given user. 	 0 	 1 	 Contextual Resource Names
POST	/grantMigratorRole	Grant the migrator role to a user or a team.  clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?. 	 1 	 0 	 Contextless Resource Names
POST	/importProject	Creates a new project by importing columns and a list of issues/PRs.  clientMutationId: A unique identifier for the client performing the mutation., project: The new Project!. 	 0 	 1 	 Contextual Resource Names
POST	/inviteEnterpriseAdmin	Invite someone to become an administrator of the enterprise.  clientMutationId: A unique identifier for the client performing the mutation., invitation: The created enterprise administrator invitation. 	 0 	 1 	 Contextual Resource Names
POST	/linkProjectV2ToRepository	Links a project to a repository.  clientMutationId: A unique identifier for the client performing the mutation., repository: The repository the project is linked to. 	 0 	 1 	 Contextual Resource Names
POST	/linkProjectV2ToTeam	Links a project to a team.  clientMutationId: A unique identifier for the client performing the mutation., team: The team the project is linked to. 	 0 	 1 	 Contextual Resource Names
POST	/linkRepositoryToProject	Creates a repository link for a project.  clientMutationId: A unique identifier for the client performing the mutation., project: The linked Project., repository: The linked Repository. 	 0 	 1 	 Contextual Resource Names
POST	/lockLockable	Lock a lockable object.  actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., lockedRecord: The item that was locked. 	 0 	 1 	 Contextual Resource Names
POST	/markDiscussionCommentAsAnswer	Mark a discussion comment as the chosen answer for discussions in an answerable category.  clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that includes the chosen comment. 	 0 	 1 	 Contextual Resource Names
POST	/markFileAsViewed	Mark a pull request file as viewed.  clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request. 	 0 	 1 	 Contextual Resource Names
POST	/markProjectV2AsTemplate	Mark a project as a template. Note that only projects which are owned by an Organization can be marked as a template.  clientMutationId: A unique identifier for the client performing the mutation., projectV2: The project. 	 0 	 1 	 Contextual Resource Names
POST	/markPullRequestReadyForReview	Marks a pull request ready for review.  clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that is ready for review. 	 0 	 1 	 Contextual Resource Names
POST	/mergeBranch	Merge a head into a branch.  clientMutationId: A unique identifier for the client performing the mutation., mergeCommit: The resulting merge Commit. 	 1 	 0 	 Contextless Resource Names
POST	/mergePullRequest	Merge a pull request.  actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was merged. 	 0 	 1 	 Contextual Resource Names
POST	/minimizeComment	Minimizes a comment on an Issue, Commit, Pull Request, or Gist.  clientMutationId: A unique identifier for the client performing the mutation., minimizedComment: The comment that was minimized. 	 0 	 1 	 Contextual Resource Names
POST	/moveProjectCard	Moves a project card to another place.  cardEdge: The new edge of the moved card., clientMutationId: A unique identifier for the client performing the mutation. 	 1 	 0 	 Contextless Resource Names
POST	/moveProjectColumn	Moves a project column to another place.  clientMutationId: A unique identifier for the client performing the mutation., columnEdge: The new edge of the moved column. 	 0 	 1 	 Contextual Resource Names
POST	/pinIssue	Pin an issue to a repository.  clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was pinned. 	 0 	 1 	 Contextual Resource Names
POST	/publishSponsorsTier	Publish an existing sponsorship tier that is currently still a draft to a GitHub Sponsors profile.  clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The tier that was published. 	 1 	 0 	 Contextless Resource Names
POST	/regenerateEnterpriseIdentityProviderRecoveryCodes	Regenerates the identity provider recovery codes for an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., identityProvider: The identity provider for the enterprise. 	 0 	 1 	 Contextual Resource Names
POST	/regenerateVerifiableDomainToken	Regenerates a verifiable domain's verification token.  clientMutationId: A unique identifier for the client performing the mutation., verificationToken: The verification token that was generated. 	 0 	 1 	 Contextual Resource Names
POST	/rejectDeployments	Reject all pending deployments under one or more environments.  clientMutationId: A unique identifier for the client performing the mutation., deployments: The affected deployments. 	 0 	 1 	 Contextual Resource Names
POST	/removeAssigneesFromAssignable	Removes assignees from an assignable object.  assignable: The item that was unassigned., clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/removeEnterpriseAdmin	Removes an administrator from the enterprise.  admin: The user who was removed as an administrator., clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise., message: A message confirming the result of removing an administrator., viewer: The viewer performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/removeEnterpriseIdentityProvider	Removes the identity provider from an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., identityProvider: The identity provider that was removed from the enterprise. 	 0 	 1 	 Contextual Resource Names
POST	/removeEnterpriseMember	Removes a user from all organizations within the enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise., user: The user that was removed from the enterprise., viewer: The viewer performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/removeEnterpriseOrganization	Removes an organization from the enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise., organization: The organization that was removed from the enterprise., viewer: The viewer performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/removeEnterpriseSupportEntitlement	Removes a support entitlement from an enterprise member.  clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of removing the support entitlement. 	 0 	 1 	 Contextual Resource Names
POST	/removeLabelsFromLabelable	Removes labels from a Labelable object.  clientMutationId: A unique identifier for the client performing the mutation., labelable: The Labelable the labels were removed from. 	 1 	 0 	 Contextless Resource Names
POST	/removeOutsideCollaborator	Removes outside collaborator from all repositories in an organization.  clientMutationId: A unique identifier for the client performing the mutation., removedUser: The user that was removed as an outside collaborator. 	 1 	 0 	 Contextless Resource Names
POST	/removeReaction	Removes a reaction from a subject.  clientMutationId: A unique identifier for the client performing the mutation., reaction: The reaction object., reactionGroups: The reaction groups for the subject., subject: The reactable subject. 	 0 	 1 	 Contextual Resource Names
POST	/removeStar	Removes a star from a Starrable.  clientMutationId: A unique identifier for the client performing the mutation., starrable: The starrable. 	 1 	 0 	 Contextless Resource Names
POST	/removeUpvote	Remove an upvote to a discussion or discussion comment.  clientMutationId: A unique identifier for the client performing the mutation., subject: The votable subject. 	 1 	 0 	 Contextless Resource Names
POST	/reopenDiscussion	Reopen a discussion.  clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was reopened. 	 0 	 1 	 Contextual Resource Names
POST	/reopenIssue	Reopen a issue.  clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was opened. 	 0 	 1 	 Contextual Resource Names
POST	/reopenPullRequest	Reopen a pull request.  clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was reopened. 	 0 	 1 	 Contextual Resource Names
POST	/requestReviews	Set review requests on a pull request.  actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that is getting requests., requestedReviewersEdge: The edge from the pull request to the requested reviewers. 	 0 	 1 	 Contextual Resource Names
POST	/rerequestCheckSuite	Rerequests an existing check suite.  checkSuite: The requested check suite., clientMutationId: A unique identifier for the client performing the mutation. 	 1 	 0 	 Contextless Resource Names
POST	/resolveReviewThread	Marks a review thread as resolved.  clientMutationId: A unique identifier for the client performing the mutation., thread: The thread to resolve. 	 0 	 1 	 Contextual Resource Names
POST	/retireSponsorsTier	Retire a published payment tier from your GitHub Sponsors profile so it cannot be used to start new sponsorships.  clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The tier that was retired. 	 1 	 0 	 Contextless Resource Names
POST	/revertPullRequest	Create a pull request that reverts the changes from a merged pull request.  clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was reverted., revertPullRequest: The new pull request that reverts the input pull request. 	 0 	 1 	 Contextual Resource Names
POST	/revokeEnterpriseOrganizationsMigratorRole	Revoke the migrator role to a user for all organizations under an enterprise account.  clientMutationId: A unique identifier for the client performing the mutation., organizations: The organizations that had the migrator role revoked for the given user. 	 0 	 1 	 Contextual Resource Names
POST	/revokeMigratorRole	Revoke the migrator role from a user or a team.  clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?. 	 1 	 0 	 Contextless Resource Names
POST	/setEnterpriseIdentityProvider	Creates or updates the identity provider for an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., identityProvider: The identity provider for the enterprise. 	 0 	 1 	 Contextual Resource Names
POST	/setOrganizationInteractionLimit	Set an organization level interaction limit for an organization's public repositories.  clientMutationId: A unique identifier for the client performing the mutation., organization: The organization that the interaction limit was set for. 	 0 	 1 	 Contextual Resource Names
POST	/setRepositoryInteractionLimit	Sets an interaction limit setting for a repository.  clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that the interaction limit was set for. 	 0 	 1 	 Contextual Resource Names
POST	/setUserInteractionLimit	Set a user level interaction limit for an user's public repositories.  clientMutationId: A unique identifier for the client performing the mutation., user: The user that the interaction limit was set for. 	 0 	 1 	 Contextual Resource Names
POST	/startOrganizationMigration	Starts a GitHub Enterprise Importer organization migration.  clientMutationId: A unique identifier for the client performing the mutation., orgMigration: The new organization migration. 	 0 	 1 	 Contextual Resource Names
POST	/startRepositoryMigration	Starts a GitHub Enterprise Importer (GEI) repository migration.  clientMutationId: A unique identifier for the client performing the mutation., repositoryMigration: The new repository migration. 	 0 	 1 	 Contextual Resource Names
POST	/submitPullRequestReview	Submits a pending pull request review.  clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The submitted pull request review. 	 0 	 1 	 Contextual Resource Names
POST	/transferEnterpriseOrganization	Transfer an organization from one enterprise to another enterprise.  clientMutationId: A unique identifier for the client performing the mutation., organization: The organization for which a transfer was initiated. 	 0 	 1 	 Contextual Resource Names
POST	/transferIssue	Transfer an issue to a different repository.  clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was transferred. 	 0 	 1 	 Contextual Resource Names
POST	/unarchiveProjectV2Item	Unarchives a ProjectV2Item.  clientMutationId: A unique identifier for the client performing the mutation., item: The item unarchived from the project. 	 0 	 1 	 Contextual Resource Names
POST	/unarchiveRepository	Unarchives a repository.  clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that was unarchived. 	 0 	 1 	 Contextual Resource Names
POST	/unfollowOrganization	Unfollow an organization.  clientMutationId: A unique identifier for the client performing the mutation., organization: The organization that was unfollowed. 	 0 	 1 	 Contextual Resource Names
POST	/unfollowUser	Unfollow a user.  clientMutationId: A unique identifier for the client performing the mutation., user: The user that was unfollowed. 	 0 	 1 	 Contextual Resource Names
POST	/unlinkProjectV2FromRepository	Unlinks a project from a repository.  clientMutationId: A unique identifier for the client performing the mutation., repository: The repository the project is no longer linked to. 	 0 	 1 	 Contextual Resource Names
POST	/unlinkProjectV2FromTeam	Unlinks a project to a team.  clientMutationId: A unique identifier for the client performing the mutation., team: The team the project is unlinked from. 	 0 	 1 	 Contextual Resource Names
POST	/unlinkRepositoryFromProject	Deletes a repository link from a project.  clientMutationId: A unique identifier for the client performing the mutation., project: The linked Project., repository: The linked Repository. 	 0 	 1 	 Contextual Resource Names
POST	/unlockLockable	Unlock a lockable object.  actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., unlockedRecord: The item that was unlocked. 	 0 	 1 	 Contextual Resource Names
POST	/unmarkDiscussionCommentAsAnswer	Unmark a discussion comment as the chosen answer for discussions in an answerable category.  clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that includes the comment. 	 0 	 1 	 Contextual Resource Names
POST	/unmarkFileAsViewed	Unmark a pull request file as viewed.  clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request. 	 1 	 0 	 Contextless Resource Names
POST	/unmarkIssueAsDuplicate	Unmark an issue as a duplicate of another issue.  clientMutationId: A unique identifier for the client performing the mutation., duplicate: The issue or pull request that was marked as a duplicate. 	 1 	 0 	 Contextless Resource Names
POST	/unmarkProjectV2AsTemplate	Unmark a project as a template.  clientMutationId: A unique identifier for the client performing the mutation., projectV2: The project. 	 0 	 1 	 Contextual Resource Names
POST	/unminimizeComment	Unminimizes a comment on an Issue, Commit, Pull Request, or Gist.  clientMutationId: A unique identifier for the client performing the mutation., unminimizedComment: The comment that was unminimized. 	 0 	 1 	 Contextual Resource Names
POST	/unpinIssue	Unpin a pinned issue from a repository.  clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was unpinned. 	 1 	 0 	 Contextless Resource Names
POST	/unresolveReviewThread	Marks a review thread as unresolved.  clientMutationId: A unique identifier for the client performing the mutation., thread: The thread to resolve. 	 1 	 0 	 Contextless Resource Names
POST	/unsubscribeFromNotifications	Unsubscribes from notifications.  clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?. 	 0 	 1 	 Contextual Resource Names
POST	/updateBranchProtectionRule	Update a branch protection rule.  branchProtectionRule: The newly created BranchProtectionRule., clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/updateCheckRun	Update a check run.  checkRun: The updated check run., clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/updateCheckSuitePreferences	Modifies the settings of an existing check suite.  clientMutationId: A unique identifier for the client performing the mutation., repository: The updated repository. 	 0 	 1 	 Contextual Resource Names
POST	/updateDiscussion	Update a discussion.  clientMutationId: A unique identifier for the client performing the mutation., discussion: The modified discussion. 	 0 	 1 	 Contextual Resource Names
POST	/updateDiscussionComment	Update the contents of a comment on a Discussion.  clientMutationId: A unique identifier for the client performing the mutation., comment: The modified discussion comment. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseAdministratorRole	Updates the role of an enterprise administrator.  clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of changing the administrator's role. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseAllowPrivateRepositoryForkingSetting	Sets whether private repository forks are enabled for an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated allow private repository forking setting., message: A message confirming the result of updating the allow private repository forking setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseDefaultRepositoryPermissionSetting	Sets the base repository permission for organizations in an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated base repository permission setting., message: A message confirming the result of updating the base repository permission setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseMembersCanChangeRepositoryVisibilitySetting	Sets whether organization members with admin permissions on a repository can change repository visibility.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can change repository visibility setting., message: A message confirming the result of updating the members can change repository visibility setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseMembersCanCreateRepositoriesSetting	Sets the members can create repositories setting for an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can create repositories setting., message: A message confirming the result of updating the members can create repositories setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseMembersCanDeleteIssuesSetting	Sets the members can delete issues setting for an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can delete issues setting., message: A message confirming the result of updating the members can delete issues setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseMembersCanDeleteRepositoriesSetting	Sets the members can delete repositories setting for an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can delete repositories setting., message: A message confirming the result of updating the members can delete repositories setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseMembersCanInviteCollaboratorsSetting	Sets whether members can invite collaborators are enabled for an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can invite collaborators setting., message: A message confirming the result of updating the members can invite collaborators setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseMembersCanMakePurchasesSetting	Sets whether or not an organization owner can make purchases.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can make purchases setting., message: A message confirming the result of updating the members can make purchases setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseMembersCanUpdateProtectedBranchesSetting	Sets the members can update protected branches setting for an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can update protected branches setting., message: A message confirming the result of updating the members can update protected branches setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseMembersCanViewDependencyInsightsSetting	Sets the members can view dependency insights for an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can view dependency insights setting., message: A message confirming the result of updating the members can view dependency insights setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseOrganizationProjectsSetting	Sets whether organization projects are enabled for an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated organization projects setting., message: A message confirming the result of updating the organization projects setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseOwnerOrganizationRole	Updates the role of an enterprise owner with an organization.  clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of changing the owner's organization role. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseProfile	Updates an enterprise's profile.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseRepositoryProjectsSetting	Sets whether repository projects are enabled for a enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated repository projects setting., message: A message confirming the result of updating the repository projects setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseTeamDiscussionsSetting	Sets whether team discussions are enabled for an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated team discussions setting., message: A message confirming the result of updating the team discussions setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnterpriseTwoFactorAuthenticationRequiredSetting	Sets whether two factor authentication is required for all users in an enterprise.  clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated two factor authentication required setting., message: A message confirming the result of updating the two factor authentication required setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateEnvironment	Updates an environment.  clientMutationId: A unique identifier for the client performing the mutation., environment: The updated environment. 	 0 	 1 	 Contextual Resource Names
POST	/updateIpAllowListEnabledSetting	Sets whether an IP allow list is enabled on an owner.  clientMutationId: A unique identifier for the client performing the mutation., owner: The IP allow list owner on which the setting was updated. 	 0 	 1 	 Contextual Resource Names
POST	/updateIpAllowListEntry	Updates an IP allow list entry.  clientMutationId: A unique identifier for the client performing the mutation., ipAllowListEntry: The IP allow list entry that was updated. 	 0 	 1 	 Contextual Resource Names
POST	/updateIpAllowListForInstalledAppsEnabledSetting	Sets whether IP allow list configuration for installed GitHub Apps is enabled on an owner.  clientMutationId: A unique identifier for the client performing the mutation., owner: The IP allow list owner on which the setting was updated. 	 0 	 1 	 Contextual Resource Names
POST	/updateIssue	Updates an Issue.  actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., issue: The issue. 	 0 	 1 	 Contextual Resource Names
POST	/updateIssueComment	Updates an IssueComment object.  clientMutationId: A unique identifier for the client performing the mutation., issueComment: The updated comment. 	 0 	 1 	 Contextual Resource Names
POST	/updateLabel	Updates an existing label.  clientMutationId: A unique identifier for the client performing the mutation., label: The updated label. 	 0 	 1 	 Contextual Resource Names
POST	/updateNotificationRestrictionSetting	Update the setting to restrict notifications to only verified or approved domains available to an owner.  clientMutationId: A unique identifier for the client performing the mutation., owner: The owner on which the setting was updated. 	 0 	 1 	 Contextual Resource Names
POST	/updateOrganizationAllowPrivateRepositoryForkingSetting	Sets whether private repository forks are enabled for an organization.  clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of updating the allow private repository forking setting., organization: The organization with the updated allow private repository forking setting. 	 0 	 1 	 Contextual Resource Names
POST	/updateOrganizationWebCommitSignoffSetting	Sets whether contributors are required to sign off on web-based commits for repositories in an organization.  clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of updating the web commit signoff setting., organization: The organization with the updated web commit signoff setting. 	 0 	 1 	 Contextual Resource Names
POST	/updatePatreonSponsorability	Toggle the setting for your GitHub Sponsors profile that allows other GitHubaccounts to sponsor you on GitHub while paying for the sponsorship on Patreon.Only applicable when you have a GitHub Sponsors profile and have connectedyour GitHub account with Patreon.  clientMutationId: A unique identifier for the client performing the mutation., sponsorsListing: The GitHub Sponsors profile. 	 1 	 0 	 Contextless Resource Names
POST	/updateProject	Updates an existing project.  clientMutationId: A unique identifier for the client performing the mutation., project: The updated project. 	 0 	 1 	 Contextual Resource Names
POST	/updateProjectCard	Updates an existing project card.  clientMutationId: A unique identifier for the client performing the mutation., projectCard: The updated ProjectCard. 	 0 	 1 	 Contextual Resource Names
POST	/updateProjectColumn	Updates an existing project column.  clientMutationId: A unique identifier for the client performing the mutation., projectColumn: The updated project column. 	 0 	 1 	 Contextual Resource Names
POST	/updateProjectV2	Updates an existing project (beta).  clientMutationId: A unique identifier for the client performing the mutation., projectV2: The updated Project. 	 0 	 1 	 Contextual Resource Names
POST	/updateProjectV2Collaborators	Update the collaborators on a team or a project.  clientMutationId: A unique identifier for the client performing the mutation., collaborators: The collaborators granted a role. 	 0 	 1 	 Contextual Resource Names
POST	/updateProjectV2DraftIssue	Updates a draft issue within a Project.  clientMutationId: A unique identifier for the client performing the mutation., draftIssue: The draft issue updated in the project. 	 0 	 1 	 Contextual Resource Names
POST	/updateProjectV2ItemFieldValue	This mutation updates the value of a field for an item in a Project. Currentlyonly single-select, text, number, date, and iteration fields are supported.  clientMutationId: A unique identifier for the client performing the mutation., projectV2Item: The updated item. 	 0 	 1 	 Contextual Resource Names
POST	/updateProjectV2ItemPosition	This mutation updates the position of the item in the project, where the position represents the priority of an item.  clientMutationId: A unique identifier for the client performing the mutation., items: The items in the new order. 	 0 	 1 	 Contextual Resource Names
POST	/updatePullRequest	Update a pull request.  actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request. 	 0 	 1 	 Contextual Resource Names
POST	/updatePullRequestBranch	Merge or Rebase HEAD from upstream branch into pull request branch.  clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request. 	 0 	 1 	 Contextual Resource Names
POST	/updatePullRequestReview	Updates the body of a pull request review.  clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The updated pull request review. 	 0 	 1 	 Contextual Resource Names
POST	/updatePullRequestReviewComment	Updates a pull request review comment.  clientMutationId: A unique identifier for the client performing the mutation., pullRequestReviewComment: The updated comment. 	 0 	 1 	 Contextual Resource Names
POST	/updateRef	Update a Git Ref.  clientMutationId: A unique identifier for the client performing the mutation., ref: The updated Ref. 	 0 	 1 	 Contextual Resource Names
POST	/updateRefs	Creates, updates and/or deletes multiple refs in a repository.This mutation takes a list of RefUpdates and performs these updateson the repository. All updates are performed atomically, meaning thatif one of them is rejected, no other ref will be modified.RefUpdate.beforeOid specifies that the given reference needs to pointto the given value before performing any updates. A value of0000000000000000000000000000000000000000 can be used to verify thatthe references should not exist.RefUpdate.afterOid specifies the value that the given referencewill point to after performing all updates. A value of0000000000000000000000000000000000000000 can be used to delete areference.If RefUpdate.force is set to true, a non-fast-forward updatesfor the given reference will be allowed.  clientMutationId: A unique identifier for the client performing the mutation. 	 0 	 1 	 Contextual Resource Names
POST	/updateRepository	Update information about a repository.  clientMutationId: A unique identifier for the client performing the mutation., repository: The updated repository. 	 0 	 1 	 Contextual Resource Names
POST	/updateRepositoryRuleset	Update a repository ruleset.  clientMutationId: A unique identifier for the client performing the mutation., ruleset: The newly created Ruleset. 	 0 	 1 	 Contextual Resource Names
POST	/updateRepositoryWebCommitSignoffSetting	Sets whether contributors are required to sign off on web-based commits for a repository.  clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of updating the web commit signoff setting., repository: The updated repository. 	 0 	 1 	 Contextual Resource Names
POST	/updateSponsorshipPreferences	Change visibility of your sponsorship and opt in or out of email updates from the maintainer.  clientMutationId: A unique identifier for the client performing the mutation., sponsorship: The sponsorship that was updated. 	 0 	 1 	 Contextual Resource Names
POST	/updateSubscription	Updates the state for subscribable subjects.  clientMutationId: A unique identifier for the client performing the mutation., subscribable: The input subscribable entity. 	 0 	 1 	 Contextual Resource Names
POST	/updateTeamDiscussion	Updates a team discussion.  clientMutationId: A unique identifier for the client performing the mutation., teamDiscussion: The updated discussion. 	 0 	 1 	 Contextual Resource Names
POST	/updateTeamDiscussionComment	Updates a discussion comment.  clientMutationId: A unique identifier for the client performing the mutation., teamDiscussionComment: The updated comment. 	 0 	 1 	 Contextual Resource Names
POST	/updateTeamReviewAssignment	Updates team review assignment.  clientMutationId: A unique identifier for the client performing the mutation., team: The team that was modified. 	 0 	 1 	 Contextual Resource Names
POST	/updateTeamsRepository	Update team repository.  clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that was updated., teams: The teams granted permission on the repository. 	 0 	 1 	 Contextual Resource Names
POST	/updateTopics	Replaces the repository's topics with the given topics.  clientMutationId: A unique identifier for the client performing the mutation., invalidTopicNames: Names of the provided topics that are not valid., repository: The updated repository. 	 0 	 1 	 Contextual Resource Names
POST	/verifyVerifiableDomain	Verify that a verifiable domain has the expected DNS record. 	 0 	 1 	 Contextual Resource Names
