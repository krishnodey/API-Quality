{"id": 1, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "POST ", "uri": " /v4/search/companies.{format} ", "descriptions": "Find companies based on search criteria.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 2, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "POST ", "uri": " /v4/search/charities.{format} ", "descriptions": "Find charities based on search criteria.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 3, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "POST ", "uri": " /v4/search/keywords.{format} ", "descriptions": "Find keywords based on search criteria. Full keywords can then be used as a value for company or director search filters", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 4, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "POST ", "uri": " /v4/search/regions.{format} ", "descriptions": "Find regions based on search criteria. Region IDs can then be used as a value for company or director search filters.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 5, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}.{format} ", "descriptions": "Get key information for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 6, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/registered-names.{format} ", "descriptions": "Get registered names for a company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 7, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/industries.{format} ", "descriptions": "Get industries for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 8, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/addresses.{format} ", "descriptions": "Get addresses for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 9, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/officers.{format}", "descriptions": "Get officers and their appointments for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 10, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/financials.{format}", "descriptions": "Get company financial filings for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 11, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/officer/{officerId}.{format} ", "descriptions": "Get key information for a given officer. Note that an officer can be either a person or a company acting as a corporate officer.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 12, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/charity/{countryCode}/{charityId}.{format} ", "descriptions": "Get key information for a given charity.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 13, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/charity/{countryCode}/{charityId}/trustees.{format} ", "descriptions": "Get trustees for a given charity.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 14, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/charity/{countryCode}/{charityId}/status-history.{format} ", "descriptions": "Get status history for a given charity.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 15, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/charity/{countryCode}/{charityId}/financials.{format} ", "descriptions": "Get financials for a given charity.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 16, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/charity/{countryCode}/{charityId}/financials.{format} ", "descriptions": "Get financials for a given charity.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 17, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/charity/{countryCode}/{charityId}/areas-of-activity.{format} ", "descriptions": "Get geographic areas of activity for a given charity.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 18, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/charity/{countryCode}/{charityId}/registered-names.{format}", "descriptions": "Get registered names for a given charity.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 19, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/charity/{countryCode}/{charityId}/classifiers.{format}", "descriptions": "Get classifiers for a given charity.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 20, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/shareholders.{format}", "descriptions": "Get shareholders and their shareholdings for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 21, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/group-parents.{format} ", "descriptions": "Get group parents for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 22, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/group-subsidiaries.{format} ", "descriptions": "Get group subsidiaries for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 23, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/portfolio-companies.{format} ", "descriptions": "Get portfolio companies for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 24, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/bank-accounts.{format} ", "descriptions": "Get bank accounts for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 25, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/gazette-notices.{format} ", "descriptions": "Get gazette notices for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 26, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/related-companies.{format} ", "descriptions": "Get potentially related UK and Irish companies based on a number of reasons relating to governance and location. This list intentionally excludes companies that are separately identified as shareholders, group or portfolio companies.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 27, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/fca-authorisations.{format} ", "descriptions": "Get the Financial Conduct Authority authorisations or registrations for a given UK company. Due to the nature of this regulation, country codes other than 'gb' will not be supported.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 28, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/charges.{format} ", "descriptions": "Get charges for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 29, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/company/{countryCode}/{companyId}/persons-significant-control.{format} ", "descriptions": "Get persons of significant control (PoSC) for a given company.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 30, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/officer/{officerId}/related-officers.{format} ", "descriptions": "Get all related officers for a given officer", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 31, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/charity/{countryCode}/{charityId}/subsidiaries.{format}", "descriptions": "Get subsidiaries for a given charity.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 32, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/charity/{countryCode}/{charityId}/financials.{format} ", "descriptions": "Get financials for a given charity.", "parameters": "countryCode required string ISO 3166-1 alpha-2 country code in lowercase. charityId required string Charity registration number format required string Value: \"json\" Response format. Currently, only supported option is json.", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 33, "api_type": "GraphQL", "api_name": "DueDil", "http_verb": "GET ", "uri": " /v4/charity/{countryCode}/{charityId}/areas-of-activity.{format} ", "descriptions": "Get classifiers for a given charity.", "parameters": "countryCode required string ISO 3166-1 alpha-2 country code in lowercase. charityId required string Charity registration number format required string Value: \"json\" Response format. Currently, only supported option is json.", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
