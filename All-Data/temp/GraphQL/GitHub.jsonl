{"id": 1, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /codeOfConduct ", "descriptions": " Look up a code of conduct by its key. ", "parameters": " key: The code of conduct's key.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 2, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /codesOfConduct ", "descriptions": " Look up a code of conduct by its key. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 3, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /enterprise ", "descriptions": " Look up an enterprise by URL slug. ", "parameters": " invitationToken: The enterprise invitation token., slug: The enterprise URL slug.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 4, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /enterpriseAdministratorInvitation ", "descriptions": " Look up a pending enterprise administrator invitation by invitee, enterprise and role. ", "parameters": " enterpriseSlug: The slug of the enterprise the user was invited to join., role: The role for the business member invitation., userLogin: The login of the user invited to join the business.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 5, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /enterpriseAdministratorInvitationByToken ", "descriptions": " Look up a pending enterprise administrator invitation by invitation token. ", "parameters": " invitationToken: The invitation token sent with the invitation email.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 6, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /license ", "descriptions": " Look up an open source license by its key. ", "parameters": " key: The license's downcased SPDX ID.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 7, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /licenses ", "descriptions": " Return a list of known open source licenses. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 8, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /marketplaceCategories ", "descriptions": " Get alphabetically sorted list of Marketplace categories. ", "parameters": " excludeEmpty: Exclude categories with no listings., excludeSubcategories: Returns top level categories only, excluding any subcategories., includeCategories: Return only the specified categories.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 9, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /marketplaceCategory ", "descriptions": " Look up a Marketplace category by its slug. ", "parameters": " slug: The URL slug of the category., useTopicAliases: Also check topic aliases for the category slug.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 10, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /marketplaceListing ", "descriptions": " Look up a single Marketplace listing. ", "parameters": " slug: Select the listing that matches this slug. It's the short name of the listing used in its URL.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 11, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /marketplaceListings ", "descriptions": " Look up Marketplace listings. ", "parameters": " adminId: Select listings that can be administered by the specified user., after: Returns the elements in the list that come after the specified cursor., allStates: Select listings visible to the viewer even if they are not approved. If omitted orfalse, only approved listings will be returned., before: Returns the elements in the list that come before the specified cursor., categorySlug: Select only listings with the given category., first: Returns the first n elements from the list., last: Returns the last n elements from the list., organizationId: Select listings for products owned by the specified organization., primaryCategoryOnly: Select only listings where the primary category matches the given category slug., slugs: Select the listings with these slugs, if they are visible to the viewer., useTopicAliases: Also check topic aliases for the category slug., viewerCanAdmin: Select listings to which user has admin access. If omitted, listings visible to theviewer are returned., withFreeTrialsOnly: Select only listings that offer a free trial.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 12, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /meta ", "descriptions": " Return information about the GitHub instance. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 13, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /node ", "descriptions": " Fetches an object given its ID. ", "parameters": " id: ID of the object.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 14, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /nodes ", "descriptions": " Lookup nodes by a list of IDs. ", "parameters": " ids: The list of node IDs.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 15, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /organization ", "descriptions": " Lookup a organization by login. ", "parameters": " login: The organization's login.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 16, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /rateLimit ", "descriptions": " The client's rate limit information. ", "parameters": " dryRun: If true, calculate the cost for the query without evaluating it.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 17, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /relay ", "descriptions": " Workaround for re-exposing the root query object. (Refer tohttps://github.com/facebook/relay/issues/112 for more information.). ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 18, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /repository ", "descriptions": " Lookup a given repository by the owner and repository name. ", "parameters": " followRenames: Follow repository renames. If disabled, a repository referenced by its old name will return an error., name: The name of the repository., owner: The login field of a user or organization.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 19, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /repositoryOwner ", "descriptions": " Lookup a repository owner (ie. either a User or an Organization) by login. ", "parameters": " login: The username to lookup the owner by.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 20, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /resource ", "descriptions": " Lookup resource by a URL. ", "parameters": " url: The URL.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 21, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /search ", "descriptions": " Perform a search across resources, returning a maximum of 1,000 results. ", "parameters": " after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., first: Returns the first n elements from the list., last: Returns the last n elements from the list., query: The search string to look for., type: The types of search items to search within.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 22, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /securityAdvisories ", "descriptions": " GitHub Security Advisories. ", "parameters": " after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., classifications: A list of classifications to filter advisories by., first: Returns the first n elements from the list., identifier: Filter advisories by identifier, e.g. GHSA or CVE., last: Returns the last n elements from the list., orderBy: Ordering options for the returned topics., publishedSince: Filter advisories to those published since a time in the past., updatedSince: Filter advisories to those updated since a time in the past.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 23, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /securityAdvisory ", "descriptions": " Fetch a Security Advisory by its GHSA ID. ", "parameters": " ghsaId: GitHub Security Advisory ID.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 24, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /securityVulnerabilities ", "descriptions": " Software Vulnerabilities documented by GitHub Security Advisories. ", "parameters": " after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., classifications: A list of advisory classifications to filter vulnerabilities by., ecosystem: An ecosystem to filter vulnerabilities by., first: Returns the first n elements from the list., last: Returns the last n elements from the list., orderBy: Ordering options for the returned topics., package: A package name to filter vulnerabilities by., severities: A list of severities to filter vulnerabilities by.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 25, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /sponsorables ", "descriptions": " Users and organizations who can be sponsored via GitHub Sponsors. ", "parameters": " after: Returns the elements in the list that come after the specified cursor., before: Returns the elements in the list that come before the specified cursor., dependencyEcosystem: Optional filter for which dependencies should be checked for sponsorableowners. Only sponsorable owners of dependencies in this ecosystem will beincluded. Used when onlyDependencies = true.Upcoming Change on 2022-07-01 UTCDescription: dependencyEcosystem will be removed. Use the ecosystem argument instead.Reason: The type is switching from SecurityAdvisoryEcosystem to DependencyGraphEcosystem., ecosystem: Optional filter for which dependencies should be checked for sponsorableowners. Only sponsorable owners of dependencies in this ecosystem will beincluded. Used when onlyDependencies = true., first: Returns the first n elements from the list., last: Returns the last n elements from the list., onlyDependencies: Whether only sponsorables who own the viewer's dependencies will bereturned. Must be authenticated to use. Can check an organization insteadfor their dependencies owned by sponsorables by passingorgLoginForDependencies., orderBy: Ordering options for users and organizations returned from the connection., orgLoginForDependencies: Optional organization username for whose dependencies should be checked.Used when onlyDependencies = true. Omit to check your own dependencies. Ifyou are not an administrator of the organization, only dependencies from itspublic repositories will be considered.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 26, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /topic ", "descriptions": " Look up a topic by name. ", "parameters": " name: The topic's name.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 27, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /user ", "descriptions": " Lookup a user by login. ", "parameters": " login: The user's login.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 28, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "GET ", "uri": " /viewer ", "descriptions": " The currently authenticated user. ", "parameters": "\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 29, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /abortQueuedMigrations ", "descriptions": " Clear all of a customer's queued migrations. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 30, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /abortRepositoryMigration ", "descriptions": " Abort a repository migration queued or in progress. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 31, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /acceptEnterpriseAdministratorInvitation ", "descriptions": " Accepts a pending invitation for a user to become an administrator of an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., invitation: The invitation that was accepted., message: A message confirming the result of accepting an administrator invitation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 32, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /acceptTopicSuggestion ", "descriptions": " Applies a suggested topic to the repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., topic: The accepted topic.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 33, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addAssigneesToAssignable ", "descriptions": " Adds assignees to an assignable object. ", "parameters": " assignable: The item that was assigned., clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 34, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addComment ", "descriptions": " Adds a comment to an Issue or Pull Request. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., commentEdge: The edge from the subject's comment connection., subject: The subject., timelineEdge: The edge from the subject's timeline connection.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 35, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addDiscussionComment ", "descriptions": " Adds a comment to a Discussion, possibly as a reply to another comment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., comment: The newly created discussion comment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 36, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addDiscussionPollVote ", "descriptions": " Vote for an option in a discussion poll. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pollOption: The poll option that a vote was added to.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 37, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addEnterpriseOrganizationMember ", "descriptions": " Adds enterprise members to an organization within the enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., users: The users who were added to the organization.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 38, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addEnterpriseSupportEntitlement ", "descriptions": " Adds a support entitlement to an enterprise member. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of adding the support entitlement.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 39, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addLabelsToLabelable ", "descriptions": " Adds labels to a labelable object. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., labelable: The item that was labeled.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 40, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addProjectCard ", "descriptions": " Adds a card to a ProjectColumn. Either contentId or note must be provided but not both. ", "parameters": " cardEdge: The edge from the ProjectColumn's card connection., clientMutationId: A unique identifier for the client performing the mutation., projectColumn: The ProjectColumn.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 41, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addProjectColumn ", "descriptions": " Adds a column to a Project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., columnEdge: The edge from the project's column connection., project: The project.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 42, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addProjectV2DraftIssue ", "descriptions": " Creates a new draft issue and add it to a Project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectItem: The draft issue added to the project.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 43, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addProjectV2ItemById ", "descriptions": " Links an existing content instance to a Project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., item: The item added to the project.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 44, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addPullRequestReview ", "descriptions": " Adds a review to a Pull Request. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The newly created pull request review., reviewEdge: The edge from the pull request's review connection.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 45, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addPullRequestReviewComment ", "descriptions": " Adds a comment to a review. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., comment: The newly created comment., commentEdge: The edge from the review's comment connection.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 46, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addPullRequestReviewThread ", "descriptions": " Adds a new thread to a pending Pull Request Review. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., thread: The newly created thread.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 47, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addPullRequestReviewThreadReply ", "descriptions": " Adds a reply to an existing Pull Request Review Thread. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., comment: The newly created reply.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 48, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addReaction ", "descriptions": " Adds a reaction to a subject. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., reaction: The reaction object., reactionGroups: The reaction groups for the subject., subject: The reactable subject.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 49, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addStar ", "descriptions": " Adds a star to a Starrable. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., starrable: The starrable.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 50, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addUpvote ", "descriptions": " Add an upvote to a discussion or discussion comment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., subject: The votable subject.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 51, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /addVerifiableDomain ", "descriptions": " Adds a verifiable domain to an owning account. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., domain: The verifiable domain that was added.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 52, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /approveDeployments ", "descriptions": " Approve all pending deployments under one or more environments. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., deployments: The affected deployments.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 53, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /approveVerifiableDomain ", "descriptions": " Approve a verifiable domain for notification delivery. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., domain: The verifiable domain that was approved.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 54, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /archiveProjectV2Item ", "descriptions": " Archives a ProjectV2Item. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., item: The item archived from the project.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 55, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /archiveRepository ", "descriptions": " Marks a repository as archived. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that was marked as archived.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 56, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /cancelEnterpriseAdminInvitation ", "descriptions": " Cancels a pending invitation for an administrator to join an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., invitation: The invitation that was canceled., message: A message confirming the result of canceling an administrator invitation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 57, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /cancelSponsorship ", "descriptions": " Cancel an active sponsorship. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The tier that was being used at the time of cancellation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 58, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /changeUserStatus ", "descriptions": " Update your status on GitHub. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., status: Your updated status.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 59, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /clearLabelsFromLabelable ", "descriptions": " Clears all labels from a labelable object. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., labelable: The item that was unlabeled.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 60, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /clearProjectV2ItemFieldValue ", "descriptions": " This mutation clears the value of a field for an item in a Project. Currentlyonly text, number, date, assignees, labels, single-select, iteration andmilestone fields are supported. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectV2Item: The updated item.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 61, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /cloneProject ", "descriptions": " Creates a new project by cloning configuration from an existing project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., jobStatusId: The id of the JobStatus for populating cloned fields., project: The new cloned project.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 62, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /cloneTemplateRepository ", "descriptions": " Create a new repository with the same files and directory structure as a template repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repository: The new repository.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 63, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /closeDiscussion ", "descriptions": " Close a discussion. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was closed.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 64, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /closeIssue ", "descriptions": " Close an issue. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was closed.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 65, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /closePullRequest ", "descriptions": " Close a pull request. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was closed.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 66, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /convertProjectCardNoteToIssue ", "descriptions": " Convert a project note card to one associated with a newly created issue. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectCard: The updated ProjectCard.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 67, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /convertPullRequestToDraft ", "descriptions": " Converts a pull request to draft. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that is now a draft.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 68, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /copyProjectV2 ", "descriptions": " Copy a project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectV2: The copied project.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 69, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createAttributionInvitation ", "descriptions": " Invites a user to claim reattributable data. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., owner: The owner scoping the reattributable data., source: The account owning the data to reattribute., target: The account which may claim the data.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 70, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createBranchProtectionRule ", "descriptions": " Create a new branch protection rule. ", "parameters": " branchProtectionRule: The newly created BranchProtectionRule., clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 71, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createCheckRun ", "descriptions": " Create a check run. ", "parameters": " checkRun: The newly created check run., clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 72, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createCheckSuite ", "descriptions": " Create a check suite. ", "parameters": " checkSuite: The newly created check suite., clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 73, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createCommitOnBranch ", "descriptions": " Appends a commit to the given branch as the authenticated user.This mutation creates a commit whose parent is the HEAD of the providedbranch and also updates that branch to point to the new commit.It can be thought of as similar to git commit.Locating a BranchCommits are appended to a branch of type Ref.This must refer to a git branch (i.e.  the fully qualified path mustbegin with refs/heads/, although including this prefix is optional.Callers may specify the branch to commit to either by its global nodeID or by passing both of repositoryNameWithOwner and refName.  Formore details see the documentation for CommittableBranch.Describing ChangesfileChanges are specified as a FilesChanges object describingFileAdditions and FileDeletions.Please see the documentation for FileChanges for more information onhow to use this argument to describe any set of file changes.AuthorshipSimilar to the web commit interface, this mutation does not supportspecifying the author or committer of the commit and will not addsupport for this in the future.A commit created by a successful execution of this mutation will beauthored by the owner of the credential which authenticates the APIrequest.  The committer will be identical to that of commits authoredusing the web interface.If you need full control over author and committer information, pleaseuse the Git Database REST API instead.Commit SigningCommits made using this mutation are automatically signed by GitHub ifsupported and will be marked as verified in the user interface. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., commit: The new commit., ref: The ref which has been updated to point to the new commit.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 74, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createDeployment ", "descriptions": " Creates a new deployment event. ", "parameters": " autoMerged: True if the default branch has been auto-merged into the deployment ref., clientMutationId: A unique identifier for the client performing the mutation., deployment: The new deployment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 75, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createDeploymentStatus ", "descriptions": " Create a deployment status. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., deploymentStatus: The new deployment status.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 76, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createDiscussion ", "descriptions": " Create a discussion. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was just created.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 77, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createEnterpriseOrganization ", "descriptions": " Creates an organization as part of an enterprise account. A personal accesstoken used to create an organization is implicitly permitted to update theorganization it created, if the organization is part of an enterprise that hasSAML enabled or uses Enterprise Managed Users. If the organization is not partof such an enterprise, and instead has SAML enabled for it individually, thetoken will then require SAML authorization to continue working against that organization. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise that owns the created organization., organization: The organization that was created.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 78, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createEnvironment ", "descriptions": " Creates an environment or simply returns it if already exists. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., environment: The new or existing environment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 79, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createIpAllowListEntry ", "descriptions": " Creates a new IP allow list entry. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., ipAllowListEntry: The IP allow list entry that was created.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 80, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createIssue ", "descriptions": " Creates a new issue. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., issue: The new issue.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 81, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createLabel ", "descriptions": " Creates a new label. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., label: The new label.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 82, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createLinkedBranch ", "descriptions": " Create a branch linked to an issue. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was linked to., linkedBranch: The new branch issue reference.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 83, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createMigrationSource ", "descriptions": " Creates a GitHub Enterprise Importer (GEI) migration source. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., migrationSource: The created migration source.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 84, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createProject ", "descriptions": " Creates a new project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., project: The new project.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 85, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createProjectV2 ", "descriptions": " Creates a new project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectV2: The new project.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 86, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createProjectV2Field ", "descriptions": " Create a new project field. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectV2Field: The new field.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 87, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createPullRequest ", "descriptions": " Create a new pull request. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The new pull request.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 88, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createRef ", "descriptions": " Create a new Git Ref. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., ref: The newly created ref.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 89, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createRepository ", "descriptions": " Create a new repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repository: The new repository.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 90, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createRepositoryRuleset ", "descriptions": " Create a repository ruleset. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., ruleset: The newly created Ruleset.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 91, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createSponsorsListing ", "descriptions": " Create a GitHub Sponsors profile to allow others to sponsor you or your organization. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., sponsorsListing: The new GitHub Sponsors profile.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 92, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createSponsorsTier ", "descriptions": " Create a new payment tier for your GitHub Sponsors profile. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The new tier.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 93, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createSponsorship ", "descriptions": " Start a new sponsorship of a maintainer in GitHub Sponsors, or reactivate a past sponsorship. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., sponsorship: The sponsorship that was started.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 94, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createSponsorships ", "descriptions": " Make many one-time sponsorships for different sponsorable users ororganizations at once. Can only sponsor those who have a public GitHubSponsors profile. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., sponsorables: The users and organizations who received a sponsorship.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 95, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createTeamDiscussion ", "descriptions": " Creates a new team discussion. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., teamDiscussion: The new discussion.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 96, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /createTeamDiscussionComment ", "descriptions": " Creates a new team discussion comment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., teamDiscussionComment: The new comment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 97, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /declineTopicSuggestion ", "descriptions": " Rejects a suggested topic for the repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., topic: The declined topic.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 98, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteBranchProtectionRule ", "descriptions": " Delete a branch protection rule. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 99, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteDeployment ", "descriptions": " Deletes a deployment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 100, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteDiscussion ", "descriptions": " Delete a discussion and all of its replies. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was just deleted.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 101, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteDiscussionComment ", "descriptions": " Delete a discussion comment. If it has replies, wipe it instead. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., comment: The discussion comment that was just deleted.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 102, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteEnvironment ", "descriptions": " Deletes an environment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 103, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteIpAllowListEntry ", "descriptions": " Deletes an IP allow list entry. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., ipAllowListEntry: The IP allow list entry that was deleted.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 104, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteIssue ", "descriptions": " Deletes an Issue object. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repository: The repository the issue belonged to.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 105, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteIssueComment ", "descriptions": " Deletes an IssueComment object. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 106, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteLabel ", "descriptions": " Deletes a label. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 107, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteLinkedBranch ", "descriptions": " Unlink a branch from an issue. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., issue: The issue the linked branch was unlinked from.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 108, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deletePackageVersion ", "descriptions": " Delete a package version. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., success: Whether or not the operation succeeded.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 109, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteProject ", "descriptions": " Deletes a project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., owner: The repository or organization the project was removed from.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 110, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteProjectCard ", "descriptions": " Deletes a project card. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., column: The column the deleted card was in., deletedCardId: The deleted card ID.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 111, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteProjectColumn ", "descriptions": " Deletes a project column. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., deletedColumnId: The deleted column ID., project: The project the deleted column was in.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 112, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteProjectV2 ", "descriptions": " Delete a project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectV2: The deleted Project.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 113, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteProjectV2Field ", "descriptions": " Delete a project field. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectV2Field: The deleted field.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 114, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteProjectV2Item ", "descriptions": " Deletes an item from a Project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., deletedItemId: The ID of the deleted item.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 115, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteProjectV2Workflow ", "descriptions": " Deletes a project workflow. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., deletedWorkflowId: The ID of the deleted workflow., projectV2: The project the deleted workflow was in.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 116, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deletePullRequestReview ", "descriptions": " Deletes a pull request review. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The deleted pull request review.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 117, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deletePullRequestReviewComment ", "descriptions": " Deletes a pull request review comment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The pull request review the deleted comment belonged to., pullRequestReviewComment: The deleted pull request review comment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 118, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteRef ", "descriptions": " Delete a Git Ref. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 119, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteRepositoryRuleset ", "descriptions": " Delete a repository ruleset. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 120, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteTeamDiscussion ", "descriptions": " Deletes a team discussion. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 121, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteTeamDiscussionComment ", "descriptions": " Deletes a team discussion comment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 122, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /deleteVerifiableDomain ", "descriptions": " Deletes a verifiable domain. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., owner: The owning account from which the domain was deleted.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 123, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /dequeuePullRequest ", "descriptions": " Remove a pull request from the merge queue. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., mergeQueueEntry: The merge queue entry of the dequeued pull request.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 124, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /disablePullRequestAutoMerge ", "descriptions": " Disable auto merge on the given pull request. ", "parameters": " actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request auto merge was disabled on.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 125, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /dismissPullRequestReview ", "descriptions": " Dismisses an approved or rejected pull request review. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The dismissed pull request review.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 126, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /dismissRepositoryVulnerabilityAlert ", "descriptions": " Dismisses the Dependabot alert. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repositoryVulnerabilityAlert: The Dependabot alert that was dismissed.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 127, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /enablePullRequestAutoMerge ", "descriptions": " Enable the default auto-merge on a pull request. ", "parameters": " actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request auto-merge was enabled on.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 128, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /enqueuePullRequest ", "descriptions": " Add a pull request to the merge queue. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., mergeQueueEntry: The merge queue entry for the enqueued pull request.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 129, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /followOrganization ", "descriptions": " Follow an organization. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., organization: The organization that was followed.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 130, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /followUser ", "descriptions": " Follow a user. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., user: The user that was followed.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 131, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /grantEnterpriseOrganizationsMigratorRole ", "descriptions": " Grant the migrator role to a user for all organizations under an enterprise account. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., organizations: The organizations that had the migrator role applied to for the given user.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 132, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /grantMigratorRole ", "descriptions": " Grant the migrator role to a user or a team. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 133, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /importProject ", "descriptions": " Creates a new project by importing columns and a list of issues/PRs. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., project: The new Project!.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 134, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /inviteEnterpriseAdmin ", "descriptions": " Invite someone to become an administrator of the enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., invitation: The created enterprise administrator invitation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 135, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /linkProjectV2ToRepository ", "descriptions": " Links a project to a repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repository: The repository the project is linked to.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 136, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /linkProjectV2ToTeam ", "descriptions": " Links a project to a team. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., team: The team the project is linked to.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 137, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /linkRepositoryToProject ", "descriptions": " Creates a repository link for a project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., project: The linked Project., repository: The linked Repository.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 138, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /lockLockable ", "descriptions": " Lock a lockable object. ", "parameters": " actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., lockedRecord: The item that was locked.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 139, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /markDiscussionCommentAsAnswer ", "descriptions": " Mark a discussion comment as the chosen answer for discussions in an answerable category. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that includes the chosen comment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 140, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /markFileAsViewed ", "descriptions": " Mark a pull request file as viewed. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 141, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /markProjectV2AsTemplate ", "descriptions": " Mark a project as a template. Note that only projects which are owned by an Organization can be marked as a template. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectV2: The project.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 142, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /markPullRequestReadyForReview ", "descriptions": " Marks a pull request ready for review. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that is ready for review.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 143, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /mergeBranch ", "descriptions": " Merge a head into a branch. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., mergeCommit: The resulting merge Commit.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 144, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /mergePullRequest ", "descriptions": " Merge a pull request. ", "parameters": " actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was merged.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 145, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /minimizeComment ", "descriptions": " Minimizes a comment on an Issue, Commit, Pull Request, or Gist. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., minimizedComment: The comment that was minimized.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 146, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /moveProjectCard ", "descriptions": " Moves a project card to another place. ", "parameters": " cardEdge: The new edge of the moved card., clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 147, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /moveProjectColumn ", "descriptions": " Moves a project column to another place. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., columnEdge: The new edge of the moved column.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 148, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /pinIssue ", "descriptions": " Pin an issue to a repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was pinned.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 149, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /publishSponsorsTier ", "descriptions": " Publish an existing sponsorship tier that is currently still a draft to a GitHub Sponsors profile. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The tier that was published.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 150, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /regenerateEnterpriseIdentityProviderRecoveryCodes ", "descriptions": " Regenerates the identity provider recovery codes for an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., identityProvider: The identity provider for the enterprise.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 151, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /regenerateVerifiableDomainToken ", "descriptions": " Regenerates a verifiable domain's verification token. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., verificationToken: The verification token that was generated.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 152, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /rejectDeployments ", "descriptions": " Reject all pending deployments under one or more environments. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., deployments: The affected deployments.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 153, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /removeAssigneesFromAssignable ", "descriptions": " Removes assignees from an assignable object. ", "parameters": " assignable: The item that was unassigned., clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 154, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /removeEnterpriseAdmin ", "descriptions": " Removes an administrator from the enterprise. ", "parameters": " admin: The user who was removed as an administrator., clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise., message: A message confirming the result of removing an administrator., viewer: The viewer performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 155, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /removeEnterpriseIdentityProvider ", "descriptions": " Removes the identity provider from an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., identityProvider: The identity provider that was removed from the enterprise.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 156, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /removeEnterpriseMember ", "descriptions": " Removes a user from all organizations within the enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise., user: The user that was removed from the enterprise., viewer: The viewer performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 157, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /removeEnterpriseOrganization ", "descriptions": " Removes an organization from the enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise., organization: The organization that was removed from the enterprise., viewer: The viewer performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 158, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /removeEnterpriseSupportEntitlement ", "descriptions": " Removes a support entitlement from an enterprise member. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of removing the support entitlement.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 159, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /removeLabelsFromLabelable ", "descriptions": " Removes labels from a Labelable object. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., labelable: The Labelable the labels were removed from.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 160, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /removeOutsideCollaborator ", "descriptions": " Removes outside collaborator from all repositories in an organization. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., removedUser: The user that was removed as an outside collaborator.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 161, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /removeReaction ", "descriptions": " Removes a reaction from a subject. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., reaction: The reaction object., reactionGroups: The reaction groups for the subject., subject: The reactable subject.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 162, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /removeStar ", "descriptions": " Removes a star from a Starrable. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., starrable: The starrable.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 163, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /removeUpvote ", "descriptions": " Remove an upvote to a discussion or discussion comment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., subject: The votable subject.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 164, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /reopenDiscussion ", "descriptions": " Reopen a discussion. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that was reopened.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 165, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /reopenIssue ", "descriptions": " Reopen a issue. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was opened.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 166, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /reopenPullRequest ", "descriptions": " Reopen a pull request. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was reopened.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 167, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /requestReviews ", "descriptions": " Set review requests on a pull request. ", "parameters": " actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that is getting requests., requestedReviewersEdge: The edge from the pull request to the requested reviewers.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 168, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /rerequestCheckSuite ", "descriptions": " Rerequests an existing check suite. ", "parameters": " checkSuite: The requested check suite., clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 169, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /resolveReviewThread ", "descriptions": " Marks a review thread as resolved. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., thread: The thread to resolve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 170, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /retireSponsorsTier ", "descriptions": " Retire a published payment tier from your GitHub Sponsors profile so it cannot be used to start new sponsorships. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., sponsorsTier: The tier that was retired.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 171, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /revertPullRequest ", "descriptions": " Create a pull request that reverts the changes from a merged pull request. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The pull request that was reverted., revertPullRequest: The new pull request that reverts the input pull request.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 172, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /revokeEnterpriseOrganizationsMigratorRole ", "descriptions": " Revoke the migrator role to a user for all organizations under an enterprise account. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., organizations: The organizations that had the migrator role revoked for the given user.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 173, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /revokeMigratorRole ", "descriptions": " Revoke the migrator role from a user or a team. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 174, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /setEnterpriseIdentityProvider ", "descriptions": " Creates or updates the identity provider for an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., identityProvider: The identity provider for the enterprise.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 175, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /setOrganizationInteractionLimit ", "descriptions": " Set an organization level interaction limit for an organization's public repositories. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., organization: The organization that the interaction limit was set for.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 176, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /setRepositoryInteractionLimit ", "descriptions": " Sets an interaction limit setting for a repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that the interaction limit was set for.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 177, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /setUserInteractionLimit ", "descriptions": " Set a user level interaction limit for an user's public repositories. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., user: The user that the interaction limit was set for.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 178, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /startOrganizationMigration ", "descriptions": " Starts a GitHub Enterprise Importer organization migration. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., orgMigration: The new organization migration.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 179, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /startRepositoryMigration ", "descriptions": " Starts a GitHub Enterprise Importer (GEI) repository migration. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repositoryMigration: The new repository migration.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 180, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /submitPullRequestReview ", "descriptions": " Submits a pending pull request review. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The submitted pull request review.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 181, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /transferEnterpriseOrganization ", "descriptions": " Transfer an organization from one enterprise to another enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., organization: The organization for which a transfer was initiated.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 182, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /transferIssue ", "descriptions": " Transfer an issue to a different repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was transferred.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 183, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unarchiveProjectV2Item ", "descriptions": " Unarchives a ProjectV2Item. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., item: The item unarchived from the project.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 184, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unarchiveRepository ", "descriptions": " Unarchives a repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that was unarchived.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 185, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unfollowOrganization ", "descriptions": " Unfollow an organization. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., organization: The organization that was unfollowed.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 186, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unfollowUser ", "descriptions": " Unfollow a user. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., user: The user that was unfollowed.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 187, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unlinkProjectV2FromRepository ", "descriptions": " Unlinks a project from a repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repository: The repository the project is no longer linked to.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 188, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unlinkProjectV2FromTeam ", "descriptions": " Unlinks a project to a team. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., team: The team the project is unlinked from.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 189, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unlinkRepositoryFromProject ", "descriptions": " Deletes a repository link from a project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., project: The linked Project., repository: The linked Repository.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 190, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unlockLockable ", "descriptions": " Unlock a lockable object. ", "parameters": " actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., unlockedRecord: The item that was unlocked.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 191, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unmarkDiscussionCommentAsAnswer ", "descriptions": " Unmark a discussion comment as the chosen answer for discussions in an answerable category. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., discussion: The discussion that includes the comment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 192, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unmarkFileAsViewed ", "descriptions": " Unmark a pull request file as viewed. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 193, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unmarkIssueAsDuplicate ", "descriptions": " Unmark an issue as a duplicate of another issue. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., duplicate: The issue or pull request that was marked as a duplicate.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 194, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unmarkProjectV2AsTemplate ", "descriptions": " Unmark a project as a template. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectV2: The project.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 195, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unminimizeComment ", "descriptions": " Unminimizes a comment on an Issue, Commit, Pull Request, or Gist. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., unminimizedComment: The comment that was unminimized.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 196, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unpinIssue ", "descriptions": " Unpin a pinned issue from a repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., issue: The issue that was unpinned.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 197, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unresolveReviewThread ", "descriptions": " Marks a review thread as unresolved. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., thread: The thread to resolve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 198, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /unsubscribeFromNotifications ", "descriptions": " Unsubscribes from notifications. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., success: Did the operation succeed?.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 199, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateBranchProtectionRule ", "descriptions": " Update a branch protection rule. ", "parameters": " branchProtectionRule: The newly created BranchProtectionRule., clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 200, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateCheckRun ", "descriptions": " Update a check run. ", "parameters": " checkRun: The updated check run., clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 201, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateCheckSuitePreferences ", "descriptions": " Modifies the settings of an existing check suite. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repository: The updated repository.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 202, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateDiscussion ", "descriptions": " Update a discussion. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., discussion: The modified discussion.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 203, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateDiscussionComment ", "descriptions": " Update the contents of a comment on a Discussion. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., comment: The modified discussion comment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 204, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseAdministratorRole ", "descriptions": " Updates the role of an enterprise administrator. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of changing the administrator's role.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 205, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseAllowPrivateRepositoryForkingSetting ", "descriptions": " Sets whether private repository forks are enabled for an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated allow private repository forking setting., message: A message confirming the result of updating the allow private repository forking setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 206, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseDefaultRepositoryPermissionSetting ", "descriptions": " Sets the base repository permission for organizations in an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated base repository permission setting., message: A message confirming the result of updating the base repository permission setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 207, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseMembersCanChangeRepositoryVisibilitySetting ", "descriptions": " Sets whether organization members with admin permissions on a repository can change repository visibility. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can change repository visibility setting., message: A message confirming the result of updating the members can change repository visibility setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 208, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseMembersCanCreateRepositoriesSetting ", "descriptions": " Sets the members can create repositories setting for an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can create repositories setting., message: A message confirming the result of updating the members can create repositories setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 209, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseMembersCanDeleteIssuesSetting ", "descriptions": " Sets the members can delete issues setting for an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can delete issues setting., message: A message confirming the result of updating the members can delete issues setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 210, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseMembersCanDeleteRepositoriesSetting ", "descriptions": " Sets the members can delete repositories setting for an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can delete repositories setting., message: A message confirming the result of updating the members can delete repositories setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 211, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseMembersCanInviteCollaboratorsSetting ", "descriptions": " Sets whether members can invite collaborators are enabled for an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can invite collaborators setting., message: A message confirming the result of updating the members can invite collaborators setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 212, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseMembersCanMakePurchasesSetting ", "descriptions": " Sets whether or not an organization owner can make purchases. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can make purchases setting., message: A message confirming the result of updating the members can make purchases setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 213, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseMembersCanUpdateProtectedBranchesSetting ", "descriptions": " Sets the members can update protected branches setting for an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can update protected branches setting., message: A message confirming the result of updating the members can update protected branches setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 214, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseMembersCanViewDependencyInsightsSetting ", "descriptions": " Sets the members can view dependency insights for an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated members can view dependency insights setting., message: A message confirming the result of updating the members can view dependency insights setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 215, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseOrganizationProjectsSetting ", "descriptions": " Sets whether organization projects are enabled for an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated organization projects setting., message: A message confirming the result of updating the organization projects setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 216, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseOwnerOrganizationRole ", "descriptions": " Updates the role of an enterprise owner with an organization. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of changing the owner's organization role.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 217, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseProfile ", "descriptions": " Updates an enterprise's profile. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The updated enterprise.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 218, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseRepositoryProjectsSetting ", "descriptions": " Sets whether repository projects are enabled for a enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated repository projects setting., message: A message confirming the result of updating the repository projects setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 219, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseTeamDiscussionsSetting ", "descriptions": " Sets whether team discussions are enabled for an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated team discussions setting., message: A message confirming the result of updating the team discussions setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 220, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnterpriseTwoFactorAuthenticationRequiredSetting ", "descriptions": " Sets whether two factor authentication is required for all users in an enterprise. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., enterprise: The enterprise with the updated two factor authentication required setting., message: A message confirming the result of updating the two factor authentication required setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 221, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateEnvironment ", "descriptions": " Updates an environment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., environment: The updated environment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 222, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateIpAllowListEnabledSetting ", "descriptions": " Sets whether an IP allow list is enabled on an owner. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., owner: The IP allow list owner on which the setting was updated.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 223, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateIpAllowListEntry ", "descriptions": " Updates an IP allow list entry. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., ipAllowListEntry: The IP allow list entry that was updated.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 224, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateIpAllowListForInstalledAppsEnabledSetting ", "descriptions": " Sets whether IP allow list configuration for installed GitHub Apps is enabled on an owner. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., owner: The IP allow list owner on which the setting was updated.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 225, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateIssue ", "descriptions": " Updates an Issue. ", "parameters": " actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., issue: The issue.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 226, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateIssueComment ", "descriptions": " Updates an IssueComment object. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., issueComment: The updated comment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 227, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateLabel ", "descriptions": " Updates an existing label. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., label: The updated label.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 228, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateNotificationRestrictionSetting ", "descriptions": " Update the setting to restrict notifications to only verified or approved domains available to an owner. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., owner: The owner on which the setting was updated.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 229, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateOrganizationAllowPrivateRepositoryForkingSetting ", "descriptions": " Sets whether private repository forks are enabled for an organization. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of updating the allow private repository forking setting., organization: The organization with the updated allow private repository forking setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 230, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateOrganizationWebCommitSignoffSetting ", "descriptions": " Sets whether contributors are required to sign off on web-based commits for repositories in an organization. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of updating the web commit signoff setting., organization: The organization with the updated web commit signoff setting.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 231, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updatePatreonSponsorability ", "descriptions": " Toggle the setting for your GitHub Sponsors profile that allows other GitHubaccounts to sponsor you on GitHub while paying for the sponsorship on Patreon.Only applicable when you have a GitHub Sponsors profile and have connectedyour GitHub account with Patreon. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., sponsorsListing: The GitHub Sponsors profile.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 232, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateProject ", "descriptions": " Updates an existing project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., project: The updated project.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 233, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateProjectCard ", "descriptions": " Updates an existing project card. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectCard: The updated ProjectCard.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 234, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateProjectColumn ", "descriptions": " Updates an existing project column. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectColumn: The updated project column.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 235, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateProjectV2 ", "descriptions": " Updates an existing project (beta). ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectV2: The updated Project.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 236, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateProjectV2Collaborators ", "descriptions": " Update the collaborators on a team or a project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., collaborators: The collaborators granted a role.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 237, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateProjectV2DraftIssue ", "descriptions": " Updates a draft issue within a Project. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., draftIssue: The draft issue updated in the project.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 238, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateProjectV2ItemFieldValue ", "descriptions": " This mutation updates the value of a field for an item in a Project. Currentlyonly single-select, text, number, date, and iteration fields are supported. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., projectV2Item: The updated item.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 239, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateProjectV2ItemPosition ", "descriptions": " This mutation updates the position of the item in the project, where the position represents the priority of an item. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., items: The items in the new order.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [uppercase found] ", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 240, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updatePullRequest ", "descriptions": " Update a pull request. ", "parameters": " actor: Identifies the actor who performed the event., clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 241, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updatePullRequestBranch ", "descriptions": " Merge or Rebase HEAD from upstream branch into pull request branch. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequest: The updated pull request.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 242, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updatePullRequestReview ", "descriptions": " Updates the body of a pull request review. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequestReview: The updated pull request review.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 243, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updatePullRequestReviewComment ", "descriptions": " Updates a pull request review comment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., pullRequestReviewComment: The updated comment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 244, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateRef ", "descriptions": " Update a Git Ref. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., ref: The updated Ref.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 245, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateRefs ", "descriptions": " Creates, updates and/or deletes multiple refs in a repository.This mutation takes a list of RefUpdates and performs these updateson the repository. All updates are performed atomically, meaning thatif one of them is rejected, no other ref will be modified.RefUpdate.beforeOid specifies that the given reference needs to pointto the given value before performing any updates. A value of0000000000000000000000000000000000000000 can be used to verify thatthe references should not exist.RefUpdate.afterOid specifies the value that the given referencewill point to after performing all updates. A value of0000000000000000000000000000000000000000 can be used to delete areference.If RefUpdate.force is set to true, a non-fast-forward updatesfor the given reference will be allowed. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 246, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateRepository ", "descriptions": " Update information about a repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repository: The updated repository.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 247, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateRepositoryRuleset ", "descriptions": " Update a repository ruleset. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., ruleset: The newly created Ruleset.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 248, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateRepositoryWebCommitSignoffSetting ", "descriptions": " Sets whether contributors are required to sign off on web-based commits for a repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., message: A message confirming the result of updating the web commit signoff setting., repository: The updated repository.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 1, "structured_endpoint": 0, "flat_endpoint_comment": "Complex Words Present in Endpoint"}
{"id": 249, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateSponsorshipPreferences ", "descriptions": " Change visibility of your sponsorship and opt in or out of email updates from the maintainer. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., sponsorship: The sponsorship that was updated.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 250, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateSubscription ", "descriptions": " Updates the state for subscribable subjects. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., subscribable: The input subscribable entity.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 251, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateTeamDiscussion ", "descriptions": " Updates a team discussion. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., teamDiscussion: The updated discussion.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 252, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateTeamDiscussionComment ", "descriptions": " Updates a discussion comment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., teamDiscussionComment: The updated comment.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 253, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateTeamReviewAssignment ", "descriptions": " Updates team review assignment. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., team: The team that was modified.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 254, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateTeamsRepository ", "descriptions": " Update team repository. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., repository: The repository that was updated., teams: The teams granted permission on the repository.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 255, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /updateTopics ", "descriptions": " Replaces the repository's topics with the given topics. ", "parameters": " clientMutationId: A unique identifier for the client performing the mutation., invalidTopicNames: Names of the provided topics that are not valid., repository: The updated repository.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 256, "api_type": "GraphQL", "api_name": "GitHub", "http_verb": "POST ", "uri": " /verifyVerifiableDomain ", "descriptions": " Verify that a verifiable domain has the expected DNS record. ", "parameters": " ", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
