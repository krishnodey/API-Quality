{"id": 1, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /oauth/v2/token ", "descriptions": " The Eats API supports OAuth 2.0. ", "parameters": "\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 2, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " v1/eats/stores/{store_id}/pos_data ", "descriptions": " Link application with a location within Uber's platform. Note that the token for this endpoint requires the eats.pos_provisioning scope. For generating a token with this scope, please refer to the Authentication and Integration Activation Guide for more information. ", "parameters": "store_id required string Example: 1d2b3c4e-5f6a-7890-ab12-c3d4e5f67890 ID of the store \n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 3, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "PATCH ", "uri": " v1/eats/stores/{store_id}/pos_data ", "descriptions": " Update an integration's configuration. Note that the token for this endpoint requires the eats.store scope. Configurations can only be updated for locations which you are already associated. ", "parameters": " store_id required string Example: 1d2b3c4e-5f6a-7890-ab12-c3d4e5f67890 ID of the store\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 4, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/eats/stores/{store_id}/pos_data ", "descriptions": " Retrieves a location configuration that is pertinent to your application. ", "parameters": " store_id required string Example: 1d2b3c4e-5f6a-7890-ab12-c3d4e5f67890 ID of the store \n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 5, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "DELETE ", "uri": " /v1/eats/stores/{store_id}/pos_data ", "descriptions": " Removes your application configuration from a store and removes access for your developer token. ", "parameters": " store_id required string Example: 1d2b3c4e-5f6a-7890-ab12-c3d4e5f67890 ID of the store\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 6, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/delivery/stores ", "descriptions": " This endpoint allows a partner to enumerate the stores that this token is authorized against. Tokens generated via client_credentials grant will return stores linked to your client ID. Tokens generated via authorization_code grant will return stores linked to the user authorizing the client ID. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 7, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/delivery/store/{store_id} ", "descriptions": " Retrieves the details of a single location. ", "parameters": " store_id required string ID of the store to retrieve\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 8, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/store/{store_id} ", "descriptions": " Allows application to update the metadata for a unique location. Only \"Contact\", \"Location\", and \"Pickup Instructions\" can be updated. ", "parameters": " store_id required string ID of the store to retrieve\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 9, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/delivery/store/{store_id}/status ", "descriptions": "The Get Store Status endpoint retrieves the orderability status of a location. ", "parameters": " store_id required string ID of the store to get status\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 10, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/store/{store_id}/update-store-status ", "descriptions": " The Set Restaurant Status endpoint sets the online status of a restaurant. ", "parameters": " store_id required string ID of the store to get status\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 11, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "PSOT ", "uri": " /v1/delivery/store/{store_id}/update-store-prep-time ", "descriptions": "Updates the preptime of a given store ", "parameters": " store_id required string A unique identifier for a store. This is the identifier that is expected to be quoted for support queries and is otherwise known as the 'store id'. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 12, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/delivery/order/{order_id} ", "descriptions": " Provides detailed information regarding an Uber Eats active order that can be expanded to provide additional order information. ", "parameters": " order_id required string A unique identifier for a given order. This is the identifier that is expected to be quoted for support queries and is otherwise known as the 'order id'.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 13, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/delivery/store/{store_id}/orders ", "descriptions": " A list with detailed information regarding Uber Eats orders for a chosen restaurant ", "parameters": " store_id required string A unique identifier for a given restaurant. This is the identifier that is expected to be quoted for support queries and is otherwise known as the 'store_id'. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 14, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/accept ", "descriptions": " Allows Acceptance of an Uber Eats Order for timing of pickup to be updated for the customer or courier. ", "parameters": " order_id required string Unique identifier of the order.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 15, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/deny ", "descriptions": " Allows an Uber Eats Order to be denied. You must supply a denial reason and can optionally supply a free form text to provide Uber further context as to why the order was unable to be accepted. ", "parameters": " order_id required string A unique identifier of the order. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 16, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/cancel ", "descriptions": " Allows cancellation of an Uber Eats Order ", "parameters": " order_id required string A unique identifier of the order.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 17, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/ready ", "descriptions": " Mark an order as ready for pickup. Merchants can call this endpoint when done preparing an order. ", "parameters": " order_id required string A unique identifier of the order.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 18, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/adjust-price ", "descriptions": " Adjusts the price of an order of an active order for an Eater and awaits confirmation from the customer. ", "parameters": " order_id required string A unique identifier of the order.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 19, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/update-ready-time ", "descriptions": " Allows updating the time that an Eats Order will be ready to be picked up by a delivery partner. This can only be called when the Order is in the Accepted State and has not been marked as READY_TO_HANDOFF in the preparation_status. This endpoint will error out if can_adjust_ready_for_pickup_time is false. ", "parameters": " order_id required string A unique identifier of the order. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 20, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/resolve-fulfillment-issues ", "descriptions": " Allows merchants to resolve fulfillment issues (e.g. out of item, cannot fulfill special instructions etc.) for a Uber Delivery Order. If successful, a customer can select to accept or adjust the cart for item, or cancel. Execution of this endpoint will be followed with order.fulfillment_issues.resolved or order.failed webhook. ", "parameters": " order_id required string A unique identifier of the order.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 21, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/order/{order_id}/delivery-partner-feedback ", "descriptions": " This endpoint allows the partner to submit delivery partner feedback. ", "parameters": " order_id required string A unique identifier of the order. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 22, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/stores/{store_id}/promotion ", "descriptions": " Create a promotion ", "parameters": " store_id required string Create single promotion by specifying the store ID (Uber UUID) \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 23, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/promotions/{promotion_id}/revoke ", "descriptions": " Revoke promotion by specifying the promotion ID ", "parameters": " promotion_id required string Revoke single promotion by specifying the promotion ID\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 24, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " v1/delivery/promotions/{promotion_id} ", "descriptions": " Get single promotion metadata by specifying the promotion ID. ", "parameters": " promotion_id required string Revoke single promotion by specifying the promotion ID \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 25, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/delivery/stores/{store_id}/promotions ", "descriptions": " Provides a list of all promotions existing on a store filtered on state and time range. ", "parameters": " store_id required string Example: 12345f91-c8b1-42a3-bbb5-e1739325f637 A unique identifier for a given store. This is the identifier that is expected to be quoted for support queries and is otherwise known as the 'store id'.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 26, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v2/eats/stores/{store_id}/menus ", "descriptions": " This Get Menu endpoint allows a developer pull the entire menu for a specific store. Note, this response may be very large. ", "parameters": " store_id string Unique identifier representing a store.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 27, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "PUT ", "uri": " /v2/eats/stores/{store_id}/menus ", "descriptions": " This Upload Menu endpoint allows a developer to create or override the entire menu for a specific store. ", "parameters": " store_id string Unique identifying string for a restaurant on Uber Eats, provided by Uber.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 28, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v2/eats/stores/{store_id}/menus/items/{item_id} ", "descriptions": " This Update Item endpoint updates an individual item within a menu. This allows you to make smaller edits without needing to send the entire menu. This endpoint performs sparse updates, meaning that it will only update a field if it is specified. ", "parameters": " store_id string Unique identifier representing a store. item_id\tstring\tUnique identifier representing an item.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 29, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/eats/report ", "descriptions": " This endpoint will allow a developer to request standardized batch reports (e.g. Payment Details Report) to be generated by Uber Eats. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 30, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/eats/byoc/restaurants/orders/event/location ", "descriptions": " This endpoint handles the ingestion of live location of the courier for BYOC partner. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 31, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v2/eats/order/{order_id} ", "descriptions": " This endpoint retrieves all details for a single order on Uber Eats. ", "parameters": " order_id UUID Unique identifying string for an order on Uber Eats. Provide this id when inquiring about a specific order. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 32, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/eats/stores/{store_id}/created-orders ", "descriptions": " This endpoint allows a developer to retrieve all orders for a given restaurant that are in the CREATED state.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 33, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/eats/stores/{store_id}/canceled-orders ", "descriptions": " This endpoint allows a developer to retrieve all orders for a given restaurant that are in the CANCELED state within the last 2 hours. ", "parameters": " store_id string Unique identifying string for a restaurant on Uber Eats, provided by Uber. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 34, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/eats/orders/{order_id}/accept_pos_order ", "descriptions": " This endpoint allows a developer to accept an order on behalf of a merchant. You must be the store's nominated order manager app to call this endpoint. ", "parameters": " order_id UUID Unique identifier representing an order on Uber Eats. \n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 35, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/eats/orders/{order_id}/deny_pos_order ", "descriptions": " This endpoint allows a developer to reject an order coming from Uber on behalf of a merchant.", "parameters": " order_id string Unique identifier representing an order on Uber Eats. \n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 36, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/eats/orders/{order_id}/cancel ", "descriptions": " This endpoint allows a developer to cancel live orders by their UUID. ", "parameters": " order_id string Unique identifying string for an order on Uber Eats \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 37, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "PATCH ", "uri": " /v2/eats/orders/{order_id}/cart ", "descriptions": " This Patch Cart endpoint allows a developer to update the shopping cart for an order. ", "parameters": " order_id string Unique identifying string for an order on Uber Eats. Typically referred to as the \"Order UUID\". Provide this id when inquiring about a specific order.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 38, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/eats/orders/{order_id}/restaurantdelivery/status ", "descriptions": " For orders that are delivered by merchant-coordinated couriers, the Update Delivery Status endpoint allows a developer to mark the delivery status of an order as 'started', 'arriving', or 'delivered'.", "parameters": " order_id string Unique identifier representing an order on Uber Eats. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 39, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/eats/stores/{store_id} ", "descriptions": " This Get Store Details endpoint allows a developer pull the metadata about a specific store. ", "parameters": " store_id string Unique identifier representing a store.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 40, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/eats/stores ", "descriptions": " This endpoint allows a partner to enumerate the stores that this access token is authorized against.", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 41, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/eats/store/{store_id}/status ", "descriptions": " This Get Restaurant Status endpoint retrieves the online status of a restaurant. ", "parameters": " store_id string Unique identifier representing a store. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 42, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/eats/store/{store_id}/status ", "descriptions": " This Set Restaurant Status endpoint sets the online status of a restaurant. ", "parameters": " store_id string Unique identifier representing a store.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 43, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "GET ", "uri": " /v1/eats/stores/{store_id}/holiday-hours ", "descriptions": " This endpoint allows a developer to retrieve the holiday hours for a given restaurant. ", "parameters": " store_id string Unique identifying string for a restaurant on Uber Eats, provided by Uber. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 44, "api_type": "GraphQL", "api_name": "UberEats", "http_verb": "POST ", "uri": " /v1/eats/stores/{store_id}/holiday-hours ", "descriptions": " store_idstring Unique identifying string for a restaurant on Uber Eats, provided by Uber.", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
