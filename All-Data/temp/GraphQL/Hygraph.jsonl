{"id": 1, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "POST ", "uri": " /v2/models ", "descriptions": " Create models\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 2, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "PATCH ", "uri": " /v2/models/{model_id}", "descriptions": "You can at any time update the settings, and Preview URLs for your content models from within the schema editor.\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 3, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "DELETE ", "uri": " /v2/models/{model_id} ", "descriptions": " For each of the content models you have created, you can choose to update, or delete from the schema editor.Deleting a model will also delete all of the content entries.\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 4, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "GET ", "uri": " /v2/post/{id} ", "descriptions": "  For each of the content models you have created, you can choose to update, or delete from the schema editor. Deleting a model will also delete all of the content entries.The post query is what you would use to fetch one entry from the CMS. You can fetch an individual entry by id, or any unique non-localized field defined in your content type.\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 5, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "GET ", "uri": " /v2/posts/{id} ", "descriptions": " The posts query is what you should use to fetch multiple entries from the CMS.\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 6, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "GET ", "uri": " /v2/posts/{id}/comments/{id} ", "descriptions": " Imagine posts have a one to many relation with comments. With GraphQL you can query the related comments in the same request. Here we will get all posts, and their comments.\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 7, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "GET ", "uri": " /v2/post/{id}/local/{id} ", "descriptions": " When fetching one or more entry, you can also fetch the localized entries. The default locale is set to en.\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 8, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "GET ", "uri": " /v2/pages/{id}/pageElements ", "descriptions": "You can at any time update the settings, and Preview URLs for your content models from within the schema editor.\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 9, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "DELETE ", "uri": " /v2/models/{model_id} ", "descriptions": " For each of the content models you have created, you can choose to update, or delete from the schema editor.Deleting a model will also delete all of the content entries.\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 10, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "GET ", "uri": " /v2/post/{id} ", "descriptions": "  For each of the content models you have created, you can choose to update, or delete from the schema editor. Deleting a model will also delete all of the content entries.The post query is what you would use to fetch one entry from the CMS. You can fetch an individual entry by id, or any unique non-localized field defined in your content type.\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 11, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "GET ", "uri": " /v2/posts/{id} ", "descriptions": " The posts query is what you should use to fetch multiple entries from the CMS.\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 12, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "GET ", "uri": " /v2/posts/{id}/comments/{id} ", "descriptions": " Imagine posts have a one to many relation with comments. With GraphQL you can query the related comments in the same request. Here we will get all posts, and their comments.\n", "parameters": "", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 13, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "GET ", "uri": " /v2/{projectId}/{environment} ", "descriptions": " Regular read & write endpoint ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 14, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "GET ", "uri": " /content/{projectId}/{environment} ", "descriptions": " High performance endpoint ", "parameters": "\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 15, "api_type": "GraphQL", "api_name": "Hygraph", "http_verb": "GET ", "uri": " /v2/{projectId}/master ", "descriptions": "  Each environment has its own API endpoint, with the alias of the environment appended to the URL. ", "parameters": " ", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "Tidy Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Less than 3 nodes present in endpoint", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
