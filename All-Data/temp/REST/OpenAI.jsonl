{"id": 1, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/audio/speech ", "descriptions": " Generates audio from the input text. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 2, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/audio/transcriptions ", "descriptions": " Transcribes audio into the input language. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 3, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/audio/translations ", "descriptions": " Translates audio into English. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 4, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/chat/completions ", "descriptions": " Creates a model response for the given chat conversation.", "parameters": "\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 5, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/embeddings ", "descriptions": " Creates an embedding vector representing the input text. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 6, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/fine_tuning/jobs ", "descriptions": " Creates a fine-tuning job which begins the process of creating a new model from a given dataset. ", "parameters": " \n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 7, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/fine_tuning/jobs ", "descriptions": " List your organization's fine-tuning jobs ", "parameters": " \n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 8, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/fine_tuning/jobs/{fine_tuning_job_id}/events ", "descriptions": " Get status updates for a fine-tuning job. ", "parameters": " fine_tuning_job_id string Required The ID of the fine-tuning job.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 9, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/fine_tuning/jobs/{fine_tuning_job_id}/checkpoints ", "descriptions": " List checkpoints for a fine-tuning job. ", "parameters": " fine_tuning_job_id string Required The ID of the fine-tuning job.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 10, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/fine_tuning/jobs/{fine_tuning_job_id} ", "descriptions": " Get info about a fine-tuning job. ", "parameters": " fine_tuning_job_id string Required The ID of the fine-tuning job.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 11, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/fine_tuning/jobs/{fine_tuning_job_id}/cancel ", "descriptions": " Immediately cancel a fine-tune job. ", "parameters": "fine_tuning_job_id string Required The ID of the fine-tuning job to cancel.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 12, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/batches ", "descriptions": " Creates and executes a batch from an uploaded file of requests ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 13, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/batches/{batch_id} ", "descriptions": " Retrieves a batch. ", "parameters": " batch_id string Required The ID of the batch to retrieve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 14, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/batches/{batch_id}/cancel ", "descriptions": " Cancels an in-progress batch. The batch will be in status cancelling for up to 10 minutes, before changing to cancelled, where it will have partial results (if any) available in the output file ", "parameters": " batch_id string Required The ID of the batch to cancel. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 15, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/batches ", "descriptions": " List your organization's batches. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 16, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/files ", "descriptions": " Upload a file that can be used across various endpoints. Individual files can be up to 512 MB, and the size of all files uploaded by one organization can be up to 100 GB. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 17, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/files ", "descriptions": " Returns a list of files that belong to the user's organization. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 18, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/files/{file_id} ", "descriptions": " Returns information about a specific file. ", "parameters": "\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 19, "api_type": "REST", "api_name": "OpenAI", "http_verb": "DELETE ", "uri": " /v1/files/{file_id} ", "descriptions": " Delete a file. ", "parameters": " file_id string Required The ID of the file to use for this request. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 20, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET  ", "uri": " /v1/files/{file_id}/content ", "descriptions": " Returns the contents of the specified file. ", "parameters": " file_id string Required The ID of the file to use for this request. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 21, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/uploads ", "descriptions": " Creates an intermediate Upload object that you can add Parts to. Currently, an Upload can accept at most 8 GB in total and expires after an hour after you create it. ", "parameters": "\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 22, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/uploads/{upload_id}/parts ", "descriptions": " Adds a Part to an Upload object. A Part represents a chunk of bytes from the file you are trying to upload. Each Part can be at most 64 MB, and you can add Parts until you hit the Upload maximum of 8 GB. ", "parameters": "  upload_id string Required The ID of the Upload.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 23, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/uploads/{upload_id}/complete ", "descriptions": " Completes the Upload. Within the returned Upload object, there is a nested File object that is ready to use in the rest of the platform. You can specify the order of the Parts by passing in an ordered list of the Part IDs. ", "parameters": " upload_id string Required The ID of the Upload.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 24, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/uploads/{upload_id}/cancel ", "descriptions": " Cancels the Upload. No Parts may be added after an Upload is cancelled. ", "parameters": " upload_id string Required The ID of the Upload. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 25, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/images/generations ", "descriptions": " Creates an image given a prompt. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 26, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/images/edits ", "descriptions": " Creates an edited or extended image given an original image and a prompt. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 27, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/images/variations ", "descriptions": " Creates a variation of a given image. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 28, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/models ", "descriptions": " Lists the currently available models, and provides basic information about each one such as the owner and availability. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 29, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/models/{model} ", "descriptions": " Retrieves a model instance, providing basic information about the model such as the owner and permissioning. ", "parameters": " model string Required The ID of the model to use for this request \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 30, "api_type": "REST", "api_name": "OpenAI", "http_verb": "DELETE ", "uri": " /v1/models/{model} ", "descriptions": " Delete a fine-tuned model. You must have the Owner role in your organization to delete a model. ", "parameters": " model string Required The ID of the model to use for this request \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 31, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/moderations ", "descriptions": " Classifies if text is potentially harmful. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Regular Endpoints", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 32, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/assistants ", "descriptions": " Create an assistant with a model and instructions. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 33, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/assistants ", "descriptions": " Returns a list of assistants. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 34, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/assistants/{assistant_id} ", "descriptions": " Retrieves an assistant. ", "parameters": " assistant_id string Required The ID of the assistant to retrieve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 35, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/assistants/{assistant_id} ", "descriptions": " Modifies an assistant. ", "parameters": " assistant_id string Required The ID of the assistant to retrieve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 36, "api_type": "REST", "api_name": "OpenAI", "http_verb": "DELETE ", "uri": " /v1/assistants/{assistant_id} ", "descriptions": " Delete an assistant. ", "parameters": " assistant_id string Required The ID of the assistant to retrieve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 37, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/threads ", "descriptions": " Create a thread. ", "parameters": " \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 38, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/threads/{thread_id} ", "descriptions": " Retrieves a thread. ", "parameters": " thread_id string Required The ID of the thread to retrieve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 39, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/threads/{thread_id} ", "descriptions": " Modifies a thread. ", "parameters": " thread_id string Required The ID of the thread to retrieve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 40, "api_type": "REST", "api_name": "OpenAI", "http_verb": "DELETE ", "uri": " /v1/threads/{thread_id} ", "descriptions": " Delete a thread.", "parameters": " thread_id string Required The ID of the thread to retrieve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 41, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/threads/{thread_id}/messages ", "descriptions": " Create a message. ", "parameters": " thread_id string Required The ID of the thread to retrieve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 42, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/threads/{thread_id}/messages ", "descriptions": " Returns a list of messages for a given thread. ", "parameters": " thread_id string Required The ID of the thread to retrieve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 43, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/threads/{thread_id}/messages/{message_id} ", "descriptions": " Retrieve a message. ", "parameters": " thread_id string Required The ID of the thread to which this message belongs. message_id string Required The ID of the message to retrieve. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 44, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/threads/{thread_id}/messages/{message_id} ", "descriptions": " Modifies a message. ", "parameters": " thread_id string Required The ID of the thread to which this message belongs. message_id string Required The ID of the message to retrieve. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 45, "api_type": "REST", "api_name": "OpenAI", "http_verb": "DELETE ", "uri": " /v1/threads/{thread_id}/messages/{message_id} ", "descriptions": " Deletes a message.", "parameters": " thread_id string Required The ID of the thread to which this message belongs. message_id string Required The ID of the message to retrieve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 46, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/threads/{thread_id}/runs ", "descriptions": " Create a run. ", "parameters": " thread_id string Required The ID of the thread to run.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 47, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/threads/runs ", "descriptions": " Create a thread and run it in one request. ", "parameters": "\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 48, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/threads/{thread_id}/runs ", "descriptions": " Returns a list of runs belonging to a thread. ", "parameters": " thread_id string Required The ID of the thread the run belongs to. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 49, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/threads/{thread_id}/runs/{run_id} ", "descriptions": " Retrieves a run. ", "parameters": " thread_id string Required The ID of the thread that was run. run_id string Required The ID of the run to retrieve. \n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 50, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/threads/{thread_id}/runs/{run_id} ", "descriptions": " Modifies a run. ", "parameters": " thread_id string Required The ID of the thread that was run. run_id string Required The ID of the run to modify.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 51, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/threads/{thread_id}/runs/{run_id}/submit_tool_outputs ", "descriptions": " When a run has the status: \"requires_action\" and required_action.type is submit_tool_outputs, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request. ", "parameters": " thread_id string Required The ID of the thread to which this run belongs. run_id string Required The ID of the run that requires the tool output submission. \n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 52, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/threads/{thread_id}/runs/{run_id}/cancel ", "descriptions": " Cancels a run that is in_progress.", "parameters": " thread_id string Required The ID of the thread to which this run belongs. run_id string Required The ID of the run that requires the tool output submission.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 53, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/threads/{thread_id}/runs/{run_id}/steps ", "descriptions": " Returns a list of run steps belonging to a run. ", "parameters": " thread_id string Required The ID of the thread the run and run steps belong to. run_id string Required The ID of the run the run steps belong to.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 54, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/threads/{thread_id}/runs/{run_id}/steps/{step_id} ", "descriptions": " Retrieves a run step. ", "parameters": "  thread_id string Required The ID of the thread to which the run and run step belongs. run_id string Required The ID of the run to which the run step belongs. step_id string Required The ID of the run step to retrieve.\n", "amorphous_uri": 0, "tidy_uri": 1, "amorphous_comment": "", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 1, "consistent_archetype": 0, "inconsistent_archetype_comment": "Plural Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 55, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/vector_stores ", "descriptions": " Create a vector store. ", "parameters": "\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 56, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/vector_stores ", "descriptions": " Returns a list of vector stores. ", "parameters": "\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Regular Endpoints]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 57, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/vector_stores/{vector_store_id} ", "descriptions": " Retrieves a vector store. ", "parameters": " vector_store_id string Required The ID of the vector store to retrieve.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 58, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/vector_stores/{vector_store_id} ", "descriptions": " Modifies a vector store. ", "parameters": " vector_store_id string Required The ID of the vector store to modify. \n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 59, "api_type": "REST", "api_name": "OpenAI", "http_verb": "DELETE ", "uri": " /v1/vector_stores/{vector_store_id} ", "descriptions": " Delete a vector store.", "parameters": "", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 60, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/vector_stores/{vector_store_id}/files ", "descriptions": " Create a vector store file by attaching a File to a vector store. ", "parameters": " vector_store_id string Required The ID of the vector store for which to create a File.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 61, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/vector_stores/{vector_store_id}/files ", "descriptions": " Returns a list of vector store files. ", "parameters": " vector_store_id string Required The ID of the vector store that the files belong to.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 62, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/vector_stores/{vector_store_id}/files/{file_id} ", "descriptions": " Retrieves a vector store file. ", "parameters": "  vector_store_id string Required The ID of the vector store that the file belongs to. file_id string Required The ID of the file being retrieved.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 63, "api_type": "REST", "api_name": "OpenAI", "http_verb": "DELETE ", "uri": " /v1/vector_stores/{vector_store_id}/files/{file_id} ", "descriptions": " Delete a vector store file. This will remove the file from the vector store but the file itself will not be deleted. To delete the file, use the delete file endpoint. ", "parameters": " vector_store_id string Required The ID of the vector store that the file belongs to. file_id string Required The ID of the file to delete.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 64, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/vector_stores/{vector_store_id}/file_batches ", "descriptions": " Create a vector store file batch. ", "parameters": " vector_store_id string Required The ID of the vector store for which to create a File Batch.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 65, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/vector_stores/{vector_store_id}/file_batches/{batch_id} ", "descriptions": " Retrieves a vector store file batch. ", "parameters": " vector_store_id string Required The ID of the vector store for which to create a File Batch.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 66, "api_type": "REST", "api_name": "OpenAI", "http_verb": "POST ", "uri": " /v1/vector_stores/{vector_store_id}/file_batches/{batch_id}/cancel ", "descriptions": " Cancel a vector store file batch. This attempts to cancel the processing of files in this batch as soon as possible. ", "parameters": "  vector_store_id string Required The ID of the vector store that the file batch belongs to. batch_id string Required The ID of the file batch to cancel.\n", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 1, "filtering_endpoint": 0, "non-filtering_comment": "Non-Filtering Endpoint", "parameter_tunneling": 1, "parameter_adherence": 0, "parameter_tunneling_comment": "Parameter Tunneling", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
{"id": 67, "api_type": "REST", "api_name": "OpenAI", "http_verb": "GET ", "uri": " /v1/vector_stores/{vector_store_id}/file_batches/{batch_id}/files ", "descriptions": " Returns a list of vector store files in a batch. ", "parameters": "  vector_store_id string Required The ID of the vector store that the files belong to. batch_id string Required The ID of the file batch that the files belong to.", "amorphous_uri": 1, "tidy_uri": 0, "amorphous_comment": " [underscore found] ", "non-filtering_endpoint": 0, "filtering_endpoint": 1, "non-filtering_comment": "Filtering Endpoint", "parameter_tunneling": 0, "parameter_adherence": 1, "parameter_tunneling_comment": "Parameter Adherence", "inconsistent_archetype": 0, "consistent_archetype": 1, "inconsistent_archetype_comment": "Singular Nouns Found in Consecutive Nodes", "identifier_ambiguity": 0, "identifier_annotation": 1, "identifier_ambiguity_comment": "[Identifier is Enclosed in {} or <> or Starts with :]", "flat_endpoint": 0, "structured_endpoint": 1, "flat_endpoint_comment": "Structed Endpoint"}
